{"xy_tuned_train_val": {"_type": "table-file", "sha256": "ddd8a80f9690eba1034cf3330de298f822eca58beb50d760631d8e6fee479d99", "size": 1240, "artifact_path": "wandb-client-artifact://wzznpqlkjaj4plled4tsczkcj2l4uykmfagshwwv49j2yq8lez437y33jdc6oxzbdj2vree0eyevarbszi9uyj9gb3ng74rt4boqbhwlmfunrlidkwfnvithui95c4yi:latest/xy_tuned_train_val.table.json", "_latest_artifact_path": "wandb-client-artifact://wzznpqlkjaj4plled4tsczkcj2l4uykmfagshwwv49j2yq8lez437y33jdc6oxzbdj2vree0eyevarbszi9uyj9gb3ng74rt4boqbhwlmfunrlidkwfnvithui95c4yi:latest/xy_tuned_train_val.table.json", "path": "media/table/xy_tuned_train_val_0_ddd8a80f9690eba1034c.table.json", "ncols": 10, "nrows": 15}, "_timestamp": 1706890311.8757277, "_runtime": 51.37506055831909, "_step": 11, "hyperparameter_range": "    def optuna_hyperparameter_suggest(self, trial):\n        hyperparameters = {}\n\n        # Suggest hyperparameters\n        n_layers = trial.suggest_int(\"n_layers\", 1, 3)\n        hidden_layer_sizes = tuple(\n            trial.suggest_int(f\"n_units_l{i}\", 10, 100) for i in range(n_layers)\n        )\n\n        # Dynamic hidden layer sizes based on the number of layers\n        hyperparameters[\"hidden_layer_sizes\"] = hidden_layer_sizes\n\n        # Other hyperparameters\n        hyperparameters[\"activation\"] = \"relu\"\n        # hyperparameters[\"solver\"] = \"lbfgs\"\n        hyperparameters[\"max_iter\"] = 500\n        #     \"activation\", [\"identity\", \"logistic\", \"tanh\", \"relu\"\n        # hyperparameters[\"activation\"] = trial.suggest_categorical(\n        #     \"activation\", [\"identity\", \"logistic\", \"tanh\", \"relu\"]\n        # )\n        # hyperparameters[\"solver\"] = trial.suggest_categorical(\n        #     \"solver\", [\"lbfgs\", \"sgd\", \"adam\"]\n        # )\n        # hyperparameters[\"alpha\"] = trial.suggest_float(\"alpha\", 1e-5, 1e-1, log=True)\n        # hyperparameters[\"learning_rate\"] = trial.suggest_categorical(\n        #     \"learning_rate\", [\"constant\", \"invscaling\", \"adaptive\"]\n        # )\n        # hyperparameters[\"max_iter\"] = trial.suggest_int(\"max_iter\", 100, 500)\n\n        return hyperparameters\n", "score": 0.8170006163100659, "_wandb": {"runtime": 53}}