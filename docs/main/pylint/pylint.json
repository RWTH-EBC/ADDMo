{
    "messages": [
        {
            "type": "convention",
            "module": "ADDMo",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "__init__.py",
            "symbol": "invalid-name",
            "message": "Module name \"ADDMo\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "exe_model_testing",
            "obj": "",
            "line": 17,
            "column": 0,
            "path": "addmo_examples/executables/exe_model_testing.py",
            "symbol": "line-too-long",
            "message": "Line too long (102/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "exe_model_testing",
            "obj": "",
            "line": 19,
            "column": 0,
            "path": "addmo_examples/executables/exe_model_testing.py",
            "symbol": "line-too-long",
            "message": "Line too long (109/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "exe_model_testing",
            "obj": "",
            "line": 26,
            "column": 0,
            "path": "addmo_examples/executables/exe_model_testing.py",
            "symbol": "line-too-long",
            "message": "Line too long (162/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "exe_model_testing",
            "obj": "",
            "line": 27,
            "column": 0,
            "path": "addmo_examples/executables/exe_model_testing.py",
            "symbol": "line-too-long",
            "message": "Line too long (157/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "exe_model_testing",
            "obj": "",
            "line": 28,
            "column": 0,
            "path": "addmo_examples/executables/exe_model_testing.py",
            "symbol": "line-too-long",
            "message": "Line too long (120/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "exe_model_testing",
            "obj": "",
            "line": 29,
            "column": 0,
            "path": "addmo_examples/executables/exe_model_testing.py",
            "symbol": "line-too-long",
            "message": "Line too long (129/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "exe_model_testing",
            "obj": "",
            "line": 30,
            "column": 0,
            "path": "addmo_examples/executables/exe_model_testing.py",
            "symbol": "line-too-long",
            "message": "Line too long (107/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "exe_model_testing",
            "obj": "",
            "line": 34,
            "column": 0,
            "path": "addmo_examples/executables/exe_model_testing.py",
            "symbol": "line-too-long",
            "message": "Line too long (151/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "exe_model_testing",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo_examples/executables/exe_model_testing.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "warning",
            "module": "exe_model_testing",
            "obj": "",
            "line": 29,
            "column": 4,
            "path": "addmo_examples/executables/exe_model_testing.py",
            "symbol": "redefined-builtin",
            "message": "Redefining built-in 'dir'",
            "message-id": "W0622"
        },
        {
            "type": "error",
            "module": "exe_model_testing",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "addmo_examples/executables/exe_model_testing.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s4_model_testing.model_testing'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "exe_model_testing",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "addmo_examples/executables/exe_model_testing.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.load_save_utils'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "exe_model_testing",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "addmo_examples/executables/exe_model_testing.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.definitions'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "exe_model_testing",
            "obj": "exe_model_test",
            "line": 7,
            "column": 0,
            "path": "addmo_examples/executables/exe_model_testing.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "warning",
            "module": "exe_model_testing",
            "obj": "exe_model_test",
            "line": 7,
            "column": 19,
            "path": "addmo_examples/executables/exe_model_testing.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'dir' from outer scope (line 29)",
            "message-id": "W0621"
        },
        {
            "type": "warning",
            "module": "exe_model_testing",
            "obj": "exe_model_test",
            "line": 7,
            "column": 24,
            "path": "addmo_examples/executables/exe_model_testing.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'input_data_path' from outer scope (line 32)",
            "message-id": "W0621"
        },
        {
            "type": "warning",
            "module": "exe_model_testing",
            "obj": "exe_model_test",
            "line": 7,
            "column": 41,
            "path": "addmo_examples/executables/exe_model_testing.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'data_tuning_type' from outer scope (line 33)",
            "message-id": "W0621"
        },
        {
            "type": "warning",
            "module": "exe_model_testing",
            "obj": "exe_model_test",
            "line": 7,
            "column": 59,
            "path": "addmo_examples/executables/exe_model_testing.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'input_tuned_data_path' from outer scope (line 34)",
            "message-id": "W0621"
        },
        {
            "type": "warning",
            "module": "exe_model_testing",
            "obj": "exe_model_test",
            "line": 11,
            "column": 9,
            "path": "addmo_examples/executables/exe_model_testing.py",
            "symbol": "unspecified-encoding",
            "message": "Using open without explicitly specifying an encoding",
            "message-id": "W1514"
        },
        {
            "type": "convention",
            "module": "exe_model_testing",
            "obj": "exe_model_test",
            "line": 11,
            "column": 35,
            "path": "addmo_examples/executables/exe_model_testing.py",
            "symbol": "invalid-name",
            "message": "Variable name \"f\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "exe_model_testing",
            "obj": "",
            "line": 29,
            "column": 4,
            "path": "addmo_examples/executables/exe_model_testing.py",
            "symbol": "invalid-name",
            "message": "Constant name \"dir\" doesn't conform to UPPER_CASE naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "exe_model_testing",
            "obj": "",
            "line": 33,
            "column": 4,
            "path": "addmo_examples/executables/exe_model_testing.py",
            "symbol": "invalid-name",
            "message": "Constant name \"data_tuning_type\" doesn't conform to UPPER_CASE naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "exe_model_testing",
            "obj": "",
            "line": 34,
            "column": 4,
            "path": "addmo_examples/executables/exe_model_testing.py",
            "symbol": "invalid-name",
            "message": "Constant name \"input_tuned_data_path\" doesn't conform to UPPER_CASE naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "exe_model_testing",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "addmo_examples/executables/exe_model_testing.py",
            "symbol": "unused-import",
            "message": "Unused return_results_dir_model_tuning imported from addmo.util.definitions",
            "message-id": "W0611"
        },
        {
            "type": "convention",
            "module": "exe_data_insights",
            "obj": "",
            "line": 7,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_insights.py",
            "symbol": "line-too-long",
            "message": "Line too long (124/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "exe_data_insights",
            "obj": "",
            "line": 8,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_insights.py",
            "symbol": "line-too-long",
            "message": "Line too long (105/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "exe_data_insights",
            "obj": "",
            "line": 23,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_insights.py",
            "symbol": "line-too-long",
            "message": "Line too long (109/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "exe_data_insights",
            "obj": "",
            "line": 25,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_insights.py",
            "symbol": "line-too-long",
            "message": "Line too long (165/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "exe_data_insights",
            "obj": "",
            "line": 46,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_insights.py",
            "symbol": "line-too-long",
            "message": "Line too long (139/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "exe_data_insights",
            "obj": "",
            "line": 72,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_insights.py",
            "symbol": "line-too-long",
            "message": "Line too long (137/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "exe_data_insights",
            "obj": "",
            "line": 75,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_insights.py",
            "symbol": "line-too-long",
            "message": "Line too long (116/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "exe_data_insights",
            "obj": "",
            "line": 85,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_insights.py",
            "symbol": "line-too-long",
            "message": "Line too long (186/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "exe_data_insights",
            "obj": "",
            "line": 95,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_insights.py",
            "symbol": "line-too-long",
            "message": "Line too long (148/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "exe_data_insights",
            "obj": "",
            "line": 117,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_insights.py",
            "symbol": "line-too-long",
            "message": "Line too long (133/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "exe_data_insights",
            "obj": "",
            "line": 119,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_insights.py",
            "symbol": "line-too-long",
            "message": "Line too long (165/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "exe_data_insights",
            "obj": "",
            "line": 128,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_insights.py",
            "symbol": "line-too-long",
            "message": "Line too long (230/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "exe_data_insights",
            "obj": "",
            "line": 155,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_insights.py",
            "symbol": "line-too-long",
            "message": "Line too long (109/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "exe_data_insights",
            "obj": "",
            "line": 157,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_insights.py",
            "symbol": "line-too-long",
            "message": "Line too long (165/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "exe_data_insights",
            "obj": "",
            "line": 186,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_insights.py",
            "symbol": "line-too-long",
            "message": "Line too long (133/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "exe_data_insights",
            "obj": "",
            "line": 188,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_insights.py",
            "symbol": "line-too-long",
            "message": "Line too long (165/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "exe_data_insights",
            "obj": "",
            "line": 208,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_insights.py",
            "symbol": "line-too-long",
            "message": "Line too long (114/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "exe_data_insights",
            "obj": "",
            "line": 217,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_insights.py",
            "symbol": "line-too-long",
            "message": "Line too long (206/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "exe_data_insights",
            "obj": "",
            "line": 218,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_insights.py",
            "symbol": "line-too-long",
            "message": "Line too long (116/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "exe_data_insights",
            "obj": "",
            "line": 219,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_insights.py",
            "symbol": "line-too-long",
            "message": "Line too long (110/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "exe_data_insights",
            "obj": "",
            "line": 220,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_insights.py",
            "symbol": "line-too-long",
            "message": "Line too long (104/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "exe_data_insights",
            "obj": "",
            "line": 221,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_insights.py",
            "symbol": "line-too-long",
            "message": "Line too long (128/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "exe_data_insights",
            "obj": "",
            "line": 224,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_insights.py",
            "symbol": "trailing-newlines",
            "message": "Trailing newlines",
            "message-id": "C0305"
        },
        {
            "type": "warning",
            "module": "exe_data_insights",
            "obj": "",
            "line": 217,
            "column": 140,
            "path": "addmo_examples/executables/exe_data_insights.py",
            "symbol": "fixme",
            "message": "Todo: Note for user: pls check input data path inside the exe func",
            "message-id": "W0511"
        },
        {
            "type": "convention",
            "module": "exe_data_insights",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_insights.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "convention",
            "module": "exe_data_insights",
            "obj": "",
            "line": 2,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_insights.py",
            "symbol": "multiple-imports",
            "message": "Multiple imports on one line (pandas, csv)",
            "message-id": "C0410"
        },
        {
            "type": "error",
            "module": "exe_data_insights",
            "obj": "",
            "line": 2,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_insights.py",
            "symbol": "import-error",
            "message": "Unable to import 'pandas'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "exe_data_insights",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_insights.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s5_insights.model_plots.time_series'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "exe_data_insights",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_insights.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s5_insights.model_plots.parallel_plots'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "exe_data_insights",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_insights.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.plotting_utils'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "exe_data_insights",
            "obj": "",
            "line": 7,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_insights.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s5_insights.model_plots.carpet_plots'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "exe_data_insights",
            "obj": "",
            "line": 8,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_insights.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.definitions'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "exe_data_insights",
            "obj": "",
            "line": 9,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_insights.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.load_save'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "exe_data_insights",
            "obj": "",
            "line": 10,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_insights.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.models.model_factory'",
            "message-id": "E0401"
        },
        {
            "type": "warning",
            "module": "exe_data_insights",
            "obj": "exe_time_series_plot",
            "line": 12,
            "column": 25,
            "path": "addmo_examples/executables/exe_data_insights.py",
            "symbol": "redefined-builtin",
            "message": "Redefining built-in 'dir'",
            "message-id": "W0622"
        },
        {
            "type": "warning",
            "module": "exe_data_insights",
            "obj": "exe_time_series_plot",
            "line": 12,
            "column": 41,
            "path": "addmo_examples/executables/exe_data_insights.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'plot_dir' from outer scope (line 211)",
            "message-id": "W0621"
        },
        {
            "type": "refactor",
            "module": "exe_data_insights",
            "obj": "exe_time_series_plot",
            "line": 25,
            "column": 68,
            "path": "addmo_examples/executables/exe_data_insights.py",
            "symbol": "consider-using-with",
            "message": "Consider using 'with' for resource-allocating operations",
            "message-id": "R1732"
        },
        {
            "type": "warning",
            "module": "exe_data_insights",
            "obj": "exe_time_series_plot",
            "line": 25,
            "column": 68,
            "path": "addmo_examples/executables/exe_data_insights.py",
            "symbol": "unspecified-encoding",
            "message": "Using open without explicitly specifying an encoding",
            "message-id": "W1514"
        },
        {
            "type": "refactor",
            "module": "exe_data_insights",
            "obj": "exe_carpet_plots",
            "line": 46,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_insights.py",
            "symbol": "too-many-arguments",
            "message": "Too many arguments (8/5)",
            "message-id": "R0913"
        },
        {
            "type": "refactor",
            "module": "exe_data_insights",
            "obj": "exe_carpet_plots",
            "line": 46,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_insights.py",
            "symbol": "too-many-locals",
            "message": "Too many local variables (19/15)",
            "message-id": "R0914"
        },
        {
            "type": "warning",
            "module": "exe_data_insights",
            "obj": "exe_carpet_plots",
            "line": 46,
            "column": 21,
            "path": "addmo_examples/executables/exe_data_insights.py",
            "symbol": "redefined-builtin",
            "message": "Redefining built-in 'dir'",
            "message-id": "W0622"
        },
        {
            "type": "warning",
            "module": "exe_data_insights",
            "obj": "exe_carpet_plots",
            "line": 46,
            "column": 37,
            "path": "addmo_examples/executables/exe_data_insights.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'plot_dir' from outer scope (line 211)",
            "message-id": "W0621"
        },
        {
            "type": "refactor",
            "module": "exe_data_insights",
            "obj": "exe_carpet_plots",
            "line": 75,
            "column": 61,
            "path": "addmo_examples/executables/exe_data_insights.py",
            "symbol": "consider-using-with",
            "message": "Consider using 'with' for resource-allocating operations",
            "message-id": "R1732"
        },
        {
            "type": "warning",
            "module": "exe_data_insights",
            "obj": "exe_carpet_plots",
            "line": 75,
            "column": 61,
            "path": "addmo_examples/executables/exe_data_insights.py",
            "symbol": "unspecified-encoding",
            "message": "Using open without explicitly specifying an encoding",
            "message-id": "W1514"
        },
        {
            "type": "refactor",
            "module": "exe_data_insights",
            "obj": "exe_scatter_carpet_plots",
            "line": 95,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_insights.py",
            "symbol": "too-many-arguments",
            "message": "Too many arguments (8/5)",
            "message-id": "R0913"
        },
        {
            "type": "refactor",
            "module": "exe_data_insights",
            "obj": "exe_scatter_carpet_plots",
            "line": 95,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_insights.py",
            "symbol": "too-many-locals",
            "message": "Too many local variables (19/15)",
            "message-id": "R0914"
        },
        {
            "type": "warning",
            "module": "exe_data_insights",
            "obj": "exe_scatter_carpet_plots",
            "line": 95,
            "column": 29,
            "path": "addmo_examples/executables/exe_data_insights.py",
            "symbol": "redefined-builtin",
            "message": "Redefining built-in 'dir'",
            "message-id": "W0622"
        },
        {
            "type": "warning",
            "module": "exe_data_insights",
            "obj": "exe_scatter_carpet_plots",
            "line": 95,
            "column": 45,
            "path": "addmo_examples/executables/exe_data_insights.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'plot_dir' from outer scope (line 211)",
            "message-id": "W0621"
        },
        {
            "type": "refactor",
            "module": "exe_data_insights",
            "obj": "exe_scatter_carpet_plots",
            "line": 119,
            "column": 68,
            "path": "addmo_examples/executables/exe_data_insights.py",
            "symbol": "consider-using-with",
            "message": "Consider using 'with' for resource-allocating operations",
            "message-id": "R1732"
        },
        {
            "type": "warning",
            "module": "exe_data_insights",
            "obj": "exe_scatter_carpet_plots",
            "line": 119,
            "column": 68,
            "path": "addmo_examples/executables/exe_data_insights.py",
            "symbol": "unspecified-encoding",
            "message": "Using open without explicitly specifying an encoding",
            "message-id": "W1514"
        },
        {
            "type": "warning",
            "module": "exe_data_insights",
            "obj": "exe_parallel_plot",
            "line": 138,
            "column": 22,
            "path": "addmo_examples/executables/exe_data_insights.py",
            "symbol": "redefined-builtin",
            "message": "Redefining built-in 'dir'",
            "message-id": "W0622"
        },
        {
            "type": "warning",
            "module": "exe_data_insights",
            "obj": "exe_parallel_plot",
            "line": 138,
            "column": 38,
            "path": "addmo_examples/executables/exe_data_insights.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'plot_dir' from outer scope (line 211)",
            "message-id": "W0621"
        },
        {
            "type": "refactor",
            "module": "exe_data_insights",
            "obj": "exe_parallel_plot",
            "line": 157,
            "column": 68,
            "path": "addmo_examples/executables/exe_data_insights.py",
            "symbol": "consider-using-with",
            "message": "Consider using 'with' for resource-allocating operations",
            "message-id": "R1732"
        },
        {
            "type": "warning",
            "module": "exe_data_insights",
            "obj": "exe_parallel_plot",
            "line": 157,
            "column": 68,
            "path": "addmo_examples/executables/exe_data_insights.py",
            "symbol": "unspecified-encoding",
            "message": "Using open without explicitly specifying an encoding",
            "message-id": "W1514"
        },
        {
            "type": "warning",
            "module": "exe_data_insights",
            "obj": "exe_interactive_parallel_plot",
            "line": 170,
            "column": 34,
            "path": "addmo_examples/executables/exe_data_insights.py",
            "symbol": "redefined-builtin",
            "message": "Redefining built-in 'dir'",
            "message-id": "W0622"
        },
        {
            "type": "warning",
            "module": "exe_data_insights",
            "obj": "exe_interactive_parallel_plot",
            "line": 170,
            "column": 50,
            "path": "addmo_examples/executables/exe_data_insights.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'plot_dir' from outer scope (line 211)",
            "message-id": "W0621"
        },
        {
            "type": "refactor",
            "module": "exe_data_insights",
            "obj": "exe_interactive_parallel_plot",
            "line": 188,
            "column": 68,
            "path": "addmo_examples/executables/exe_data_insights.py",
            "symbol": "consider-using-with",
            "message": "Consider using 'with' for resource-allocating operations",
            "message-id": "R1732"
        },
        {
            "type": "warning",
            "module": "exe_data_insights",
            "obj": "exe_interactive_parallel_plot",
            "line": 188,
            "column": 68,
            "path": "addmo_examples/executables/exe_data_insights.py",
            "symbol": "unspecified-encoding",
            "message": "Using open without explicitly specifying an encoding",
            "message-id": "W1514"
        },
        {
            "type": "convention",
            "module": "exe_data_insights",
            "obj": "",
            "line": 2,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_insights.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"import pandas as pd, csv\" should be placed before \"import pandas as pd, csv\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "exe_data_insights",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_insights.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"import datetime\" should be placed before \"import pandas as pd, csv\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "exe_data_tuning_auto",
            "obj": "",
            "line": 129,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_tuning_auto.py",
            "symbol": "line-too-long",
            "message": "Line too long (165/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "exe_data_tuning_auto",
            "obj": "",
            "line": 131,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_tuning_auto.py",
            "symbol": "missing-final-newline",
            "message": "Final newline missing",
            "message-id": "C0304"
        },
        {
            "type": "convention",
            "module": "exe_data_tuning_auto",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_tuning_auto.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "exe_data_tuning_auto",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_tuning_auto.py",
            "symbol": "import-error",
            "message": "Unable to import 'pandas'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "exe_data_tuning_auto",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_tuning_auto.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.plotting_utils'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "exe_data_tuning_auto",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_tuning_auto.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.definitions'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "exe_data_tuning_auto",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_tuning_auto.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.load_save_utils'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "exe_data_tuning_auto",
            "obj": "",
            "line": 7,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_tuning_auto.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.experiment_logger'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "exe_data_tuning_auto",
            "obj": "",
            "line": 8,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_tuning_auto.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.experiment_logger'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "exe_data_tuning_auto",
            "obj": "",
            "line": 9,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_tuning_auto.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.experiment_logger'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "exe_data_tuning_auto",
            "obj": "",
            "line": 10,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_tuning_auto.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s1_data_tuning_auto.config.data_tuning_auto_config'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "exe_data_tuning_auto",
            "obj": "",
            "line": 11,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_tuning_auto.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s1_data_tuning_auto.data_tuner_auto'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "exe_data_tuning_auto",
            "obj": "",
            "line": 12,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_tuning_auto.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s5_insights.model_plots.time_series'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "exe_data_tuning_auto",
            "obj": "",
            "line": 13,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_tuning_auto.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.load_save'",
            "message-id": "E0401"
        },
        {
            "type": "refactor",
            "module": "exe_data_tuning_auto",
            "obj": "_exe_data_tuning_auto",
            "line": 15,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_tuning_auto.py",
            "symbol": "too-many-locals",
            "message": "Too many local variables (17/15)",
            "message-id": "R0914"
        },
        {
            "type": "warning",
            "module": "exe_data_tuning_auto",
            "obj": "_exe_data_tuning_auto",
            "line": 15,
            "column": 34,
            "path": "addmo_examples/executables/exe_data_tuning_auto.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'user_input' from outer scope (line 129)",
            "message-id": "W0621"
        },
        {
            "type": "convention",
            "module": "exe_data_tuning_auto",
            "obj": "_exe_data_tuning_auto",
            "line": 37,
            "column": 4,
            "path": "addmo_examples/executables/exe_data_tuning_auto.py",
            "symbol": "invalid-name",
            "message": "Variable name \"y\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "exe_data_tuning_auto",
            "obj": "_exe_data_tuning_auto",
            "line": 49,
            "column": 9,
            "path": "addmo_examples/executables/exe_data_tuning_auto.py",
            "symbol": "unspecified-encoding",
            "message": "Using open without explicitly specifying an encoding",
            "message-id": "W1514"
        },
        {
            "type": "convention",
            "module": "exe_data_tuning_auto",
            "obj": "_exe_data_tuning_auto",
            "line": 49,
            "column": 35,
            "path": "addmo_examples/executables/exe_data_tuning_auto.py",
            "symbol": "invalid-name",
            "message": "Variable name \"f\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "exe_data_tuning_auto",
            "obj": "default_config_exe_data_tuning_auto",
            "line": 63,
            "column": 40,
            "path": "addmo_examples/executables/exe_data_tuning_auto.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'user_input' from outer scope (line 129)",
            "message-id": "W0621"
        },
        {
            "type": "refactor",
            "module": "exe_data_tuning_auto",
            "obj": "exe_data_tuning_auto",
            "line": 70,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_tuning_auto.py",
            "symbol": "too-many-locals",
            "message": "Too many local variables (18/15)",
            "message-id": "R0914"
        },
        {
            "type": "warning",
            "module": "exe_data_tuning_auto",
            "obj": "exe_data_tuning_auto",
            "line": 70,
            "column": 25,
            "path": "addmo_examples/executables/exe_data_tuning_auto.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'user_input' from outer scope (line 129)",
            "message-id": "W0621"
        },
        {
            "type": "convention",
            "module": "exe_data_tuning_auto",
            "obj": "exe_data_tuning_auto",
            "line": 100,
            "column": 4,
            "path": "addmo_examples/executables/exe_data_tuning_auto.py",
            "symbol": "invalid-name",
            "message": "Variable name \"y\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "exe_data_tuning_auto",
            "obj": "exe_data_tuning_auto",
            "line": 112,
            "column": 9,
            "path": "addmo_examples/executables/exe_data_tuning_auto.py",
            "symbol": "unspecified-encoding",
            "message": "Using open without explicitly specifying an encoding",
            "message-id": "W1514"
        },
        {
            "type": "convention",
            "module": "exe_data_tuning_auto",
            "obj": "exe_data_tuning_auto",
            "line": 112,
            "column": 35,
            "path": "addmo_examples/executables/exe_data_tuning_auto.py",
            "symbol": "invalid-name",
            "message": "Variable name \"f\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "exe_model_tuning",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "addmo_examples/executables/exe_model_tuning.py",
            "symbol": "line-too-long",
            "message": "Line too long (120/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "exe_model_tuning",
            "obj": "",
            "line": 54,
            "column": 0,
            "path": "addmo_examples/executables/exe_model_tuning.py",
            "symbol": "line-too-long",
            "message": "Line too long (117/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "exe_model_tuning",
            "obj": "",
            "line": 87,
            "column": 0,
            "path": "addmo_examples/executables/exe_model_tuning.py",
            "symbol": "line-too-long",
            "message": "Line too long (194/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "exe_model_tuning",
            "obj": "",
            "line": 89,
            "column": 0,
            "path": "addmo_examples/executables/exe_model_tuning.py",
            "symbol": "missing-final-newline",
            "message": "Final newline missing",
            "message-id": "C0304"
        },
        {
            "type": "convention",
            "module": "exe_model_tuning",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo_examples/executables/exe_model_tuning.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "exe_model_tuning",
            "obj": "",
            "line": 2,
            "column": 0,
            "path": "addmo_examples/executables/exe_model_tuning.py",
            "symbol": "import-error",
            "message": "Unable to import 'pandas'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "exe_model_tuning",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "addmo_examples/executables/exe_model_tuning.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.definitions'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "exe_model_tuning",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "addmo_examples/executables/exe_model_tuning.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.load_save_utils'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "exe_model_tuning",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "addmo_examples/executables/exe_model_tuning.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.experiment_logger'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "exe_model_tuning",
            "obj": "",
            "line": 7,
            "column": 0,
            "path": "addmo_examples/executables/exe_model_tuning.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.experiment_logger'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "exe_model_tuning",
            "obj": "",
            "line": 8,
            "column": 0,
            "path": "addmo_examples/executables/exe_model_tuning.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.experiment_logger'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "exe_model_tuning",
            "obj": "",
            "line": 9,
            "column": 0,
            "path": "addmo_examples/executables/exe_model_tuning.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.models.keras_models'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "exe_model_tuning",
            "obj": "",
            "line": 10,
            "column": 0,
            "path": "addmo_examples/executables/exe_model_tuning.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.config.model_tuning_config'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "exe_model_tuning",
            "obj": "",
            "line": 11,
            "column": 0,
            "path": "addmo_examples/executables/exe_model_tuning.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.config.model_tuning_config'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "exe_model_tuning",
            "obj": "",
            "line": 12,
            "column": 0,
            "path": "addmo_examples/executables/exe_model_tuning.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.model_tuner'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "exe_model_tuning",
            "obj": "",
            "line": 13,
            "column": 0,
            "path": "addmo_examples/executables/exe_model_tuning.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.load_save'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "exe_model_tuning",
            "obj": "",
            "line": 14,
            "column": 0,
            "path": "addmo_examples/executables/exe_model_tuning.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.load_save'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "exe_model_tuning",
            "obj": "",
            "line": 15,
            "column": 0,
            "path": "addmo_examples/executables/exe_model_tuning.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.data_handling'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "exe_model_tuning",
            "obj": "",
            "line": 16,
            "column": 0,
            "path": "addmo_examples/executables/exe_model_tuning.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s5_insights.model_plots.scatter_plot'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "exe_model_tuning",
            "obj": "",
            "line": 17,
            "column": 0,
            "path": "addmo_examples/executables/exe_model_tuning.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.plotting_utils'",
            "message-id": "E0401"
        },
        {
            "type": "warning",
            "module": "exe_model_tuning",
            "obj": "exe_model_tuning",
            "line": 20,
            "column": 21,
            "path": "addmo_examples/executables/exe_model_tuning.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'user_input' from outer scope (line 86)",
            "message-id": "W0621"
        },
        {
            "type": "warning",
            "module": "exe_model_tuning",
            "obj": "exe_model_tuning",
            "line": 20,
            "column": 37,
            "path": "addmo_examples/executables/exe_model_tuning.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'config_exp' from outer scope (line 83)",
            "message-id": "W0621"
        },
        {
            "type": "warning",
            "module": "exe_model_tuning",
            "obj": "exe_model_tuning",
            "line": 20,
            "column": 54,
            "path": "addmo_examples/executables/exe_model_tuning.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'config_tuner' from outer scope (line 84)",
            "message-id": "W0621"
        },
        {
            "type": "warning",
            "module": "exe_model_tuning",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "addmo_examples/executables/exe_model_tuning.py",
            "symbol": "unused-import",
            "message": "Unused results_dir_data_tuning_auto imported from addmo.util.definitions",
            "message-id": "W0611"
        },
        {
            "type": "warning",
            "module": "exe_model_tuning",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "addmo_examples/executables/exe_model_tuning.py",
            "symbol": "unused-import",
            "message": "Unused results_dir_data_tuning_fixed imported from addmo.util.definitions",
            "message-id": "W0611"
        },
        {
            "type": "convention",
            "module": "exe_recreate_data_tuning",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo_examples/executables/exe_recreate_data_tuning.py",
            "symbol": "line-too-long",
            "message": "Line too long (122/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "exe_recreate_data_tuning",
            "obj": "",
            "line": 2,
            "column": 0,
            "path": "addmo_examples/executables/exe_recreate_data_tuning.py",
            "symbol": "line-too-long",
            "message": "Line too long (137/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "exe_recreate_data_tuning",
            "obj": "",
            "line": 19,
            "column": 0,
            "path": "addmo_examples/executables/exe_recreate_data_tuning.py",
            "symbol": "line-too-long",
            "message": "Line too long (115/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "exe_recreate_data_tuning",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo_examples/executables/exe_recreate_data_tuning.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "exe_recreate_data_tuning",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "addmo_examples/executables/exe_recreate_data_tuning.py",
            "symbol": "import-error",
            "message": "Unable to import 'pandas'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "exe_recreate_data_tuning",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "addmo_examples/executables/exe_recreate_data_tuning.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.definitions'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "exe_recreate_data_tuning",
            "obj": "",
            "line": 7,
            "column": 0,
            "path": "addmo_examples/executables/exe_recreate_data_tuning.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.load_save_utils'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "exe_recreate_data_tuning",
            "obj": "",
            "line": 8,
            "column": 0,
            "path": "addmo_examples/executables/exe_recreate_data_tuning.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.experiment_logger'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "exe_recreate_data_tuning",
            "obj": "",
            "line": 9,
            "column": 0,
            "path": "addmo_examples/executables/exe_recreate_data_tuning.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.experiment_logger'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "exe_recreate_data_tuning",
            "obj": "",
            "line": 10,
            "column": 0,
            "path": "addmo_examples/executables/exe_recreate_data_tuning.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.experiment_logger'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "exe_recreate_data_tuning",
            "obj": "",
            "line": 11,
            "column": 0,
            "path": "addmo_examples/executables/exe_recreate_data_tuning.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s1_data_tuning_auto.config.data_tuning_auto_config'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "exe_recreate_data_tuning",
            "obj": "",
            "line": 12,
            "column": 0,
            "path": "addmo_examples/executables/exe_recreate_data_tuning.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s1_data_tuning_auto.data_tuner_auto'",
            "message-id": "E0401"
        },
        {
            "type": "warning",
            "module": "exe_recreate_data_tuning",
            "obj": "recreate_tuning",
            "line": 14,
            "column": 20,
            "path": "addmo_examples/executables/exe_recreate_data_tuning.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'name_of_raw_data' from outer scope (line 59)",
            "message-id": "W0621"
        },
        {
            "type": "warning",
            "module": "exe_recreate_data_tuning",
            "obj": "recreate_tuning",
            "line": 14,
            "column": 38,
            "path": "addmo_examples/executables/exe_recreate_data_tuning.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'name_of_tuning' from outer scope (line 60)",
            "message-id": "W0621"
        },
        {
            "type": "warning",
            "module": "exe_recreate_data_tuning",
            "obj": "recreate_tuning",
            "line": 14,
            "column": 54,
            "path": "addmo_examples/executables/exe_recreate_data_tuning.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'abs_path_to_data' from outer scope (line 61)",
            "message-id": "W0621"
        },
        {
            "type": "warning",
            "module": "exe_recreate_data_tuning",
            "obj": "recreate_tuning",
            "line": 14,
            "column": 72,
            "path": "addmo_examples/executables/exe_recreate_data_tuning.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'name_new_config' from outer scope (line 62)",
            "message-id": "W0621"
        },
        {
            "type": "warning",
            "module": "exe_recreate_data_tuning",
            "obj": "recreate_tuning",
            "line": 21,
            "column": 9,
            "path": "addmo_examples/executables/exe_recreate_data_tuning.py",
            "symbol": "unspecified-encoding",
            "message": "Using open without explicitly specifying an encoding",
            "message-id": "W1514"
        },
        {
            "type": "convention",
            "module": "exe_recreate_data_tuning",
            "obj": "",
            "line": 59,
            "column": 4,
            "path": "addmo_examples/executables/exe_recreate_data_tuning.py",
            "symbol": "invalid-name",
            "message": "Constant name \"name_of_raw_data\" doesn't conform to UPPER_CASE naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "exe_recreate_data_tuning",
            "obj": "",
            "line": 60,
            "column": 4,
            "path": "addmo_examples/executables/exe_recreate_data_tuning.py",
            "symbol": "invalid-name",
            "message": "Constant name \"name_of_tuning\" doesn't conform to UPPER_CASE naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "exe_recreate_data_tuning",
            "obj": "",
            "line": 62,
            "column": 4,
            "path": "addmo_examples/executables/exe_recreate_data_tuning.py",
            "symbol": "invalid-name",
            "message": "Constant name \"name_new_config\" doesn't conform to UPPER_CASE naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "exe_data_tuning_fixed",
            "obj": "",
            "line": 167,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_tuning_fixed.py",
            "symbol": "line-too-long",
            "message": "Line too long (166/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "exe_data_tuning_fixed",
            "obj": "",
            "line": 170,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_tuning_fixed.py",
            "symbol": "trailing-newlines",
            "message": "Trailing newlines",
            "message-id": "C0305"
        },
        {
            "type": "convention",
            "module": "exe_data_tuning_fixed",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_tuning_fixed.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "exe_data_tuning_fixed",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_tuning_fixed.py",
            "symbol": "import-error",
            "message": "Unable to import 'pandas'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "exe_data_tuning_fixed",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_tuning_fixed.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.definitions'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "exe_data_tuning_fixed",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_tuning_fixed.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.load_save_utils'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "exe_data_tuning_fixed",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_tuning_fixed.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.experiment_logger'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "exe_data_tuning_fixed",
            "obj": "",
            "line": 7,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_tuning_fixed.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.experiment_logger'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "exe_data_tuning_fixed",
            "obj": "",
            "line": 8,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_tuning_fixed.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.experiment_logger'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "exe_data_tuning_fixed",
            "obj": "",
            "line": 9,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_tuning_fixed.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s2_data_tuning.config.data_tuning_config'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "exe_data_tuning_fixed",
            "obj": "",
            "line": 10,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_tuning_fixed.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s2_data_tuning.data_tuner_fixed'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "exe_data_tuning_fixed",
            "obj": "",
            "line": 11,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_tuning_fixed.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.load_save'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "exe_data_tuning_fixed",
            "obj": "",
            "line": 12,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_tuning_fixed.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.plotting_utils'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "exe_data_tuning_fixed",
            "obj": "",
            "line": 13,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_tuning_fixed.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.data_handling'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "exe_data_tuning_fixed",
            "obj": "",
            "line": 14,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_tuning_fixed.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s5_insights.model_plots.time_series'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "exe_data_tuning_fixed",
            "obj": "",
            "line": 15,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_tuning_fixed.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.load_save'",
            "message-id": "E0401"
        },
        {
            "type": "refactor",
            "module": "exe_data_tuning_fixed",
            "obj": "_exe_data_tuning",
            "line": 17,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_tuning_fixed.py",
            "symbol": "too-many-locals",
            "message": "Too many local variables (19/15)",
            "message-id": "R0914"
        },
        {
            "type": "warning",
            "module": "exe_data_tuning_fixed",
            "obj": "_exe_data_tuning",
            "line": 17,
            "column": 29,
            "path": "addmo_examples/executables/exe_data_tuning_fixed.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'user_input' from outer scope (line 167)",
            "message-id": "W0621"
        },
        {
            "type": "convention",
            "module": "exe_data_tuning_fixed",
            "obj": "_exe_data_tuning",
            "line": 43,
            "column": 4,
            "path": "addmo_examples/executables/exe_data_tuning_fixed.py",
            "symbol": "invalid-name",
            "message": "Variable name \"x\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "exe_data_tuning_fixed",
            "obj": "_exe_data_tuning",
            "line": 43,
            "column": 7,
            "path": "addmo_examples/executables/exe_data_tuning_fixed.py",
            "symbol": "invalid-name",
            "message": "Variable name \"y\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "exe_data_tuning_fixed",
            "obj": "_exe_data_tuning",
            "line": 68,
            "column": 9,
            "path": "addmo_examples/executables/exe_data_tuning_fixed.py",
            "symbol": "unspecified-encoding",
            "message": "Using open without explicitly specifying an encoding",
            "message-id": "W1514"
        },
        {
            "type": "convention",
            "module": "exe_data_tuning_fixed",
            "obj": "_exe_data_tuning",
            "line": 68,
            "column": 35,
            "path": "addmo_examples/executables/exe_data_tuning_fixed.py",
            "symbol": "invalid-name",
            "message": "Variable name \"f\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "exe_data_tuning_fixed",
            "obj": "_exe_data_tuning",
            "line": 43,
            "column": 4,
            "path": "addmo_examples/executables/exe_data_tuning_fixed.py",
            "symbol": "unused-variable",
            "message": "Unused variable 'x'",
            "message-id": "W0612"
        },
        {
            "type": "warning",
            "module": "exe_data_tuning_fixed",
            "obj": "default_config_exe_data_tuning_fixed",
            "line": 84,
            "column": 41,
            "path": "addmo_examples/executables/exe_data_tuning_fixed.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'user_input' from outer scope (line 167)",
            "message-id": "W0621"
        },
        {
            "type": "refactor",
            "module": "exe_data_tuning_fixed",
            "obj": "exe_data_tuning_fixed",
            "line": 95,
            "column": 0,
            "path": "addmo_examples/executables/exe_data_tuning_fixed.py",
            "symbol": "too-many-locals",
            "message": "Too many local variables (20/15)",
            "message-id": "R0914"
        },
        {
            "type": "warning",
            "module": "exe_data_tuning_fixed",
            "obj": "exe_data_tuning_fixed",
            "line": 95,
            "column": 26,
            "path": "addmo_examples/executables/exe_data_tuning_fixed.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'user_input' from outer scope (line 167)",
            "message-id": "W0621"
        },
        {
            "type": "convention",
            "module": "exe_data_tuning_fixed",
            "obj": "exe_data_tuning_fixed",
            "line": 124,
            "column": 4,
            "path": "addmo_examples/executables/exe_data_tuning_fixed.py",
            "symbol": "invalid-name",
            "message": "Variable name \"x\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "exe_data_tuning_fixed",
            "obj": "exe_data_tuning_fixed",
            "line": 124,
            "column": 7,
            "path": "addmo_examples/executables/exe_data_tuning_fixed.py",
            "symbol": "invalid-name",
            "message": "Variable name \"y\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "exe_data_tuning_fixed",
            "obj": "exe_data_tuning_fixed",
            "line": 149,
            "column": 9,
            "path": "addmo_examples/executables/exe_data_tuning_fixed.py",
            "symbol": "unspecified-encoding",
            "message": "Using open without explicitly specifying an encoding",
            "message-id": "W1514"
        },
        {
            "type": "convention",
            "module": "exe_data_tuning_fixed",
            "obj": "exe_data_tuning_fixed",
            "line": 149,
            "column": 35,
            "path": "addmo_examples/executables/exe_data_tuning_fixed.py",
            "symbol": "invalid-name",
            "message": "Variable name \"f\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "exe_data_tuning_fixed",
            "obj": "exe_data_tuning_fixed",
            "line": 124,
            "column": 4,
            "path": "addmo_examples/executables/exe_data_tuning_fixed.py",
            "symbol": "unused-variable",
            "message": "Unused variable 'x'",
            "message-id": "W0612"
        },
        {
            "type": "convention",
            "module": "test_abstractmodel",
            "obj": "",
            "line": 75,
            "column": 0,
            "path": "tests/test_abstractmodel.py",
            "symbol": "line-too-long",
            "message": "Line too long (104/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "test_abstractmodel",
            "obj": "",
            "line": 88,
            "column": 0,
            "path": "tests/test_abstractmodel.py",
            "symbol": "line-too-long",
            "message": "Line too long (102/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "test_abstractmodel",
            "obj": "",
            "line": 89,
            "column": 0,
            "path": "tests/test_abstractmodel.py",
            "symbol": "line-too-long",
            "message": "Line too long (106/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "test_abstractmodel",
            "obj": "",
            "line": 95,
            "column": 0,
            "path": "tests/test_abstractmodel.py",
            "symbol": "trailing-newlines",
            "message": "Trailing newlines",
            "message-id": "C0305"
        },
        {
            "type": "convention",
            "module": "test_abstractmodel",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_abstractmodel.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "test_abstractmodel",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "tests/test_abstractmodel.py",
            "symbol": "import-error",
            "message": "Unable to import 'pandas'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "test_abstractmodel",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "tests/test_abstractmodel.py",
            "symbol": "import-error",
            "message": "Unable to import 'numpy'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "test_abstractmodel",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "tests/test_abstractmodel.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.models.abstract_model'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "test_abstractmodel",
            "obj": "",
            "line": 7,
            "column": 0,
            "path": "tests/test_abstractmodel.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.models.keras_models'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "test_abstractmodel",
            "obj": "",
            "line": 8,
            "column": 0,
            "path": "tests/test_abstractmodel.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.models.scikit_learn_models'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "test_abstractmodel",
            "obj": "",
            "line": 9,
            "column": 0,
            "path": "tests/test_abstractmodel.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.models.abstract_model'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "test_abstractmodel",
            "obj": "",
            "line": 10,
            "column": 0,
            "path": "tests/test_abstractmodel.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.models.model_factory'",
            "message-id": "E0401"
        },
        {
            "type": "refactor",
            "module": "test_abstractmodel",
            "obj": "TestBaseMLModel.setUpClass",
            "line": 49,
            "column": 23,
            "path": "tests/test_abstractmodel.py",
            "symbol": "consider-using-with",
            "message": "Consider using 'with' for resource-allocating operations",
            "message-id": "R1732"
        },
        {
            "type": "warning",
            "module": "test_abstractmodel",
            "obj": "",
            "line": 7,
            "column": 0,
            "path": "tests/test_abstractmodel.py",
            "symbol": "unused-import",
            "message": "Unused BaseKerasModel imported from addmo.s3_model_tuning.models.keras_models",
            "message-id": "W0611"
        },
        {
            "type": "convention",
            "module": "test_data_tuning",
            "obj": "",
            "line": 25,
            "column": 0,
            "path": "tests/test_data_tuning.py",
            "symbol": "line-too-long",
            "message": "Line too long (136/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "test_data_tuning",
            "obj": "",
            "line": 79,
            "column": 0,
            "path": "tests/test_data_tuning.py",
            "symbol": "missing-final-newline",
            "message": "Final newline missing",
            "message-id": "C0304"
        },
        {
            "type": "convention",
            "module": "test_data_tuning",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_data_tuning.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "test_data_tuning",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "tests/test_data_tuning.py",
            "symbol": "import-error",
            "message": "Unable to import 'pandas'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "test_data_tuning",
            "obj": "",
            "line": 7,
            "column": 0,
            "path": "tests/test_data_tuning.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.experiment_logger'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "test_data_tuning",
            "obj": "",
            "line": 8,
            "column": 0,
            "path": "tests/test_data_tuning.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s1_data_tuning_auto.config.data_tuning_auto_config'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "test_data_tuning",
            "obj": "",
            "line": 9,
            "column": 0,
            "path": "tests/test_data_tuning.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s1_data_tuning_auto.data_tuner_auto'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "test_data_tuning",
            "obj": "",
            "line": 10,
            "column": 0,
            "path": "tests/test_data_tuning.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s2_data_tuning.config.data_tuning_config'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "test_data_tuning",
            "obj": "",
            "line": 11,
            "column": 0,
            "path": "tests/test_data_tuning.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s2_data_tuning.data_tuner_fixed'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "test_data_tuning",
            "obj": "",
            "line": 12,
            "column": 0,
            "path": "tests/test_data_tuning.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.load_save'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "test_data_tuning",
            "obj": "",
            "line": 13,
            "column": 0,
            "path": "tests/test_data_tuning.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.data_handling'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "test_data_tuning",
            "obj": "TestAllDataTuners._make_data",
            "line": 35,
            "column": 8,
            "path": "tests/test_data_tuning.py",
            "symbol": "invalid-name",
            "message": "Variable name \"x\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "test_data_tuning",
            "obj": "TestAllDataTuners._make_data",
            "line": 35,
            "column": 11,
            "path": "tests/test_data_tuning.py",
            "symbol": "invalid-name",
            "message": "Variable name \"y\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "test_data_tuning",
            "obj": "TestAllDataTuners.test_tuners",
            "line": 38,
            "column": 4,
            "path": "tests/test_data_tuning.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_data_tuning",
            "obj": "TestAllDataTuners.test_tuners",
            "line": 43,
            "column": 21,
            "path": "tests/test_data_tuning.py",
            "symbol": "invalid-name",
            "message": "Variable name \"x\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "test_data_tuning",
            "obj": "TestAllDataTuners.test_tuners",
            "line": 43,
            "column": 24,
            "path": "tests/test_data_tuning.py",
            "symbol": "invalid-name",
            "message": "Variable name \"y\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "test_data_tuning",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "tests/test_data_tuning.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"from unittest.mock import patch, MagicMock\" should be placed before \"import pandas as pd\"",
            "message-id": "C0411"
        },
        {
            "type": "warning",
            "module": "test_data_tuning",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_data_tuning.py",
            "symbol": "unused-import",
            "message": "Unused import os",
            "message-id": "W0611"
        },
        {
            "type": "warning",
            "module": "test_data_tuning",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "tests/test_data_tuning.py",
            "symbol": "unused-import",
            "message": "Unused import tempfile",
            "message-id": "W0611"
        },
        {
            "type": "warning",
            "module": "test_data_tuning",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "tests/test_data_tuning.py",
            "symbol": "unused-import",
            "message": "Unused patch imported from unittest.mock",
            "message-id": "W0611"
        },
        {
            "type": "warning",
            "module": "test_data_tuning",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "tests/test_data_tuning.py",
            "symbol": "unused-import",
            "message": "Unused MagicMock imported from unittest.mock",
            "message-id": "W0611"
        },
        {
            "type": "warning",
            "module": "test_data_tuning",
            "obj": "",
            "line": 7,
            "column": 0,
            "path": "tests/test_data_tuning.py",
            "symbol": "unused-import",
            "message": "Unused ExperimentLogger imported from addmo.util.experiment_logger",
            "message-id": "W0611"
        },
        {
            "type": "warning",
            "module": "test_data_tuning",
            "obj": "",
            "line": 7,
            "column": 0,
            "path": "tests/test_data_tuning.py",
            "symbol": "unused-import",
            "message": "Unused LocalLogger imported from addmo.util.experiment_logger",
            "message-id": "W0611"
        },
        {
            "type": "warning",
            "module": "test_data_tuning",
            "obj": "",
            "line": 7,
            "column": 0,
            "path": "tests/test_data_tuning.py",
            "symbol": "unused-import",
            "message": "Unused WandbLogger imported from addmo.util.experiment_logger",
            "message-id": "W0611"
        },
        {
            "type": "convention",
            "module": "test_model_tuning",
            "obj": "",
            "line": 27,
            "column": 0,
            "path": "tests/test_model_tuning.py",
            "symbol": "line-too-long",
            "message": "Line too long (102/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "test_model_tuning",
            "obj": "",
            "line": 31,
            "column": 0,
            "path": "tests/test_model_tuning.py",
            "symbol": "line-too-long",
            "message": "Line too long (104/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "test_model_tuning",
            "obj": "",
            "line": 43,
            "column": 0,
            "path": "tests/test_model_tuning.py",
            "symbol": "line-too-long",
            "message": "Line too long (108/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "test_model_tuning",
            "obj": "",
            "line": 46,
            "column": 0,
            "path": "tests/test_model_tuning.py",
            "symbol": "line-too-long",
            "message": "Line too long (131/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "test_model_tuning",
            "obj": "",
            "line": 51,
            "column": 0,
            "path": "tests/test_model_tuning.py",
            "symbol": "line-too-long",
            "message": "Line too long (127/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "test_model_tuning",
            "obj": "",
            "line": 56,
            "column": 0,
            "path": "tests/test_model_tuning.py",
            "symbol": "missing-final-newline",
            "message": "Final newline missing",
            "message-id": "C0304"
        },
        {
            "type": "convention",
            "module": "test_model_tuning",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_model_tuning.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "test_model_tuning",
            "obj": "",
            "line": 2,
            "column": 0,
            "path": "tests/test_model_tuning.py",
            "symbol": "import-error",
            "message": "Unable to import 'pandas'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "test_model_tuning",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "tests/test_model_tuning.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.models.model_factory'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "test_model_tuning",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "tests/test_model_tuning.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.config.model_tuning_config'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "test_model_tuning",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "tests/test_model_tuning.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.config.model_tuning_config'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "test_model_tuning",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "tests/test_model_tuning.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.model_tuner'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "test_model_tuning",
            "obj": "",
            "line": 7,
            "column": 0,
            "path": "tests/test_model_tuning.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.load_save'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "test_model_tuning",
            "obj": "",
            "line": 8,
            "column": 0,
            "path": "tests/test_model_tuning.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.load_save'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "test_model_tuning",
            "obj": "",
            "line": 9,
            "column": 0,
            "path": "tests/test_model_tuning.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.data_handling'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "test_model_tuning",
            "obj": "TestModelTuner.test_model_tuning",
            "line": 19,
            "column": 4,
            "path": "tests/test_model_tuning.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "warning",
            "module": "test_model_tuning",
            "obj": "TestModelTuner.test_model_tuning",
            "line": 20,
            "column": 40,
            "path": "tests/test_model_tuning.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _config_model_tuner of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "test_model_tuning",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "tests/test_model_tuning.py",
            "symbol": "unused-import",
            "message": "Unused ModelTunerConfig imported from addmo.s3_model_tuning.config.model_tuning_config",
            "message-id": "W0611"
        },
        {
            "type": "warning",
            "module": "test_model_tuning",
            "obj": "",
            "line": 8,
            "column": 0,
            "path": "tests/test_model_tuning.py",
            "symbol": "unused-import",
            "message": "Unused load_config_from_json imported from addmo.util.load_save",
            "message-id": "W0611"
        },
        {
            "type": "convention",
            "module": "test_config_loading",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "tests/test_config_loading.py",
            "symbol": "line-too-long",
            "message": "Line too long (107/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "test_config_loading",
            "obj": "",
            "line": 13,
            "column": 0,
            "path": "tests/test_config_loading.py",
            "symbol": "line-too-long",
            "message": "Line too long (121/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "test_config_loading",
            "obj": "",
            "line": 29,
            "column": 0,
            "path": "tests/test_config_loading.py",
            "symbol": "line-too-long",
            "message": "Line too long (129/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "test_config_loading",
            "obj": "",
            "line": 73,
            "column": 0,
            "path": "tests/test_config_loading.py",
            "symbol": "line-too-long",
            "message": "Line too long (119/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "test_config_loading",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_config_loading.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "test_config_loading",
            "obj": "",
            "line": 2,
            "column": 0,
            "path": "tests/test_config_loading.py",
            "symbol": "import-error",
            "message": "Unable to import 'pydantic'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "test_config_loading",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "tests/test_config_loading.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s1_data_tuning_auto.config.data_tuning_auto_config'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "test_config_loading",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "tests/test_config_loading.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s2_data_tuning.config.data_tuning_config'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "test_config_loading",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "tests/test_config_loading.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.config.model_tuning_config'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "test_config_loading",
            "obj": "TestConfigLoading.test_required_fields_data_config",
            "line": 17,
            "column": 12,
            "path": "tests/test_config_loading.py",
            "symbol": "invalid-name",
            "message": "Variable name \"ConfigClass\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "test_config_loading",
            "obj": "TestConfigLoading.test_required_fields_model_config",
            "line": 31,
            "column": 12,
            "path": "tests/test_config_loading.py",
            "symbol": "invalid-name",
            "message": "Variable name \"ConfigClass\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "test_config_loading",
            "obj": "TestConfigLoading.test_required_fields_model_tuner",
            "line": 46,
            "column": 12,
            "path": "tests/test_config_loading.py",
            "symbol": "invalid-name",
            "message": "Variable name \"ConfigClass\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "test_config_loading",
            "obj": "TestConfigLoading.test_data_tuning_config_enforces_str_types",
            "line": 61,
            "column": 12,
            "path": "tests/test_config_loading.py",
            "symbol": "invalid-name",
            "message": "Variable name \"ConfigClass\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "E2E_test",
            "obj": "",
            "line": 7,
            "column": 0,
            "path": "tests/E2E_test.py",
            "symbol": "line-too-long",
            "message": "Line too long (103/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "E2E_test",
            "obj": "",
            "line": 12,
            "column": 0,
            "path": "tests/E2E_test.py",
            "symbol": "line-too-long",
            "message": "Line too long (106/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "E2E_test",
            "obj": "",
            "line": 15,
            "column": 0,
            "path": "tests/E2E_test.py",
            "symbol": "line-too-long",
            "message": "Line too long (172/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "E2E_test",
            "obj": "",
            "line": 16,
            "column": 0,
            "path": "tests/E2E_test.py",
            "symbol": "line-too-long",
            "message": "Line too long (178/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "E2E_test",
            "obj": "",
            "line": 19,
            "column": 0,
            "path": "tests/E2E_test.py",
            "symbol": "line-too-long",
            "message": "Line too long (113/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "E2E_test",
            "obj": "",
            "line": 30,
            "column": 0,
            "path": "tests/E2E_test.py",
            "symbol": "line-too-long",
            "message": "Line too long (127/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "E2E_test",
            "obj": "",
            "line": 31,
            "column": 0,
            "path": "tests/E2E_test.py",
            "symbol": "line-too-long",
            "message": "Line too long (136/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "E2E_test",
            "obj": "",
            "line": 32,
            "column": 0,
            "path": "tests/E2E_test.py",
            "symbol": "line-too-long",
            "message": "Line too long (104/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "E2E_test",
            "obj": "",
            "line": 33,
            "column": 0,
            "path": "tests/E2E_test.py",
            "symbol": "line-too-long",
            "message": "Line too long (101/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "E2E_test",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/E2E_test.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "convention",
            "module": "E2E_test",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/E2E_test.py",
            "symbol": "invalid-name",
            "message": "Module name \"E2E_test\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "error",
            "module": "E2E_test",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "tests/E2E_test.py",
            "symbol": "import-error",
            "message": "Unable to import 'pandas'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "E2E_test",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "tests/E2E_test.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.load_save'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "E2E_test",
            "obj": "",
            "line": 7,
            "column": 0,
            "path": "tests/E2E_test.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.definitions'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "E2E_test",
            "obj": "",
            "line": 8,
            "column": 0,
            "path": "tests/E2E_test.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo_examples.executables.exe_data_tuning_fixed'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "E2E_test",
            "obj": "",
            "line": 9,
            "column": 0,
            "path": "tests/E2E_test.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo_examples.executables.exe_model_tuning'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "E2E_test",
            "obj": "",
            "line": 10,
            "column": 0,
            "path": "tests/E2E_test.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo_examples.executables.exe_data_insights'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "E2E_test",
            "obj": "",
            "line": 11,
            "column": 0,
            "path": "tests/E2E_test.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s2_data_tuning.config.data_tuning_config'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "E2E_test",
            "obj": "",
            "line": 12,
            "column": 0,
            "path": "tests/E2E_test.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.config.model_tuning_config'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "E2E_test",
            "obj": "",
            "line": 13,
            "column": 0,
            "path": "tests/E2E_test.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.load_save_utils'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "E2E_test",
            "obj": "TestAddmoEndToEnd",
            "line": 21,
            "column": 0,
            "path": "tests/E2E_test.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "E2E_test",
            "obj": "TestAddmoEndToEnd.test_full_pipeline",
            "line": 35,
            "column": 4,
            "path": "tests/E2E_test.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "E2E_test",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "tests/E2E_test.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"from pathlib import Path\" should be placed before \"import pandas as pd\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "E2E_test",
            "obj": "",
            "line": 11,
            "column": 0,
            "path": "tests/E2E_test.py",
            "symbol": "ungrouped-imports",
            "message": "Imports from package addmo are not grouped",
            "message-id": "C0412"
        },
        {
            "type": "warning",
            "module": "E2E_test",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "tests/E2E_test.py",
            "symbol": "unused-import",
            "message": "Unused Path imported from pathlib",
            "message-id": "W0611"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 15,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (198/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 16,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (171/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 17,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (114/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 231,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (109/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 247,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (110/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 251,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (105/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 254,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (166/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 262,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (114/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 286,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (126/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 287,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (117/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 360,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (116/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 374,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (114/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 401,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (110/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 402,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (110/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 403,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (111/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 412,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (141/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 417,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (113/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 419,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (113/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 420,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (119/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 421,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (101/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 423,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (105/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 425,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (145/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 427,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (108/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 430,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (113/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 433,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (118/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 438,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (110/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 483,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (116/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 521,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (120/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 535,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (118/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 562,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (114/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 563,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (114/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 564,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (134/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 572,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (145/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 577,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (117/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 579,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (117/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 580,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (196/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 582,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (109/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 584,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (149/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 585,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (212/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 587,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (117/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 590,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (133/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 592,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (102/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 594,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (114/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 600,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (136/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 615,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (116/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 622,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (144/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 624,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (159/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 625,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (138/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 626,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (145/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 628,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (112/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 630,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (103/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 678,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (125/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 679,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (128/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 682,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (108/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 761,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (106/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 782,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (115/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 786,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (116/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 798,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (110/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 912,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (106/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 927,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (168/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 932,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (154/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 948,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (139/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 950,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (146/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 1050,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (148/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 1057,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (103/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 1067,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "trailing-whitespace",
            "message": "Trailing whitespace",
            "message-id": "C0303"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 1079,
            "column": 19,
            "path": "GUI/app.py",
            "symbol": "trailing-whitespace",
            "message": "Trailing whitespace",
            "message-id": "C0303"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 1125,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "line-too-long",
            "message": "Line too long (121/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 1177,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "missing-final-newline",
            "message": "Final newline missing",
            "message-id": "C0304"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "too-many-lines",
            "message": "Too many lines in module (1177/1000)",
            "message-id": "C0302"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "app",
            "obj": "",
            "line": 2,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "import-error",
            "message": "Unable to import 'streamlit'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "multiple-imports",
            "message": "Multiple imports on one line (io, os, zipfile)",
            "message-id": "C0410"
        },
        {
            "type": "error",
            "module": "app",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "import-error",
            "message": "Unable to import 'streamlit_pydantic'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "app",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s1_data_tuning_auto.config.data_tuning_auto_config'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "app",
            "obj": "",
            "line": 7,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo_examples.executables.exe_data_tuning_auto'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "app",
            "obj": "",
            "line": 8,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo_examples.executables.exe_data_tuning_fixed'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "app",
            "obj": "",
            "line": 9,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s2_data_tuning.config.data_tuning_config'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "app",
            "obj": "",
            "line": 10,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.config.model_tuning_config'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "app",
            "obj": "",
            "line": 11,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo_examples.executables.exe_model_tuning'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "app",
            "obj": "",
            "line": 12,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.load_save_utils'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "app",
            "obj": "",
            "line": 13,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.config.model_tuning_config'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "app",
            "obj": "",
            "line": 14,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "import-error",
            "message": "Unable to import 'streamlit_pdf_viewer'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "app",
            "obj": "",
            "line": 15,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.definitions'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "app",
            "obj": "",
            "line": 16,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo_examples.executables.exe_data_insights'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "app",
            "obj": "",
            "line": 17,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s4_model_testing.model_testing'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "app",
            "obj": "",
            "line": 18,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.load_save'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "_zipdir_to_bytes",
            "line": 22,
            "column": 72,
            "path": "GUI/app.py",
            "symbol": "invalid-name",
            "message": "Variable name \"zf\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "_zipdir_to_bytes",
            "line": 24,
            "column": 16,
            "path": "GUI/app.py",
            "symbol": "invalid-name",
            "message": "Variable name \"f\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "app",
            "obj": "check_missing_fields",
            "line": 34,
            "column": 8,
            "path": "GUI/app.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'key' from outer scope (line 1139)",
            "message-id": "W0621"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "save_config_to_json",
            "line": 42,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "warning",
            "module": "app",
            "obj": "save_config_to_json",
            "line": 44,
            "column": 9,
            "path": "GUI/app.py",
            "symbol": "unspecified-encoding",
            "message": "Using open without explicitly specifying an encoding",
            "message-id": "W1514"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "save_config_to_json",
            "line": 44,
            "column": 28,
            "path": "GUI/app.py",
            "symbol": "invalid-name",
            "message": "Variable name \"f\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "exe_streamlit_data_tuning_auto",
            "line": 48,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "exe_streamlit_data_tuning_fixed",
            "line": 154,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "refactor",
            "module": "app",
            "obj": "exe_streamlit_data_tuning_fixed",
            "line": 154,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "inconsistent-return-statements",
            "message": "Either all return statements in a function should return an expression, or none of them should.",
            "message-id": "R1710"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "exe_streamlit_model_tuning",
            "line": 221,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "refactor",
            "module": "app",
            "obj": "exe_streamlit_model_tuning",
            "line": 221,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "too-many-locals",
            "message": "Too many local variables (16/15)",
            "message-id": "R0914"
        },
        {
            "type": "warning",
            "module": "app",
            "obj": "exe_streamlit_model_tuning",
            "line": 231,
            "column": 8,
            "path": "GUI/app.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'key' from outer scope (line 1139)",
            "message-id": "W0621"
        },
        {
            "type": "refactor",
            "module": "app",
            "obj": "exe_streamlit_model_tuning",
            "line": 221,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "too-many-statements",
            "message": "Too many statements (58/50)",
            "message-id": "R0915"
        },
        {
            "type": "refactor",
            "module": "app",
            "obj": "generate_external_insights",
            "line": 321,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "too-many-locals",
            "message": "Too many local variables (18/15)",
            "message-id": "R0914"
        },
        {
            "type": "warning",
            "module": "app",
            "obj": "generate_external_insights",
            "line": 354,
            "column": 8,
            "path": "GUI/app.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'submitted' from outer scope (line 1126)",
            "message-id": "W0621"
        },
        {
            "type": "refactor",
            "module": "app",
            "obj": "generate_external_insights",
            "line": 321,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "too-many-branches",
            "message": "Too many branches (25/12)",
            "message-id": "R0912"
        },
        {
            "type": "refactor",
            "module": "app",
            "obj": "generate_external_insights",
            "line": 321,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "too-many-statements",
            "message": "Too many statements (88/50)",
            "message-id": "R0915"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "generate_addmo_insights",
            "line": 459,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "refactor",
            "module": "app",
            "obj": "generate_addmo_insights",
            "line": 459,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "too-many-locals",
            "message": "Too many local variables (24/15)",
            "message-id": "R0914"
        },
        {
            "type": "warning",
            "module": "app",
            "obj": "generate_addmo_insights",
            "line": 478,
            "column": 12,
            "path": "GUI/app.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'submitted' from outer scope (line 1126)",
            "message-id": "W0621"
        },
        {
            "type": "warning",
            "module": "app",
            "obj": "generate_addmo_insights",
            "line": 490,
            "column": 13,
            "path": "GUI/app.py",
            "symbol": "unspecified-encoding",
            "message": "Using open without explicitly specifying an encoding",
            "message-id": "W1514"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "generate_addmo_insights",
            "line": 490,
            "column": 39,
            "path": "GUI/app.py",
            "symbol": "invalid-name",
            "message": "Variable name \"f\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "app",
            "obj": "generate_addmo_insights",
            "line": 492,
            "column": 13,
            "path": "GUI/app.py",
            "symbol": "unspecified-encoding",
            "message": "Using open without explicitly specifying an encoding",
            "message-id": "W1514"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "generate_addmo_insights",
            "line": 492,
            "column": 41,
            "path": "GUI/app.py",
            "symbol": "invalid-name",
            "message": "Variable name \"f\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "app",
            "obj": "generate_addmo_insights",
            "line": 459,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "too-many-branches",
            "message": "Too many branches (30/12)",
            "message-id": "R0912"
        },
        {
            "type": "refactor",
            "module": "app",
            "obj": "generate_addmo_insights",
            "line": 459,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "too-many-statements",
            "message": "Too many statements (111/50)",
            "message-id": "R0915"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "input_custom_model_config",
            "line": 613,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "refactor",
            "module": "app",
            "obj": "input_custom_model_config",
            "line": 613,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "too-many-locals",
            "message": "Too many local variables (17/15)",
            "message-id": "R0914"
        },
        {
            "type": "warning",
            "module": "app",
            "obj": "input_custom_model_config",
            "line": 629,
            "column": 8,
            "path": "GUI/app.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'submitted' from outer scope (line 1126)",
            "message-id": "W0621"
        },
        {
            "type": "warning",
            "module": "app",
            "obj": "input_custom_model_config",
            "line": 657,
            "column": 13,
            "path": "GUI/app.py",
            "symbol": "unspecified-encoding",
            "message": "Using open without explicitly specifying an encoding",
            "message-id": "W1514"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "input_custom_model_config",
            "line": 657,
            "column": 48,
            "path": "GUI/app.py",
            "symbol": "invalid-name",
            "message": "Variable name \"f\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "app",
            "obj": "input_custom_model_config",
            "line": 660,
            "column": 13,
            "path": "GUI/app.py",
            "symbol": "unspecified-encoding",
            "message": "Using open without explicitly specifying an encoding",
            "message-id": "W1514"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "input_custom_model_config",
            "line": 660,
            "column": 44,
            "path": "GUI/app.py",
            "symbol": "invalid-name",
            "message": "Variable name \"f\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "input_custom_model_config",
            "line": 663,
            "column": 39,
            "path": "GUI/app.py",
            "symbol": "invalid-name",
            "message": "Variable name \"f\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "exe_streamlit_data_insights",
            "line": 669,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "warning",
            "module": "app",
            "obj": "exe_streamlit_data_insights",
            "line": 677,
            "column": 4,
            "path": "GUI/app.py",
            "symbol": "unused-variable",
            "message": "Unused variable 'choose_plotting_type'",
            "message-id": "W0612"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "exe_streamlit_model_testing",
            "line": 716,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "refactor",
            "module": "app",
            "obj": "exe_streamlit_model_testing",
            "line": 716,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "too-many-locals",
            "message": "Too many local variables (17/15)",
            "message-id": "R0914"
        },
        {
            "type": "warning",
            "module": "app",
            "obj": "exe_streamlit_model_testing",
            "line": 741,
            "column": 8,
            "path": "GUI/app.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'key' from outer scope (line 1139)",
            "message-id": "W0621"
        },
        {
            "type": "warning",
            "module": "app",
            "obj": "exe_streamlit_model_testing",
            "line": 762,
            "column": 12,
            "path": "GUI/app.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'submitted' from outer scope (line 1126)",
            "message-id": "W0621"
        },
        {
            "type": "warning",
            "module": "app",
            "obj": "exe_streamlit_model_testing",
            "line": 798,
            "column": 16,
            "path": "GUI/app.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'tuning_type' from outer scope (line 1125)",
            "message-id": "W0621"
        },
        {
            "type": "warning",
            "module": "app",
            "obj": "exe_streamlit_model_testing",
            "line": 777,
            "column": 13,
            "path": "GUI/app.py",
            "symbol": "unspecified-encoding",
            "message": "Using open without explicitly specifying an encoding",
            "message-id": "W1514"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "exe_streamlit_model_testing",
            "line": 777,
            "column": 39,
            "path": "GUI/app.py",
            "symbol": "invalid-name",
            "message": "Variable name \"f\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "app",
            "obj": "exe_streamlit_model_testing",
            "line": 716,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "too-many-branches",
            "message": "Too many branches (28/12)",
            "message-id": "R0912"
        },
        {
            "type": "refactor",
            "module": "app",
            "obj": "exe_streamlit_model_testing",
            "line": 716,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "too-many-statements",
            "message": "Too many statements (88/50)",
            "message-id": "R0915"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "exe_streamlit_data_tuning_recreate",
            "line": 879,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "refactor",
            "module": "app",
            "obj": "exe_streamlit_data_tuning_recreate",
            "line": 879,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "too-many-locals",
            "message": "Too many local variables (16/15)",
            "message-id": "R0914"
        },
        {
            "type": "warning",
            "module": "app",
            "obj": "exe_streamlit_data_tuning_recreate",
            "line": 911,
            "column": 12,
            "path": "GUI/app.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'tuning_type' from outer scope (line 1125)",
            "message-id": "W0621"
        },
        {
            "type": "warning",
            "module": "app",
            "obj": "exe_streamlit_data_tuning_recreate",
            "line": 917,
            "column": 12,
            "path": "GUI/app.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'submitted' from outer scope (line 1126)",
            "message-id": "W0621"
        },
        {
            "type": "warning",
            "module": "app",
            "obj": "exe_streamlit_data_tuning_recreate",
            "line": 943,
            "column": 17,
            "path": "GUI/app.py",
            "symbol": "unspecified-encoding",
            "message": "Using open without explicitly specifying an encoding",
            "message-id": "W1514"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "exe_streamlit_data_tuning_recreate",
            "line": 943,
            "column": 43,
            "path": "GUI/app.py",
            "symbol": "invalid-name",
            "message": "Variable name \"f\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "app",
            "obj": "exe_streamlit_data_tuning_recreate",
            "line": 879,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "too-many-branches",
            "message": "Too many branches (15/12)",
            "message-id": "R0912"
        },
        {
            "type": "refactor",
            "module": "app",
            "obj": "exe_streamlit_data_tuning_recreate",
            "line": 879,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "too-many-statements",
            "message": "Too many statements (55/50)",
            "message-id": "R0915"
        },
        {
            "type": "warning",
            "module": "app",
            "obj": "exe_streamlit_data_tuning_recreate",
            "line": 948,
            "column": 29,
            "path": "GUI/app.py",
            "symbol": "unused-variable",
            "message": "Unused variable 'y_new'",
            "message-id": "W0612"
        },
        {
            "type": "warning",
            "module": "app",
            "obj": "exe_streamlit_data_tuning_recreate",
            "line": 948,
            "column": 36,
            "path": "GUI/app.py",
            "symbol": "unused-variable",
            "message": "Unused variable 'new_config'",
            "message-id": "W0612"
        },
        {
            "type": "warning",
            "module": "app",
            "obj": "exe_streamlit_data_tuning_recreate",
            "line": 950,
            "column": 29,
            "path": "GUI/app.py",
            "symbol": "unused-variable",
            "message": "Unused variable 'tuned_y_new'",
            "message-id": "W0612"
        },
        {
            "type": "warning",
            "module": "app",
            "obj": "",
            "line": 1022,
            "column": 11,
            "path": "GUI/app.py",
            "symbol": "broad-exception-caught",
            "message": "Catching too general exception Exception",
            "message-id": "W0718"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"import json\" should be placed before \"import streamlit as st\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"import io, os, zipfile\" should be placed before \"import streamlit as st\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"import io, os, zipfile\" should be placed before \"import streamlit as st\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"import io, os, zipfile\" should be placed before \"import streamlit as st\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 14,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "wrong-import-order",
            "message": "third party import \"from streamlit_pdf_viewer import pdf_viewer\" should be placed before \"from addmo.s1_data_tuning_auto.config.data_tuning_auto_config import DataTuningAutoSetup\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 9,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "ungrouped-imports",
            "message": "Imports from package addmo are not grouped",
            "message-id": "C0412"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 11,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "ungrouped-imports",
            "message": "Imports from package addmo_examples are not grouped",
            "message-id": "C0412"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 12,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "ungrouped-imports",
            "message": "Imports from package addmo are not grouped",
            "message-id": "C0412"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 15,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "ungrouped-imports",
            "message": "Imports from package addmo are not grouped",
            "message-id": "C0412"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 16,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "ungrouped-imports",
            "message": "Imports from package addmo_examples are not grouped",
            "message-id": "C0412"
        },
        {
            "type": "convention",
            "module": "app",
            "obj": "",
            "line": 17,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "ungrouped-imports",
            "message": "Imports from package addmo are not grouped",
            "message-id": "C0412"
        },
        {
            "type": "warning",
            "module": "app",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "unused-import",
            "message": "Unused import base64",
            "message-id": "W0611"
        },
        {
            "type": "warning",
            "module": "app",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "unused-import",
            "message": "Unused pydantic_output imported from streamlit_pydantic",
            "message-id": "W0611"
        },
        {
            "type": "warning",
            "module": "app",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "unused-import",
            "message": "Unused pydantic_form imported from streamlit_pydantic",
            "message-id": "W0611"
        },
        {
            "type": "warning",
            "module": "app",
            "obj": "",
            "line": 16,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "unused-import",
            "message": "Unused exe_parallel_plot imported from addmo_examples.executables.exe_data_insights",
            "message-id": "W0611"
        },
        {
            "type": "warning",
            "module": "app",
            "obj": "",
            "line": 18,
            "column": 0,
            "path": "GUI/app.py",
            "symbol": "unused-import",
            "message": "Unused load_data imported from addmo.util.load_save",
            "message-id": "W0611"
        },
        {
            "type": "convention",
            "module": "launch_GUI",
            "obj": "",
            "line": 11,
            "column": 0,
            "path": "GUI/launch_GUI.py",
            "symbol": "missing-final-newline",
            "message": "Final newline missing",
            "message-id": "C0304"
        },
        {
            "type": "convention",
            "module": "launch_GUI",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "GUI/launch_GUI.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "convention",
            "module": "launch_GUI",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "GUI/launch_GUI.py",
            "symbol": "invalid-name",
            "message": "Module name \"launch_GUI\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "error",
            "module": "launch_GUI",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "GUI/launch_GUI.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.load_save_utils'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "launch_GUI",
            "obj": "launch_streamlit",
            "line": 6,
            "column": 0,
            "path": "GUI/launch_GUI.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "warning",
            "module": "launch_GUI",
            "obj": "launch_streamlit",
            "line": 8,
            "column": 4,
            "path": "GUI/launch_GUI.py",
            "symbol": "subprocess-run-check",
            "message": "'subprocess.run' used without explicitly defining the value for 'check'.",
            "message-id": "W1510"
        },
        {
            "type": "convention",
            "module": "parallel_plots",
            "obj": "",
            "line": 94,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/parallel_plots.py",
            "symbol": "missing-final-newline",
            "message": "Final newline missing",
            "message-id": "C0304"
        },
        {
            "type": "convention",
            "module": "parallel_plots",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/parallel_plots.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "parallel_plots",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/parallel_plots.py",
            "symbol": "import-error",
            "message": "Unable to import 'numpy'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "parallel_plots",
            "obj": "",
            "line": 2,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/parallel_plots.py",
            "symbol": "import-error",
            "message": "Unable to import 'pandas'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "parallel_plots",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/parallel_plots.py",
            "symbol": "import-error",
            "message": "Unable to import 'plotly.express'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "parallel_plots",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/parallel_plots.py",
            "symbol": "import-error",
            "message": "Unable to import 'matplotlib.pyplot'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "parallel_plots",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/parallel_plots.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "parallel_plots",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/parallel_plots.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.load_save'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "parallel_plots",
            "obj": "parallel_plots",
            "line": 9,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/parallel_plots.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "refactor",
            "module": "parallel_plots",
            "obj": "parallel_plots",
            "line": 9,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/parallel_plots.py",
            "symbol": "too-many-locals",
            "message": "Too many local variables (25/15)",
            "message-id": "R0914"
        },
        {
            "type": "convention",
            "module": "parallel_plots",
            "obj": "parallel_plots",
            "line": 37,
            "column": 4,
            "path": "addmo/s5_insights/model_plots/parallel_plots.py",
            "symbol": "invalid-name",
            "message": "Variable name \"zs\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "parallel_plots",
            "obj": "parallel_plots",
            "line": 49,
            "column": 11,
            "path": "addmo/s5_insights/model_plots/parallel_plots.py",
            "symbol": "invalid-name",
            "message": "Variable name \"ax\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "parallel_plots",
            "obj": "parallel_plots_interactive",
            "line": 73,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/parallel_plots.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "warning",
            "module": "parallel_plots",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/parallel_plots.py",
            "symbol": "unused-import",
            "message": "Unused load_data imported from addmo.util.load_save",
            "message-id": "W0611"
        },
        {
            "type": "convention",
            "module": "carpet_plots",
            "obj": "",
            "line": 31,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "line-too-long",
            "message": "Line too long (135/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "carpet_plots",
            "obj": "",
            "line": 72,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "line-too-long",
            "message": "Line too long (125/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "carpet_plots",
            "obj": "",
            "line": 125,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "line-too-long",
            "message": "Line too long (101/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "carpet_plots",
            "obj": "",
            "line": 126,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "line-too-long",
            "message": "Line too long (101/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "carpet_plots",
            "obj": "",
            "line": 127,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "line-too-long",
            "message": "Line too long (101/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "carpet_plots",
            "obj": "",
            "line": 128,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "line-too-long",
            "message": "Line too long (101/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "carpet_plots",
            "obj": "",
            "line": 197,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "line-too-long",
            "message": "Line too long (161/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "carpet_plots",
            "obj": "",
            "line": 210,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "line-too-long",
            "message": "Line too long (101/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "carpet_plots",
            "obj": "",
            "line": 211,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "line-too-long",
            "message": "Line too long (121/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "carpet_plots",
            "obj": "",
            "line": 216,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "line-too-long",
            "message": "Line too long (124/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "carpet_plots",
            "obj": "",
            "line": 244,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "line-too-long",
            "message": "Line too long (125/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "carpet_plots",
            "obj": "",
            "line": 286,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "line-too-long",
            "message": "Line too long (105/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "carpet_plots",
            "obj": "",
            "line": 288,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "line-too-long",
            "message": "Line too long (106/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "carpet_plots",
            "obj": "",
            "line": 314,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "line-too-long",
            "message": "Line too long (109/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "carpet_plots",
            "obj": "",
            "line": 315,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "line-too-long",
            "message": "Line too long (108/100)",
            "message-id": "C0301"
        },
        {
            "type": "warning",
            "module": "carpet_plots",
            "obj": "",
            "line": 278,
            "column": 9,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "fixme",
            "message": "TODO: use this colormap incase of no truncation and set the background to darker grey",
            "message-id": "W0511"
        },
        {
            "type": "convention",
            "module": "carpet_plots",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "carpet_plots",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "import-error",
            "message": "Unable to import 'numpy'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "carpet_plots",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "import-error",
            "message": "Unable to import 'pandas'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "carpet_plots",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "import-error",
            "message": "Unable to import 'matplotlib.pyplot'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "carpet_plots",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "carpet_plots",
            "obj": "",
            "line": 8,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.definitions'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "carpet_plots",
            "obj": "",
            "line": 9,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.models.model_factory'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "carpet_plots",
            "obj": "",
            "line": 10,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.load_save'",
            "message-id": "E0401"
        },
        {
            "type": "warning",
            "module": "carpet_plots",
            "obj": "",
            "line": 11,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "reimported",
            "message": "Reimport 'matplotlib.pyplot' (imported line 4)",
            "message-id": "W0404"
        },
        {
            "type": "error",
            "module": "carpet_plots",
            "obj": "",
            "line": 11,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "import-error",
            "message": "Unable to import 'matplotlib.pyplot'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "carpet_plots",
            "obj": "",
            "line": 13,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "import-error",
            "message": "Unable to import 'mpl_toolkits.mplot3d'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "carpet_plots",
            "obj": "",
            "line": 14,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "import-error",
            "message": "Unable to import 'matplotlib'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "carpet_plots",
            "obj": "",
            "line": 15,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "import-error",
            "message": "Unable to import 'matplotlib.colors'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "carpet_plots",
            "obj": "",
            "line": 16,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.plotting_utils'",
            "message-id": "E0401"
        },
        {
            "type": "warning",
            "module": "carpet_plots",
            "obj": "",
            "line": 16,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "wildcard-import",
            "message": "Wildcard import addmo.util.plotting_utils",
            "message-id": "W0401"
        },
        {
            "type": "refactor",
            "module": "carpet_plots",
            "obj": "",
            "line": 17,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "consider-using-from-import",
            "message": "Use 'from matplotlib import colors' instead",
            "message-id": "R0402"
        },
        {
            "type": "error",
            "module": "carpet_plots",
            "obj": "",
            "line": 17,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "import-error",
            "message": "Unable to import 'matplotlib.colors'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "carpet_plots",
            "obj": "",
            "line": 19,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "import-error",
            "message": "Unable to import 'matplotlib'",
            "message-id": "E0401"
        },
        {
            "type": "warning",
            "module": "carpet_plots",
            "obj": "",
            "line": 19,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "reimported",
            "message": "Reimport 'cm' (imported line 14)",
            "message-id": "W0404"
        },
        {
            "type": "error",
            "module": "carpet_plots",
            "obj": "",
            "line": 20,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "import-error",
            "message": "Unable to import 'matplotlib.colors'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "carpet_plots",
            "obj": "truncate_colormap",
            "line": 22,
            "column": 59,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "invalid-name",
            "message": "Argument name \"n\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "carpet_plots",
            "obj": "plot_carpets",
            "line": 31,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "too-many-arguments",
            "message": "Too many arguments (7/5)",
            "message-id": "R0913"
        },
        {
            "type": "refactor",
            "module": "carpet_plots",
            "obj": "plot_carpets",
            "line": 31,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "too-many-locals",
            "message": "Too many local variables (44/15)",
            "message-id": "R0914"
        },
        {
            "type": "convention",
            "module": "carpet_plots",
            "obj": "plot_carpets",
            "line": 72,
            "column": 10,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "consider-using-f-string",
            "message": "Formatting a regular string which could be a f-string",
            "message-id": "C0209"
        },
        {
            "type": "convention",
            "module": "carpet_plots",
            "obj": "plot_carpets",
            "line": 89,
            "column": 8,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "invalid-name",
            "message": "Variable name \"ax\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "carpet_plots",
            "obj": "plot_carpets",
            "line": 90,
            "column": 8,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "invalid-name",
            "message": "Variable name \"X\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "carpet_plots",
            "obj": "plot_carpets",
            "line": 90,
            "column": 11,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "invalid-name",
            "message": "Variable name \"Y\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "carpet_plots",
            "obj": "plot_carpets",
            "line": 100,
            "column": 19,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "singleton-comparison",
            "message": "Comparison 'defaults_dict == None' should be 'defaults_dict is None'",
            "message-id": "C0121"
        },
        {
            "type": "convention",
            "module": "carpet_plots",
            "obj": "plot_carpets",
            "line": 105,
            "column": 8,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "invalid-name",
            "message": "Variable name \"Z1\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "carpet_plots",
            "obj": "plot_carpets",
            "line": 111,
            "column": 12,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "invalid-name",
            "message": "Variable name \"Z2\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "carpet_plots",
            "obj": "plot_carpets",
            "line": 117,
            "column": 12,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "invalid-name",
            "message": "Variable name \"Z1_greater\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "carpet_plots",
            "obj": "plot_carpets",
            "line": 118,
            "column": 12,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "invalid-name",
            "message": "Variable name \"Z1_smaller\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "carpet_plots",
            "obj": "plot_carpets",
            "line": 119,
            "column": 12,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "invalid-name",
            "message": "Variable name \"Z2_greater\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "carpet_plots",
            "obj": "plot_carpets",
            "line": 120,
            "column": 12,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "invalid-name",
            "message": "Variable name \"Z2_smaller\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "carpet_plots",
            "obj": "plot_carpets",
            "line": 31,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "too-many-branches",
            "message": "Too many branches (18/12)",
            "message-id": "R0912"
        },
        {
            "type": "refactor",
            "module": "carpet_plots",
            "obj": "plot_carpets",
            "line": 31,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "too-many-statements",
            "message": "Too many statements (84/50)",
            "message-id": "R0915"
        },
        {
            "type": "warning",
            "module": "carpet_plots",
            "obj": "plot_carpets",
            "line": 125,
            "column": 12,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "unused-variable",
            "message": "Unused variable 'surf2_smaller'",
            "message-id": "W0612"
        },
        {
            "type": "warning",
            "module": "carpet_plots",
            "obj": "plot_carpets",
            "line": 126,
            "column": 12,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "unused-variable",
            "message": "Unused variable 'surf1_smaller'",
            "message-id": "W0612"
        },
        {
            "type": "warning",
            "module": "carpet_plots",
            "obj": "plot_carpets",
            "line": 127,
            "column": 12,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "unused-variable",
            "message": "Unused variable 'surf2_greater'",
            "message-id": "W0612"
        },
        {
            "type": "warning",
            "module": "carpet_plots",
            "obj": "plot_carpets",
            "line": 128,
            "column": 12,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "unused-variable",
            "message": "Unused variable 'surf1_greater'",
            "message-id": "W0612"
        },
        {
            "type": "convention",
            "module": "carpet_plots",
            "obj": "plot_carpets_with_buckets",
            "line": 197,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "refactor",
            "module": "carpet_plots",
            "obj": "plot_carpets_with_buckets",
            "line": 197,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "too-many-arguments",
            "message": "Too many arguments (8/5)",
            "message-id": "R0913"
        },
        {
            "type": "refactor",
            "module": "carpet_plots",
            "obj": "plot_carpets_with_buckets",
            "line": 197,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "too-many-locals",
            "message": "Too many local variables (57/15)",
            "message-id": "R0914"
        },
        {
            "type": "convention",
            "module": "carpet_plots",
            "obj": "plot_carpets_with_buckets",
            "line": 244,
            "column": 10,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "consider-using-f-string",
            "message": "Formatting a regular string which could be a f-string",
            "message-id": "C0209"
        },
        {
            "type": "convention",
            "module": "carpet_plots",
            "obj": "plot_carpets_with_buckets",
            "line": 260,
            "column": 8,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "invalid-name",
            "message": "Variable name \"ax\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "carpet_plots",
            "obj": "plot_carpets_with_buckets",
            "line": 261,
            "column": 8,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "invalid-name",
            "message": "Variable name \"X\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "carpet_plots",
            "obj": "plot_carpets_with_buckets",
            "line": 261,
            "column": 11,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "invalid-name",
            "message": "Variable name \"Y\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "carpet_plots",
            "obj": "plot_carpets_with_buckets",
            "line": 274,
            "column": 8,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "invalid-name",
            "message": "Variable name \"Z1\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "carpet_plots",
            "obj": "plot_carpets_with_buckets",
            "line": 289,
            "column": 12,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "invalid-name",
            "message": "Variable name \"f\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "carpet_plots",
            "obj": "plot_carpets_with_buckets",
            "line": 197,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "too-many-branches",
            "message": "Too many branches (21/12)",
            "message-id": "R0912"
        },
        {
            "type": "refactor",
            "module": "carpet_plots",
            "obj": "plot_carpets_with_buckets",
            "line": 197,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "too-many-statements",
            "message": "Too many statements (97/50)",
            "message-id": "R0915"
        },
        {
            "type": "convention",
            "module": "carpet_plots",
            "obj": "",
            "line": 2,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"import math\" should be placed before \"import numpy as np\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "carpet_plots",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"from pathlib import Path\" should be placed before \"import numpy as np\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "carpet_plots",
            "obj": "",
            "line": 11,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "wrong-import-order",
            "message": "third party import \"import matplotlib.pyplot as plt\" should be placed before \"from addmo.util import plotting_utils as d\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "carpet_plots",
            "obj": "",
            "line": 12,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"from itertools import product\" should be placed before \"import numpy as np\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "carpet_plots",
            "obj": "",
            "line": 13,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "wrong-import-order",
            "message": "third party import \"from mpl_toolkits.mplot3d import Axes3D\" should be placed before \"from addmo.util import plotting_utils as d\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "carpet_plots",
            "obj": "",
            "line": 14,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "wrong-import-order",
            "message": "third party import \"from matplotlib import cm\" should be placed before \"from addmo.util import plotting_utils as d\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "carpet_plots",
            "obj": "",
            "line": 15,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "wrong-import-order",
            "message": "third party import \"from matplotlib.colors import ListedColormap\" should be placed before \"from addmo.util import plotting_utils as d\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "carpet_plots",
            "obj": "",
            "line": 17,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "wrong-import-order",
            "message": "third party import \"import matplotlib.colors as colors\" should be placed before \"from addmo.util import plotting_utils as d\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "carpet_plots",
            "obj": "",
            "line": 19,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "wrong-import-order",
            "message": "third party import \"from matplotlib import cm\" should be placed before \"from addmo.util import plotting_utils as d\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "carpet_plots",
            "obj": "",
            "line": 20,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "wrong-import-order",
            "message": "third party import \"from matplotlib.colors import LinearSegmentedColormap\" should be placed before \"from addmo.util import plotting_utils as d\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "carpet_plots",
            "obj": "",
            "line": 11,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "ungrouped-imports",
            "message": "Imports from package matplotlib are not grouped",
            "message-id": "C0412"
        },
        {
            "type": "convention",
            "module": "carpet_plots",
            "obj": "",
            "line": 16,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "ungrouped-imports",
            "message": "Imports from package addmo are not grouped",
            "message-id": "C0412"
        },
        {
            "type": "convention",
            "module": "carpet_plots",
            "obj": "",
            "line": 17,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "ungrouped-imports",
            "message": "Imports from package matplotlib are not grouped",
            "message-id": "C0412"
        },
        {
            "type": "warning",
            "module": "carpet_plots",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "unused-import",
            "message": "Unused Path imported from pathlib",
            "message-id": "W0611"
        },
        {
            "type": "warning",
            "module": "carpet_plots",
            "obj": "",
            "line": 8,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "unused-import",
            "message": "Unused return_results_dir_model_tuning imported from addmo.util.definitions",
            "message-id": "W0611"
        },
        {
            "type": "warning",
            "module": "carpet_plots",
            "obj": "",
            "line": 8,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "unused-import",
            "message": "Unused return_best_model imported from addmo.util.definitions",
            "message-id": "W0611"
        },
        {
            "type": "warning",
            "module": "carpet_plots",
            "obj": "",
            "line": 9,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "unused-import",
            "message": "Unused ModelFactory imported from addmo.s3_model_tuning.models.model_factory",
            "message-id": "W0611"
        },
        {
            "type": "warning",
            "module": "carpet_plots",
            "obj": "",
            "line": 10,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "unused-import",
            "message": "Unused load_data imported from addmo.util.load_save",
            "message-id": "W0611"
        },
        {
            "type": "warning",
            "module": "carpet_plots",
            "obj": "",
            "line": 12,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "unused-import",
            "message": "Unused product imported from itertools",
            "message-id": "W0611"
        },
        {
            "type": "warning",
            "module": "carpet_plots",
            "obj": "",
            "line": 13,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "unused-import",
            "message": "Unused Axes3D imported from mpl_toolkits.mplot3d",
            "message-id": "W0611"
        },
        {
            "type": "warning",
            "module": "carpet_plots",
            "obj": "",
            "line": 15,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/carpet_plots.py",
            "symbol": "unused-import",
            "message": "Unused ListedColormap imported from matplotlib.colors",
            "message-id": "W0611"
        },
        {
            "type": "convention",
            "module": "scatter_plot",
            "obj": "",
            "line": 12,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/scatter_plot.py",
            "symbol": "line-too-long",
            "message": "Line too long (103/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "scatter_plot",
            "obj": "",
            "line": 13,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/scatter_plot.py",
            "symbol": "line-too-long",
            "message": "Line too long (180/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "scatter_plot",
            "obj": "",
            "line": 20,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/scatter_plot.py",
            "symbol": "missing-final-newline",
            "message": "Final newline missing",
            "message-id": "C0304"
        },
        {
            "type": "convention",
            "module": "scatter_plot",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/scatter_plot.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "scatter_plot",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/scatter_plot.py",
            "symbol": "import-error",
            "message": "Unable to import 'matplotlib.pyplot'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "scatter_plot",
            "obj": "",
            "line": 2,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/scatter_plot.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "scatter_plot",
            "obj": "scatter",
            "line": 5,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/scatter_plot.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "refactor",
            "module": "scatter_plot",
            "obj": "scatter",
            "line": 13,
            "column": 127,
            "path": "addmo/s5_insights/model_plots/scatter_plot.py",
            "symbol": "use-dict-literal",
            "message": "Consider using '{\"facecolor\": 'white', \"alpha\": 0.7, \"edgecolor\": d.black}' instead of a call to 'dict'.",
            "message-id": "R1735"
        },
        {
            "type": "convention",
            "module": "plot_carpets_modelA",
            "obj": "",
            "line": 12,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/plot_carpets_modelA.py",
            "symbol": "line-too-long",
            "message": "Line too long (115/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "plot_carpets_modelA",
            "obj": "",
            "line": 86,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/plot_carpets_modelA.py",
            "symbol": "line-too-long",
            "message": "Line too long (101/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "plot_carpets_modelA",
            "obj": "",
            "line": 87,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/plot_carpets_modelA.py",
            "symbol": "line-too-long",
            "message": "Line too long (101/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "plot_carpets_modelA",
            "obj": "",
            "line": 88,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/plot_carpets_modelA.py",
            "symbol": "line-too-long",
            "message": "Line too long (101/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "plot_carpets_modelA",
            "obj": "",
            "line": 89,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/plot_carpets_modelA.py",
            "symbol": "line-too-long",
            "message": "Line too long (101/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "plot_carpets_modelA",
            "obj": "",
            "line": 200,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/plot_carpets_modelA.py",
            "symbol": "line-too-long",
            "message": "Line too long (154/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "plot_carpets_modelA",
            "obj": "",
            "line": 206,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/plot_carpets_modelA.py",
            "symbol": "trailing-newlines",
            "message": "Trailing newlines",
            "message-id": "C0305"
        },
        {
            "type": "convention",
            "module": "plot_carpets_modelA",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/plot_carpets_modelA.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "convention",
            "module": "plot_carpets_modelA",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/plot_carpets_modelA.py",
            "symbol": "invalid-name",
            "message": "Module name \"plot_carpets_modelA\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "plot_carpets_modelA",
            "obj": "",
            "line": 202,
            "column": 4,
            "path": "addmo/s5_insights/model_plots/plot_carpets_modelA.py",
            "symbol": "redefined-builtin",
            "message": "Redefining built-in 'dir'",
            "message-id": "W0622"
        },
        {
            "type": "error",
            "module": "plot_carpets_modelA",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/plot_carpets_modelA.py",
            "symbol": "import-error",
            "message": "Unable to import 'pandas'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "plot_carpets_modelA",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/plot_carpets_modelA.py",
            "symbol": "import-error",
            "message": "Unable to import 'numpy'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "plot_carpets_modelA",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/plot_carpets_modelA.py",
            "symbol": "import-error",
            "message": "Unable to import 'matplotlib.pyplot'",
            "message-id": "E0401"
        },
        {
            "type": "refactor",
            "module": "plot_carpets_modelA",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/plot_carpets_modelA.py",
            "symbol": "consider-using-from-import",
            "message": "Use 'from matplotlib import colors' instead",
            "message-id": "R0402"
        },
        {
            "type": "error",
            "module": "plot_carpets_modelA",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/plot_carpets_modelA.py",
            "symbol": "import-error",
            "message": "Unable to import 'matplotlib.colors'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "plot_carpets_modelA",
            "obj": "",
            "line": 7,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/plot_carpets_modelA.py",
            "symbol": "import-error",
            "message": "Unable to import 'utilities'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "plot_carpets_modelA",
            "obj": "",
            "line": 8,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/plot_carpets_modelA.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.models.model_factory'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "plot_carpets_modelA",
            "obj": "",
            "line": 9,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/plot_carpets_modelA.py",
            "symbol": "import-error",
            "message": "Unable to import 'aixtra.system_simulations'",
            "message-id": "E0401"
        },
        {
            "type": "refactor",
            "module": "plot_carpets_modelA",
            "obj": "plot_system_carpets",
            "line": 12,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/plot_carpets_modelA.py",
            "symbol": "too-many-locals",
            "message": "Too many local variables (39/15)",
            "message-id": "R0914"
        },
        {
            "type": "convention",
            "module": "plot_carpets_modelA",
            "obj": "plot_system_carpets",
            "line": 33,
            "column": 4,
            "path": "addmo/s5_insights/model_plots/plot_carpets_modelA.py",
            "symbol": "invalid-name",
            "message": "Variable name \"gs\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "plot_carpets_modelA",
            "obj": "plot_system_carpets",
            "line": 49,
            "column": 8,
            "path": "addmo/s5_insights/model_plots/plot_carpets_modelA.py",
            "symbol": "invalid-name",
            "message": "Variable name \"ax\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "plot_carpets_modelA",
            "obj": "plot_system_carpets",
            "line": 51,
            "column": 8,
            "path": "addmo/s5_insights/model_plots/plot_carpets_modelA.py",
            "symbol": "invalid-name",
            "message": "Variable name \"X\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "plot_carpets_modelA",
            "obj": "plot_system_carpets",
            "line": 51,
            "column": 11,
            "path": "addmo/s5_insights/model_plots/plot_carpets_modelA.py",
            "symbol": "invalid-name",
            "message": "Variable name \"Y\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "plot_carpets_modelA",
            "obj": "plot_system_carpets",
            "line": 61,
            "column": 19,
            "path": "addmo/s5_insights/model_plots/plot_carpets_modelA.py",
            "symbol": "singleton-comparison",
            "message": "Comparison 'defaults_dict == None' should be 'defaults_dict is None'",
            "message-id": "C0121"
        },
        {
            "type": "convention",
            "module": "plot_carpets_modelA",
            "obj": "plot_system_carpets",
            "line": 66,
            "column": 8,
            "path": "addmo/s5_insights/model_plots/plot_carpets_modelA.py",
            "symbol": "invalid-name",
            "message": "Variable name \"Z1\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "plot_carpets_modelA",
            "obj": "plot_system_carpets",
            "line": 72,
            "column": 12,
            "path": "addmo/s5_insights/model_plots/plot_carpets_modelA.py",
            "symbol": "invalid-name",
            "message": "Variable name \"Z2\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "plot_carpets_modelA",
            "obj": "plot_system_carpets",
            "line": 78,
            "column": 12,
            "path": "addmo/s5_insights/model_plots/plot_carpets_modelA.py",
            "symbol": "invalid-name",
            "message": "Variable name \"Z1_greater\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "plot_carpets_modelA",
            "obj": "plot_system_carpets",
            "line": 79,
            "column": 12,
            "path": "addmo/s5_insights/model_plots/plot_carpets_modelA.py",
            "symbol": "invalid-name",
            "message": "Variable name \"Z1_smaller\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "plot_carpets_modelA",
            "obj": "plot_system_carpets",
            "line": 80,
            "column": 12,
            "path": "addmo/s5_insights/model_plots/plot_carpets_modelA.py",
            "symbol": "invalid-name",
            "message": "Variable name \"Z2_greater\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "plot_carpets_modelA",
            "obj": "plot_system_carpets",
            "line": 81,
            "column": 12,
            "path": "addmo/s5_insights/model_plots/plot_carpets_modelA.py",
            "symbol": "invalid-name",
            "message": "Variable name \"Z2_smaller\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "plot_carpets_modelA",
            "obj": "plot_system_carpets",
            "line": 12,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/plot_carpets_modelA.py",
            "symbol": "too-many-statements",
            "message": "Too many statements (65/50)",
            "message-id": "R0915"
        },
        {
            "type": "warning",
            "module": "plot_carpets_modelA",
            "obj": "plot_system_carpets",
            "line": 86,
            "column": 12,
            "path": "addmo/s5_insights/model_plots/plot_carpets_modelA.py",
            "symbol": "unused-variable",
            "message": "Unused variable 'surf2_smaller'",
            "message-id": "W0612"
        },
        {
            "type": "warning",
            "module": "plot_carpets_modelA",
            "obj": "plot_system_carpets",
            "line": 87,
            "column": 12,
            "path": "addmo/s5_insights/model_plots/plot_carpets_modelA.py",
            "symbol": "unused-variable",
            "message": "Unused variable 'surf1_smaller'",
            "message-id": "W0612"
        },
        {
            "type": "warning",
            "module": "plot_carpets_modelA",
            "obj": "plot_system_carpets",
            "line": 88,
            "column": 12,
            "path": "addmo/s5_insights/model_plots/plot_carpets_modelA.py",
            "symbol": "unused-variable",
            "message": "Unused variable 'surf2_greater'",
            "message-id": "W0612"
        },
        {
            "type": "warning",
            "module": "plot_carpets_modelA",
            "obj": "plot_system_carpets",
            "line": 89,
            "column": 12,
            "path": "addmo/s5_insights/model_plots/plot_carpets_modelA.py",
            "symbol": "unused-variable",
            "message": "Unused variable 'surf1_greater'",
            "message-id": "W0612"
        },
        {
            "type": "convention",
            "module": "plot_carpets_modelA",
            "obj": "execute",
            "line": 156,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/plot_carpets_modelA.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "warning",
            "module": "plot_carpets_modelA",
            "obj": "execute",
            "line": 156,
            "column": 12,
            "path": "addmo/s5_insights/model_plots/plot_carpets_modelA.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'plot_name' from outer scope (line 197)",
            "message-id": "W0621"
        },
        {
            "type": "warning",
            "module": "plot_carpets_modelA",
            "obj": "execute",
            "line": 156,
            "column": 23,
            "path": "addmo/s5_insights/model_plots/plot_carpets_modelA.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'plot_dir' from outer scope (line 198)",
            "message-id": "W0621"
        },
        {
            "type": "warning",
            "module": "plot_carpets_modelA",
            "obj": "execute",
            "line": 156,
            "column": 33,
            "path": "addmo/s5_insights/model_plots/plot_carpets_modelA.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'path_to_regressor' from outer scope (line 204)",
            "message-id": "W0621"
        },
        {
            "type": "warning",
            "module": "plot_carpets_modelA",
            "obj": "execute",
            "line": 181,
            "column": 4,
            "path": "addmo/s5_insights/model_plots/plot_carpets_modelA.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'plt' from outer scope (line 5)",
            "message-id": "W0621"
        },
        {
            "type": "convention",
            "module": "plot_carpets_modelA",
            "obj": "",
            "line": 197,
            "column": 4,
            "path": "addmo/s5_insights/model_plots/plot_carpets_modelA.py",
            "symbol": "invalid-name",
            "message": "Constant name \"plot_name\" doesn't conform to UPPER_CASE naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "plot_carpets_modelA",
            "obj": "",
            "line": 200,
            "column": 4,
            "path": "addmo/s5_insights/model_plots/plot_carpets_modelA.py",
            "symbol": "invalid-name",
            "message": "Constant name \"pre_dir\" doesn't conform to UPPER_CASE naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "plot_carpets_modelA",
            "obj": "",
            "line": 201,
            "column": 4,
            "path": "addmo/s5_insights/model_plots/plot_carpets_modelA.py",
            "symbol": "invalid-name",
            "message": "Constant name \"pre_dir_2\" doesn't conform to UPPER_CASE naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "plot_carpets_modelA",
            "obj": "",
            "line": 9,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/plot_carpets_modelA.py",
            "symbol": "wrong-import-order",
            "message": "third party import \"from aixtra.system_simulations import system_simulations as sys_sim\" should be placed before \"from addmo.s3_model_tuning.models.model_factory import ModelFactory\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "time_series",
            "obj": "",
            "line": 61,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/time_series.py",
            "symbol": "line-too-long",
            "message": "Line too long (102/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "time_series",
            "obj": "",
            "line": 83,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/time_series.py",
            "symbol": "trailing-newlines",
            "message": "Trailing newlines",
            "message-id": "C0305"
        },
        {
            "type": "convention",
            "module": "time_series",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/time_series.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "time_series",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/time_series.py",
            "symbol": "import-error",
            "message": "Unable to import 'pandas'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "time_series",
            "obj": "",
            "line": 2,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/time_series.py",
            "symbol": "import-error",
            "message": "Unable to import 'matplotlib.dates'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "time_series",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/time_series.py",
            "symbol": "import-error",
            "message": "Unable to import 'matplotlib.pyplot'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "time_series",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/time_series.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "time_series",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/time_series.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.load_save'",
            "message-id": "E0401"
        },
        {
            "type": "refactor",
            "module": "time_series",
            "obj": "plot_timeseries_combined",
            "line": 8,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/time_series.py",
            "symbol": "too-many-locals",
            "message": "Too many local variables (19/15)",
            "message-id": "R0914"
        },
        {
            "type": "convention",
            "module": "time_series",
            "obj": "plot_timeseries_combined",
            "line": 35,
            "column": 8,
            "path": "addmo/s5_insights/model_plots/time_series.py",
            "symbol": "invalid-name",
            "message": "Variable name \"ax\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "time_series",
            "obj": "plot_timeseries_combined",
            "line": 64,
            "column": 12,
            "path": "addmo/s5_insights/model_plots/time_series.py",
            "symbol": "invalid-name",
            "message": "Variable name \"ax\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "time_series",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "addmo/s5_insights/model_plots/time_series.py",
            "symbol": "unused-import",
            "message": "Unused load_data imported from addmo.util.load_save",
            "message-id": "W0611"
        },
        {
            "type": "convention",
            "module": "feature_constructor",
            "obj": "",
            "line": 28,
            "column": 0,
            "path": "addmo/s2_data_tuning/feature_constructor.py",
            "symbol": "missing-final-newline",
            "message": "Final newline missing",
            "message-id": "C0304"
        },
        {
            "type": "convention",
            "module": "feature_constructor",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo/s2_data_tuning/feature_constructor.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "feature_constructor",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo/s2_data_tuning/feature_constructor.py",
            "symbol": "import-error",
            "message": "Unable to import 'pandas'",
            "message-id": "E0401"
        },
        {
            "type": "warning",
            "module": "feature_constructor",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "addmo/s2_data_tuning/feature_constructor.py",
            "symbol": "pointless-string-statement",
            "message": "String statement has no effect",
            "message-id": "W0105"
        },
        {
            "type": "convention",
            "module": "data_tuner_fixed",
            "obj": "",
            "line": 61,
            "column": 0,
            "path": "addmo/s2_data_tuning/data_tuner_fixed.py",
            "symbol": "missing-final-newline",
            "message": "Final newline missing",
            "message-id": "C0304"
        },
        {
            "type": "warning",
            "module": "data_tuner_fixed",
            "obj": "",
            "line": 30,
            "column": 49,
            "path": "addmo/s2_data_tuning/data_tuner_fixed.py",
            "symbol": "fixme",
            "message": "Todo: notwenig?",
            "message-id": "W0511"
        },
        {
            "type": "convention",
            "module": "data_tuner_fixed",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo/s2_data_tuning/data_tuner_fixed.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "data_tuner_fixed",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo/s2_data_tuning/data_tuner_fixed.py",
            "symbol": "import-error",
            "message": "Unable to import 'pandas'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "data_tuner_fixed",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "addmo/s2_data_tuning/data_tuner_fixed.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s2_data_tuning.config.data_tuning_config'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "data_tuner_fixed",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "addmo/s2_data_tuning/data_tuner_fixed.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s2_data_tuning'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "data_tuner_fixed",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "addmo/s2_data_tuning/data_tuner_fixed.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.load_save'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "data_tuner_fixed",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "addmo/s2_data_tuning/data_tuner_fixed.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.experiment_logger'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "data_tuner_fixed",
            "obj": "DataTunerByConfig.tune_fixed",
            "line": 36,
            "column": 4,
            "path": "addmo/s2_data_tuning/data_tuner_fixed.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "warning",
            "module": "data_tuner_fixed",
            "obj": "DataTunerByConfig.update_x_raw",
            "line": 25,
            "column": 8,
            "path": "addmo/s2_data_tuning/data_tuner_fixed.py",
            "symbol": "attribute-defined-outside-init",
            "message": "Attribute 'xy_raw' defined outside __init__",
            "message-id": "W0201"
        },
        {
            "type": "warning",
            "module": "data_tuner_fixed",
            "obj": "DataTunerByConfig.update_x_raw",
            "line": 28,
            "column": 8,
            "path": "addmo/s2_data_tuning/data_tuner_fixed.py",
            "symbol": "attribute-defined-outside-init",
            "message": "Attribute 'xy_raw' defined outside __init__",
            "message-id": "W0201"
        },
        {
            "type": "warning",
            "module": "data_tuner_fixed",
            "obj": "DataTunerByConfig.update_y",
            "line": 33,
            "column": 8,
            "path": "addmo/s2_data_tuning/data_tuner_fixed.py",
            "symbol": "attribute-defined-outside-init",
            "message": "Attribute 'xy_raw' defined outside __init__",
            "message-id": "W0201"
        },
        {
            "type": "warning",
            "module": "data_tuner_fixed",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "addmo/s2_data_tuning/data_tuner_fixed.py",
            "symbol": "unused-import",
            "message": "Unused load_data imported from addmo.util.load_save",
            "message-id": "W0611"
        },
        {
            "type": "warning",
            "module": "data_tuner_fixed",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "addmo/s2_data_tuning/data_tuner_fixed.py",
            "symbol": "unused-import",
            "message": "Unused ExperimentLogger imported from addmo.util.experiment_logger",
            "message-id": "W0611"
        },
        {
            "type": "convention",
            "module": "config.data_tuning_config",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo/s2_data_tuning/config/data_tuning_config.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "config.data_tuning_config",
            "obj": "",
            "line": 2,
            "column": 0,
            "path": "addmo/s2_data_tuning/config/data_tuning_config.py",
            "symbol": "import-error",
            "message": "Unable to import 'pydantic'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "config.data_tuning_config",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "addmo/s2_data_tuning/config/data_tuning_config.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.load_save_utils'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "config.data_tuning_config",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "addmo/s2_data_tuning/config/data_tuning_config.py",
            "symbol": "import-error",
            "message": "Unable to import 'pydantic'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "config.data_tuning_config",
            "obj": "DataTuningFixedConfig",
            "line": 6,
            "column": 0,
            "path": "addmo/s2_data_tuning/config/data_tuning_config.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "refactor",
            "module": "config.data_tuning_config",
            "obj": "DataTuningFixedConfig",
            "line": 6,
            "column": 0,
            "path": "addmo/s2_data_tuning/config/data_tuning_config.py",
            "symbol": "too-few-public-methods",
            "message": "Too few public methods (0/2)",
            "message-id": "R0903"
        },
        {
            "type": "convention",
            "module": "config.data_tuning_config",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "addmo/s2_data_tuning/config/data_tuning_config.py",
            "symbol": "wrong-import-order",
            "message": "third party import \"from pydantic import conlist\" should be placed before \"from addmo.util.load_save_utils import root_dir\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "config.data_tuning_config",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "addmo/s2_data_tuning/config/data_tuning_config.py",
            "symbol": "ungrouped-imports",
            "message": "Imports from package pydantic are not grouped",
            "message-id": "C0412"
        },
        {
            "type": "warning",
            "module": "config.data_tuning_config",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "addmo/s2_data_tuning/config/data_tuning_config.py",
            "symbol": "unused-import",
            "message": "Unused conlist imported from pydantic",
            "message-id": "W0611"
        },
        {
            "type": "convention",
            "module": "model_tuner",
            "obj": "",
            "line": 79,
            "column": 0,
            "path": "addmo/s3_model_tuning/model_tuner.py",
            "symbol": "trailing-newlines",
            "message": "Trailing newlines",
            "message-id": "C0305"
        },
        {
            "type": "convention",
            "module": "model_tuner",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo/s3_model_tuning/model_tuner.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "model_tuner",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "addmo/s3_model_tuning/model_tuner.py",
            "symbol": "import-error",
            "message": "Unable to import 'sklearn.metrics'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "model_tuner",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "addmo/s3_model_tuning/model_tuner.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.config.model_tuning_config'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "model_tuner",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "addmo/s3_model_tuning/model_tuner.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.models.model_factory'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "model_tuner",
            "obj": "",
            "line": 7,
            "column": 0,
            "path": "addmo/s3_model_tuning/model_tuner.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.hyperparameter_tuning.hyparam_tuning_factory'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "model_tuner",
            "obj": "",
            "line": 10,
            "column": 0,
            "path": "addmo/s3_model_tuning/model_tuner.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.scoring.validator_factory'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "model_tuner",
            "obj": "ModelTuner",
            "line": 13,
            "column": 0,
            "path": "addmo/s3_model_tuning/model_tuner.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "hyparam_tuning_factory",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo/s3_model_tuning/hyperparameter_tuning/hyparam_tuning_factory.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "hyparam_tuning_factory",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo/s3_model_tuning/hyperparameter_tuning/hyparam_tuning_factory.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.hyperparameter_tuning.hyperparameter_tuner'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "hyparam_tuning_factory",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "addmo/s3_model_tuning/hyperparameter_tuning/hyparam_tuning_factory.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.models.abstract_model'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "hyparam_tuning_factory",
            "obj": "",
            "line": 7,
            "column": 0,
            "path": "addmo/s3_model_tuning/hyperparameter_tuning/hyparam_tuning_factory.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.config.model_tuning_config'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "hyparam_tuning_factory",
            "obj": "",
            "line": 8,
            "column": 0,
            "path": "addmo/s3_model_tuning/hyperparameter_tuning/hyparam_tuning_factory.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.hyperparameter_tuning.abstract_hyparam_tuner'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "hyparam_tuning_factory",
            "obj": "",
            "line": 11,
            "column": 0,
            "path": "addmo/s3_model_tuning/hyperparameter_tuning/hyparam_tuning_factory.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.scoring.abstract_scorer'",
            "message-id": "E0401"
        },
        {
            "type": "refactor",
            "module": "hyparam_tuning_factory",
            "obj": "HyperparameterTunerFactory.tuner_factory",
            "line": 30,
            "column": 8,
            "path": "addmo/s3_model_tuning/hyperparameter_tuning/hyparam_tuning_factory.py",
            "symbol": "no-else-return",
            "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
            "message-id": "R1705"
        },
        {
            "type": "convention",
            "module": "hyparam_tuning_factory",
            "obj": "HyperparameterTunerFactory.tuner_factory",
            "line": 37,
            "column": 29,
            "path": "addmo/s3_model_tuning/hyperparameter_tuning/hyparam_tuning_factory.py",
            "symbol": "consider-using-f-string",
            "message": "Formatting a regular string which could be a f-string",
            "message-id": "C0209"
        },
        {
            "type": "refactor",
            "module": "hyparam_tuning_factory",
            "obj": "HyperparameterTunerFactory",
            "line": 14,
            "column": 0,
            "path": "addmo/s3_model_tuning/hyperparameter_tuning/hyparam_tuning_factory.py",
            "symbol": "too-few-public-methods",
            "message": "Too few public methods (1/2)",
            "message-id": "R0903"
        },
        {
            "type": "warning",
            "module": "hyparam_tuning_factory",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "addmo/s3_model_tuning/hyperparameter_tuning/hyparam_tuning_factory.py",
            "symbol": "unused-import",
            "message": "Unused AbstractMLModel imported from addmo.s3_model_tuning.models.abstract_model",
            "message-id": "W0611"
        },
        {
            "type": "convention",
            "module": "abstract_hyparam_tuner",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo/s3_model_tuning/hyperparameter_tuning/abstract_hyparam_tuner.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "abstract_hyparam_tuner",
            "obj": "",
            "line": 2,
            "column": 0,
            "path": "addmo/s3_model_tuning/hyperparameter_tuning/abstract_hyparam_tuner.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.models.abstract_model'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "abstract_hyparam_tuner",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "addmo/s3_model_tuning/hyperparameter_tuning/abstract_hyparam_tuner.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.config.model_tuning_config'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "abstract_hyparam_tuner",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "addmo/s3_model_tuning/hyperparameter_tuning/abstract_hyparam_tuner.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.scoring.abstract_scorer'",
            "message-id": "E0401"
        },
        {
            "type": "refactor",
            "module": "abstract_hyparam_tuner",
            "obj": "AbstractHyParamTuner",
            "line": 7,
            "column": 0,
            "path": "addmo/s3_model_tuning/hyperparameter_tuning/abstract_hyparam_tuner.py",
            "symbol": "too-few-public-methods",
            "message": "Too few public methods (1/2)",
            "message-id": "R0903"
        },
        {
            "type": "convention",
            "module": "hyperparameter_tuner",
            "obj": "",
            "line": 39,
            "column": 0,
            "path": "addmo/s3_model_tuning/hyperparameter_tuning/hyperparameter_tuner.py",
            "symbol": "line-too-long",
            "message": "Line too long (111/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "hyperparameter_tuner",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo/s3_model_tuning/hyperparameter_tuning/hyperparameter_tuner.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "hyperparameter_tuner",
            "obj": "",
            "line": 2,
            "column": 0,
            "path": "addmo/s3_model_tuning/hyperparameter_tuning/hyperparameter_tuner.py",
            "symbol": "import-error",
            "message": "Unable to import 'optuna'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "hyperparameter_tuner",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "addmo/s3_model_tuning/hyperparameter_tuning/hyperparameter_tuner.py",
            "symbol": "import-error",
            "message": "Unable to import 'wandb'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "hyperparameter_tuner",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "addmo/s3_model_tuning/hyperparameter_tuning/hyperparameter_tuner.py",
            "symbol": "import-error",
            "message": "Unable to import 'sklearn.model_selection'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "hyperparameter_tuner",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "addmo/s3_model_tuning/hyperparameter_tuning/hyperparameter_tuner.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.models.abstract_model'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "hyperparameter_tuner",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "addmo/s3_model_tuning/hyperparameter_tuning/hyperparameter_tuner.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.hyperparameter_tuning.abstract_hyparam_tuner'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "hyperparameter_tuner",
            "obj": "",
            "line": 9,
            "column": 0,
            "path": "addmo/s3_model_tuning/hyperparameter_tuning/hyperparameter_tuner.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.experiment_logger'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "hyperparameter_tuner",
            "obj": "",
            "line": 10,
            "column": 0,
            "path": "addmo/s3_model_tuning/hyperparameter_tuning/hyperparameter_tuner.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.experiment_logger'",
            "message-id": "E0401"
        },
        {
            "type": "warning",
            "module": "hyperparameter_tuner",
            "obj": "NoTuningTuner.tune",
            "line": 18,
            "column": 43,
            "path": "addmo/s3_model_tuning/hyperparameter_tuning/hyperparameter_tuner.py",
            "symbol": "unused-argument",
            "message": "Unused argument 'x_train_val'",
            "message-id": "W0613"
        },
        {
            "type": "warning",
            "module": "hyperparameter_tuner",
            "obj": "NoTuningTuner.tune",
            "line": 18,
            "column": 56,
            "path": "addmo/s3_model_tuning/hyperparameter_tuning/hyperparameter_tuner.py",
            "symbol": "unused-argument",
            "message": "Unused argument 'y_train_val'",
            "message-id": "W0613"
        },
        {
            "type": "refactor",
            "module": "hyperparameter_tuner",
            "obj": "NoTuningTuner",
            "line": 13,
            "column": 0,
            "path": "addmo/s3_model_tuning/hyperparameter_tuning/hyperparameter_tuner.py",
            "symbol": "too-few-public-methods",
            "message": "Too few public methods (1/2)",
            "message-id": "R0903"
        },
        {
            "type": "convention",
            "module": "hyperparameter_tuner",
            "obj": "OptunaTuner",
            "line": 31,
            "column": 0,
            "path": "addmo/s3_model_tuning/hyperparameter_tuning/hyperparameter_tuner.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "warning",
            "module": "hyperparameter_tuner",
            "obj": "OptunaTuner.tune",
            "line": 32,
            "column": 0,
            "path": "addmo/s3_model_tuning/hyperparameter_tuning/hyperparameter_tuner.py",
            "symbol": "unused-argument",
            "message": "Unused argument 'kwargs'",
            "message-id": "W0613"
        },
        {
            "type": "refactor",
            "module": "hyperparameter_tuner",
            "obj": "OptunaTuner",
            "line": 31,
            "column": 0,
            "path": "addmo/s3_model_tuning/hyperparameter_tuning/hyperparameter_tuner.py",
            "symbol": "too-few-public-methods",
            "message": "Too few public methods (1/2)",
            "message-id": "R0903"
        },
        {
            "type": "warning",
            "module": "hyperparameter_tuner",
            "obj": "GridSearchTuner.tune",
            "line": 96,
            "column": 0,
            "path": "addmo/s3_model_tuning/hyperparameter_tuning/hyperparameter_tuner.py",
            "symbol": "unused-argument",
            "message": "Unused argument 'kwargs'",
            "message-id": "W0613"
        },
        {
            "type": "refactor",
            "module": "hyperparameter_tuner",
            "obj": "GridSearchTuner",
            "line": 91,
            "column": 0,
            "path": "addmo/s3_model_tuning/hyperparameter_tuning/hyperparameter_tuner.py",
            "symbol": "too-few-public-methods",
            "message": "Too few public methods (1/2)",
            "message-id": "R0903"
        },
        {
            "type": "warning",
            "module": "hyperparameter_tuner",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "addmo/s3_model_tuning/hyperparameter_tuning/hyperparameter_tuner.py",
            "symbol": "unused-import",
            "message": "Unused import wandb",
            "message-id": "W0611"
        },
        {
            "type": "warning",
            "module": "hyperparameter_tuner",
            "obj": "",
            "line": 10,
            "column": 0,
            "path": "addmo/s3_model_tuning/hyperparameter_tuning/hyperparameter_tuner.py",
            "symbol": "unused-import",
            "message": "Unused WandbLogger imported from addmo.util.experiment_logger",
            "message-id": "W0611"
        },
        {
            "type": "convention",
            "module": "scoring.abstract_scorer",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo/s3_model_tuning/scoring/abstract_scorer.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "scoring.abstract_scorer",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "addmo/s3_model_tuning/scoring/abstract_scorer.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.config.model_tuning_config'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "scoring.abstract_scorer",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "addmo/s3_model_tuning/scoring/abstract_scorer.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.models.abstract_model'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "scoring.abstract_scorer",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "addmo/s3_model_tuning/scoring/abstract_scorer.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.scoring.metrics.abstract_metric'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "scoring.abstract_scorer",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "addmo/s3_model_tuning/scoring/abstract_scorer.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.scoring.metrics.metric_factory'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "scoring.abstract_scorer",
            "obj": "",
            "line": 7,
            "column": 0,
            "path": "addmo/s3_model_tuning/scoring/abstract_scorer.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.scoring.validation_splitting.splitter_factory'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "scoring.abstract_scorer",
            "obj": "Scoring.score_test",
            "line": 20,
            "column": 49,
            "path": "addmo/s3_model_tuning/scoring/abstract_scorer.py",
            "symbol": "invalid-name",
            "message": "Argument name \"x\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "scoring.abstract_scorer",
            "obj": "Scoring.score_test",
            "line": 20,
            "column": 52,
            "path": "addmo/s3_model_tuning/scoring/abstract_scorer.py",
            "symbol": "invalid-name",
            "message": "Argument name \"y\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "scoring.abstract_scorer",
            "obj": "Scoring",
            "line": 12,
            "column": 0,
            "path": "addmo/s3_model_tuning/scoring/abstract_scorer.py",
            "symbol": "too-few-public-methods",
            "message": "Too few public methods (1/2)",
            "message-id": "R0903"
        },
        {
            "type": "convention",
            "module": "scoring.abstract_scorer",
            "obj": "ValidationScoring",
            "line": 26,
            "column": 0,
            "path": "addmo/s3_model_tuning/scoring/abstract_scorer.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "scoring.abstract_scorer",
            "obj": "ValidationScoring.score_validation",
            "line": 35,
            "column": 49,
            "path": "addmo/s3_model_tuning/scoring/abstract_scorer.py",
            "symbol": "invalid-name",
            "message": "Argument name \"x\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "scoring.abstract_scorer",
            "obj": "ValidationScoring.score_validation",
            "line": 35,
            "column": 52,
            "path": "addmo/s3_model_tuning/scoring/abstract_scorer.py",
            "symbol": "invalid-name",
            "message": "Argument name \"y\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "scoring.abstract_scorer",
            "obj": "ValidationScoring.score_validation",
            "line": 39,
            "column": 8,
            "path": "addmo/s3_model_tuning/scoring/abstract_scorer.py",
            "symbol": "unnecessary-pass",
            "message": "Unnecessary pass statement",
            "message-id": "W0107"
        },
        {
            "type": "refactor",
            "module": "scoring.abstract_scorer",
            "obj": "ValidationScoring",
            "line": 26,
            "column": 0,
            "path": "addmo/s3_model_tuning/scoring/abstract_scorer.py",
            "symbol": "too-few-public-methods",
            "message": "Too few public methods (1/2)",
            "message-id": "R0903"
        },
        {
            "type": "convention",
            "module": "scoring.validator",
            "obj": "",
            "line": 49,
            "column": 0,
            "path": "addmo/s3_model_tuning/scoring/validator.py",
            "symbol": "trailing-newlines",
            "message": "Trailing newlines",
            "message-id": "C0305"
        },
        {
            "type": "convention",
            "module": "scoring.validator",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo/s3_model_tuning/scoring/validator.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "scoring.validator",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo/s3_model_tuning/scoring/validator.py",
            "symbol": "import-error",
            "message": "Unable to import 'numpy'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "scoring.validator",
            "obj": "",
            "line": 2,
            "column": 0,
            "path": "addmo/s3_model_tuning/scoring/validator.py",
            "symbol": "import-error",
            "message": "Unable to import 'sklearn.model_selection'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "scoring.validator",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "addmo/s3_model_tuning/scoring/validator.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.scoring.abstract_scorer'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "scoring.validator",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "addmo/s3_model_tuning/scoring/validator.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.models.abstract_model'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "scoring.validator",
            "obj": "",
            "line": 7,
            "column": 0,
            "path": "addmo/s3_model_tuning/scoring/validator.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.experiment_logger'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "scoring.validator",
            "obj": "NoValidation",
            "line": 9,
            "column": 0,
            "path": "addmo/s3_model_tuning/scoring/validator.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "scoring.validator",
            "obj": "NoValidation.score_validation",
            "line": 13,
            "column": 55,
            "path": "addmo/s3_model_tuning/scoring/validator.py",
            "symbol": "invalid-name",
            "message": "Argument name \"x\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "scoring.validator",
            "obj": "NoValidation.score_validation",
            "line": 13,
            "column": 58,
            "path": "addmo/s3_model_tuning/scoring/validator.py",
            "symbol": "invalid-name",
            "message": "Argument name \"y\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "scoring.validator",
            "obj": "NoValidation.score_validation",
            "line": 13,
            "column": 31,
            "path": "addmo/s3_model_tuning/scoring/validator.py",
            "symbol": "unused-argument",
            "message": "Unused argument 'model'",
            "message-id": "W0613"
        },
        {
            "type": "warning",
            "module": "scoring.validator",
            "obj": "NoValidation.score_validation",
            "line": 13,
            "column": 55,
            "path": "addmo/s3_model_tuning/scoring/validator.py",
            "symbol": "unused-argument",
            "message": "Unused argument 'x'",
            "message-id": "W0613"
        },
        {
            "type": "warning",
            "module": "scoring.validator",
            "obj": "NoValidation.score_validation",
            "line": 13,
            "column": 58,
            "path": "addmo/s3_model_tuning/scoring/validator.py",
            "symbol": "unused-argument",
            "message": "Unused argument 'y'",
            "message-id": "W0613"
        },
        {
            "type": "refactor",
            "module": "scoring.validator",
            "obj": "NoValidation",
            "line": 9,
            "column": 0,
            "path": "addmo/s3_model_tuning/scoring/validator.py",
            "symbol": "too-few-public-methods",
            "message": "Too few public methods (1/2)",
            "message-id": "R0903"
        },
        {
            "type": "convention",
            "module": "scoring.validator",
            "obj": "CrossValidation",
            "line": 17,
            "column": 0,
            "path": "addmo/s3_model_tuning/scoring/validator.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "scoring.validator",
            "obj": "CrossValidation.score_validation",
            "line": 18,
            "column": 55,
            "path": "addmo/s3_model_tuning/scoring/validator.py",
            "symbol": "invalid-name",
            "message": "Argument name \"x\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "scoring.validator",
            "obj": "CrossValidation.score_validation",
            "line": 18,
            "column": 58,
            "path": "addmo/s3_model_tuning/scoring/validator.py",
            "symbol": "invalid-name",
            "message": "Argument name \"y\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "scoring.validator",
            "obj": "CrossValidation",
            "line": 17,
            "column": 0,
            "path": "addmo/s3_model_tuning/scoring/validator.py",
            "symbol": "too-few-public-methods",
            "message": "Too few public methods (1/2)",
            "message-id": "R0903"
        },
        {
            "type": "warning",
            "module": "scoring.validator",
            "obj": "",
            "line": 7,
            "column": 0,
            "path": "addmo/s3_model_tuning/scoring/validator.py",
            "symbol": "unused-import",
            "message": "Unused WandbLogger imported from addmo.util.experiment_logger",
            "message-id": "W0611"
        },
        {
            "type": "convention",
            "module": "scoring.validator_factory",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo/s3_model_tuning/scoring/validator_factory.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "scoring.validator_factory",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo/s3_model_tuning/scoring/validator_factory.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.scoring.abstract_scorer'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "scoring.validator_factory",
            "obj": "",
            "line": 2,
            "column": 0,
            "path": "addmo/s3_model_tuning/scoring/validator_factory.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.scoring.validator'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "scoring.validator_factory",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "addmo/s3_model_tuning/scoring/validator_factory.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.scoring.validator'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "scoring.validator_factory",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "addmo/s3_model_tuning/scoring/validator_factory.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.config.model_tuning_config'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "scoring.validator_factory",
            "obj": "ValidatorFactory.ValidatorFactory",
            "line": 12,
            "column": 4,
            "path": "addmo/s3_model_tuning/scoring/validator_factory.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "scoring.validator_factory",
            "obj": "ValidatorFactory.ValidatorFactory",
            "line": 12,
            "column": 4,
            "path": "addmo/s3_model_tuning/scoring/validator_factory.py",
            "symbol": "invalid-name",
            "message": "Method name \"ValidatorFactory\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "scoring.validator_factory",
            "obj": "ValidatorFactory.ValidatorFactory",
            "line": 15,
            "column": 8,
            "path": "addmo/s3_model_tuning/scoring/validator_factory.py",
            "symbol": "no-else-return",
            "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
            "message-id": "R1705"
        },
        {
            "type": "refactor",
            "module": "scoring.validator_factory",
            "obj": "ValidatorFactory",
            "line": 6,
            "column": 0,
            "path": "addmo/s3_model_tuning/scoring/validator_factory.py",
            "symbol": "too-few-public-methods",
            "message": "Too few public methods (1/2)",
            "message-id": "R0903"
        },
        {
            "type": "convention",
            "module": "abstract_metric",
            "obj": "AbstractMetric",
            "line": 10,
            "column": 0,
            "path": "addmo/s3_model_tuning/scoring/metrics/abstract_metric.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "refactor",
            "module": "abstract_metric",
            "obj": "AbstractMetric",
            "line": 10,
            "column": 0,
            "path": "addmo/s3_model_tuning/scoring/metrics/abstract_metric.py",
            "symbol": "too-few-public-methods",
            "message": "Too few public methods (0/2)",
            "message-id": "R0903"
        },
        {
            "type": "convention",
            "module": "metric_factory",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo/s3_model_tuning/scoring/metrics/metric_factory.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "metric_factory",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "addmo/s3_model_tuning/scoring/metrics/metric_factory.py",
            "symbol": "import-error",
            "message": "Unable to import 'sklearn'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "metric_factory",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "addmo/s3_model_tuning/scoring/metrics/metric_factory.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.scoring.metrics'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "metric_factory",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "addmo/s3_model_tuning/scoring/metrics/metric_factory.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.scoring.metrics.abstract_metric'",
            "message-id": "E0401"
        },
        {
            "type": "refactor",
            "module": "metric_factory",
            "obj": "MetricFactory.metric_factory",
            "line": 19,
            "column": 8,
            "path": "addmo/s3_model_tuning/scoring/metrics/metric_factory.py",
            "symbol": "no-else-return",
            "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
            "message-id": "R1705"
        },
        {
            "type": "warning",
            "module": "metric_factory",
            "obj": "MetricFactory.metric_factory",
            "line": 38,
            "column": 20,
            "path": "addmo/s3_model_tuning/scoring/metrics/metric_factory.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _score_func of a client class",
            "message-id": "W0212"
        },
        {
            "type": "refactor",
            "module": "metric_factory",
            "obj": "MetricFactory",
            "line": 9,
            "column": 0,
            "path": "addmo/s3_model_tuning/scoring/metrics/metric_factory.py",
            "symbol": "too-few-public-methods",
            "message": "Too few public methods (1/2)",
            "message-id": "R0903"
        },
        {
            "type": "convention",
            "module": "abstract_splitter",
            "obj": "",
            "line": 27,
            "column": 0,
            "path": "addmo/s3_model_tuning/scoring/validation_splitting/abstract_splitter.py",
            "symbol": "line-too-long",
            "message": "Line too long (103/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "abstract_splitter",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo/s3_model_tuning/scoring/validation_splitting/abstract_splitter.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "abstract_splitter",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo/s3_model_tuning/scoring/validation_splitting/abstract_splitter.py",
            "symbol": "import-error",
            "message": "Unable to import 'numpy'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "abstract_splitter",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "addmo/s3_model_tuning/scoring/validation_splitting/abstract_splitter.py",
            "symbol": "import-error",
            "message": "Unable to import 'pandas'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "abstract_splitter",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "addmo/s3_model_tuning/scoring/validation_splitting/abstract_splitter.py",
            "symbol": "import-error",
            "message": "Unable to import 'sklearn.model_selection'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "abstract_splitter",
            "obj": "AbstractSplitter.split",
            "line": 26,
            "column": 20,
            "path": "addmo/s3_model_tuning/scoring/validation_splitting/abstract_splitter.py",
            "symbol": "invalid-name",
            "message": "Argument name \"X\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "abstract_splitter",
            "obj": "AbstractSplitter.split",
            "line": 26,
            "column": 44,
            "path": "addmo/s3_model_tuning/scoring/validation_splitting/abstract_splitter.py",
            "symbol": "invalid-name",
            "message": "Argument name \"y\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "abstract_splitter",
            "obj": "AbstractSplitter.get_n_splits",
            "line": 45,
            "column": 27,
            "path": "addmo/s3_model_tuning/scoring/validation_splitting/abstract_splitter.py",
            "symbol": "invalid-name",
            "message": "Argument name \"X\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "abstract_splitter",
            "obj": "AbstractSplitter.get_n_splits",
            "line": 45,
            "column": 51,
            "path": "addmo/s3_model_tuning/scoring/validation_splitting/abstract_splitter.py",
            "symbol": "invalid-name",
            "message": "Argument name \"y\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "abstract_splitter",
            "obj": "AbstractSplitter._iter_test_masks",
            "line": 50,
            "column": 14,
            "path": "addmo/s3_model_tuning/scoring/validation_splitting/abstract_splitter.py",
            "symbol": "invalid-name",
            "message": "Argument name \"X\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "abstract_splitter",
            "obj": "AbstractSplitter._iter_test_masks",
            "line": 50,
            "column": 38,
            "path": "addmo/s3_model_tuning/scoring/validation_splitting/abstract_splitter.py",
            "symbol": "invalid-name",
            "message": "Argument name \"y\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "abstract_splitter",
            "obj": "AbstractSplitter._iter_test_indices",
            "line": 62,
            "column": 14,
            "path": "addmo/s3_model_tuning/scoring/validation_splitting/abstract_splitter.py",
            "symbol": "invalid-name",
            "message": "Argument name \"X\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "abstract_splitter",
            "obj": "AbstractSplitter._iter_test_indices",
            "line": 62,
            "column": 38,
            "path": "addmo/s3_model_tuning/scoring/validation_splitting/abstract_splitter.py",
            "symbol": "invalid-name",
            "message": "Argument name \"y\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "custom_splitters",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo/s3_model_tuning/scoring/validation_splitting/custom_splitters.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "custom_splitters",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo/s3_model_tuning/scoring/validation_splitting/custom_splitters.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.scoring.validation_splitting.abstract_splitter'",
            "message-id": "E0401"
        },
        {
            "type": "warning",
            "module": "custom_splitters",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "addmo/s3_model_tuning/scoring/validation_splitting/custom_splitters.py",
            "symbol": "pointless-string-statement",
            "message": "String statement has no effect",
            "message-id": "W0105"
        },
        {
            "type": "convention",
            "module": "custom_splitters",
            "obj": "TrialCustomSplitter.get_n_splits",
            "line": 21,
            "column": 27,
            "path": "addmo/s3_model_tuning/scoring/validation_splitting/custom_splitters.py",
            "symbol": "invalid-name",
            "message": "Argument name \"X\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "custom_splitters",
            "obj": "TrialCustomSplitter.get_n_splits",
            "line": 21,
            "column": 35,
            "path": "addmo/s3_model_tuning/scoring/validation_splitting/custom_splitters.py",
            "symbol": "invalid-name",
            "message": "Argument name \"y\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "custom_splitters",
            "obj": "TrialCustomSplitter.get_n_splits",
            "line": 21,
            "column": 27,
            "path": "addmo/s3_model_tuning/scoring/validation_splitting/custom_splitters.py",
            "symbol": "unused-argument",
            "message": "Unused argument 'X'",
            "message-id": "W0613"
        },
        {
            "type": "warning",
            "module": "custom_splitters",
            "obj": "TrialCustomSplitter.get_n_splits",
            "line": 21,
            "column": 35,
            "path": "addmo/s3_model_tuning/scoring/validation_splitting/custom_splitters.py",
            "symbol": "unused-argument",
            "message": "Unused argument 'y'",
            "message-id": "W0613"
        },
        {
            "type": "warning",
            "module": "custom_splitters",
            "obj": "TrialCustomSplitter.get_n_splits",
            "line": 21,
            "column": 43,
            "path": "addmo/s3_model_tuning/scoring/validation_splitting/custom_splitters.py",
            "symbol": "unused-argument",
            "message": "Unused argument 'groups'",
            "message-id": "W0613"
        },
        {
            "type": "convention",
            "module": "custom_splitters",
            "obj": "TrialCustomSplitter._iter_test_indices",
            "line": 25,
            "column": 33,
            "path": "addmo/s3_model_tuning/scoring/validation_splitting/custom_splitters.py",
            "symbol": "invalid-name",
            "message": "Argument name \"X\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "custom_splitters",
            "obj": "TrialCustomSplitter._iter_test_indices",
            "line": 25,
            "column": 36,
            "path": "addmo/s3_model_tuning/scoring/validation_splitting/custom_splitters.py",
            "symbol": "invalid-name",
            "message": "Argument name \"y\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "custom_splitters",
            "obj": "TrialCustomSplitter._iter_test_indices",
            "line": 25,
            "column": 36,
            "path": "addmo/s3_model_tuning/scoring/validation_splitting/custom_splitters.py",
            "symbol": "unused-argument",
            "message": "Unused argument 'y'",
            "message-id": "W0613"
        },
        {
            "type": "warning",
            "module": "custom_splitters",
            "obj": "TrialCustomSplitter._iter_test_indices",
            "line": 25,
            "column": 44,
            "path": "addmo/s3_model_tuning/scoring/validation_splitting/custom_splitters.py",
            "symbol": "unused-argument",
            "message": "Unused argument 'groups'",
            "message-id": "W0613"
        },
        {
            "type": "refactor",
            "module": "custom_splitters",
            "obj": "TrialCustomSplitter",
            "line": 9,
            "column": 0,
            "path": "addmo/s3_model_tuning/scoring/validation_splitting/custom_splitters.py",
            "symbol": "too-few-public-methods",
            "message": "Too few public methods (1/2)",
            "message-id": "R0903"
        },
        {
            "type": "convention",
            "module": "custom_splitters",
            "obj": "UnivariateSplitter.get_n_splits",
            "line": 65,
            "column": 4,
            "path": "addmo/s3_model_tuning/scoring/validation_splitting/custom_splitters.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "custom_splitters",
            "obj": "UnivariateSplitter.get_n_splits",
            "line": 65,
            "column": 27,
            "path": "addmo/s3_model_tuning/scoring/validation_splitting/custom_splitters.py",
            "symbol": "invalid-name",
            "message": "Argument name \"X\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "custom_splitters",
            "obj": "UnivariateSplitter.get_n_splits",
            "line": 65,
            "column": 30,
            "path": "addmo/s3_model_tuning/scoring/validation_splitting/custom_splitters.py",
            "symbol": "invalid-name",
            "message": "Argument name \"y\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "custom_splitters",
            "obj": "UnivariateSplitter.get_n_splits",
            "line": 65,
            "column": 30,
            "path": "addmo/s3_model_tuning/scoring/validation_splitting/custom_splitters.py",
            "symbol": "unused-argument",
            "message": "Unused argument 'y'",
            "message-id": "W0613"
        },
        {
            "type": "warning",
            "module": "custom_splitters",
            "obj": "UnivariateSplitter.get_n_splits",
            "line": 65,
            "column": 38,
            "path": "addmo/s3_model_tuning/scoring/validation_splitting/custom_splitters.py",
            "symbol": "unused-argument",
            "message": "Unused argument 'groups'",
            "message-id": "W0613"
        },
        {
            "type": "convention",
            "module": "custom_splitters",
            "obj": "UnivariateSplitter._iter_test_indices",
            "line": 70,
            "column": 33,
            "path": "addmo/s3_model_tuning/scoring/validation_splitting/custom_splitters.py",
            "symbol": "invalid-name",
            "message": "Argument name \"X\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "custom_splitters",
            "obj": "UnivariateSplitter._iter_test_indices",
            "line": 70,
            "column": 36,
            "path": "addmo/s3_model_tuning/scoring/validation_splitting/custom_splitters.py",
            "symbol": "invalid-name",
            "message": "Argument name \"y\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "custom_splitters",
            "obj": "UnivariateSplitter._iter_test_indices",
            "line": 70,
            "column": 36,
            "path": "addmo/s3_model_tuning/scoring/validation_splitting/custom_splitters.py",
            "symbol": "unused-argument",
            "message": "Unused argument 'y'",
            "message-id": "W0613"
        },
        {
            "type": "warning",
            "module": "custom_splitters",
            "obj": "UnivariateSplitter._iter_test_indices",
            "line": 70,
            "column": 44,
            "path": "addmo/s3_model_tuning/scoring/validation_splitting/custom_splitters.py",
            "symbol": "unused-argument",
            "message": "Unused argument 'groups'",
            "message-id": "W0613"
        },
        {
            "type": "refactor",
            "module": "custom_splitters",
            "obj": "UnivariateSplitter",
            "line": 43,
            "column": 0,
            "path": "addmo/s3_model_tuning/scoring/validation_splitting/custom_splitters.py",
            "symbol": "too-few-public-methods",
            "message": "Too few public methods (1/2)",
            "message-id": "R0903"
        },
        {
            "type": "convention",
            "module": "splitter_factory",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo/s3_model_tuning/scoring/validation_splitting/splitter_factory.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "splitter_factory",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "addmo/s3_model_tuning/scoring/validation_splitting/splitter_factory.py",
            "symbol": "import-error",
            "message": "Unable to import 'sklearn'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "splitter_factory",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "addmo/s3_model_tuning/scoring/validation_splitting/splitter_factory.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.scoring.validation_splitting'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "splitter_factory",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "addmo/s3_model_tuning/scoring/validation_splitting/splitter_factory.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.config.model_tuning_config'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "splitter_factory",
            "obj": "",
            "line": 7,
            "column": 0,
            "path": "addmo/s3_model_tuning/scoring/validation_splitting/splitter_factory.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.scoring.validation_splitting.abstract_splitter'",
            "message-id": "E0401"
        },
        {
            "type": "refactor",
            "module": "splitter_factory",
            "obj": "SplitterFactory.splitter_factory",
            "line": 26,
            "column": 12,
            "path": "addmo/s3_model_tuning/scoring/validation_splitting/splitter_factory.py",
            "symbol": "no-else-return",
            "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
            "message-id": "R1705"
        },
        {
            "type": "refactor",
            "module": "splitter_factory",
            "obj": "SplitterFactory.splitter_factory",
            "line": 36,
            "column": 12,
            "path": "addmo/s3_model_tuning/scoring/validation_splitting/splitter_factory.py",
            "symbol": "no-else-return",
            "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
            "message-id": "R1705"
        },
        {
            "type": "refactor",
            "module": "splitter_factory",
            "obj": "SplitterFactory",
            "line": 12,
            "column": 0,
            "path": "addmo/s3_model_tuning/scoring/validation_splitting/splitter_factory.py",
            "symbol": "too-few-public-methods",
            "message": "Too few public methods (1/2)",
            "message-id": "R0903"
        },
        {
            "type": "convention",
            "module": "model_tuning_config",
            "obj": "",
            "line": 11,
            "column": 0,
            "path": "addmo/s3_model_tuning/config/model_tuning_config.py",
            "symbol": "line-too-long",
            "message": "Line too long (209/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "model_tuning_config",
            "obj": "",
            "line": 64,
            "column": 0,
            "path": "addmo/s3_model_tuning/config/model_tuning_config.py",
            "symbol": "line-too-long",
            "message": "Line too long (124/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "model_tuning_config",
            "obj": "",
            "line": 92,
            "column": 0,
            "path": "addmo/s3_model_tuning/config/model_tuning_config.py",
            "symbol": "trailing-newlines",
            "message": "Trailing newlines",
            "message-id": "C0305"
        },
        {
            "type": "convention",
            "module": "model_tuning_config",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo/s3_model_tuning/config/model_tuning_config.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "model_tuning_config",
            "obj": "",
            "line": 2,
            "column": 0,
            "path": "addmo/s3_model_tuning/config/model_tuning_config.py",
            "symbol": "import-error",
            "message": "Unable to import 'pydantic'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "model_tuning_config",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "addmo/s3_model_tuning/config/model_tuning_config.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.load_save_utils'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "model_tuning_config",
            "obj": "ModelTunerConfig",
            "line": 7,
            "column": 0,
            "path": "addmo/s3_model_tuning/config/model_tuning_config.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "refactor",
            "module": "model_tuning_config",
            "obj": "ModelTunerConfig",
            "line": 7,
            "column": 0,
            "path": "addmo/s3_model_tuning/config/model_tuning_config.py",
            "symbol": "too-few-public-methods",
            "message": "Too few public methods (0/2)",
            "message-id": "R0903"
        },
        {
            "type": "convention",
            "module": "model_tuning_config",
            "obj": "ModelTuningExperimentConfig",
            "line": 54,
            "column": 0,
            "path": "addmo/s3_model_tuning/config/model_tuning_config.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "refactor",
            "module": "model_tuning_config",
            "obj": "ModelTuningExperimentConfig",
            "line": 54,
            "column": 0,
            "path": "addmo/s3_model_tuning/config/model_tuning_config.py",
            "symbol": "too-few-public-methods",
            "message": "Too few public methods (0/2)",
            "message-id": "R0903"
        },
        {
            "type": "convention",
            "module": "model_tuning_config",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "addmo/s3_model_tuning/config/model_tuning_config.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"from typing import Optional\" should be placed before \"from pydantic import BaseModel, Field, PrivateAttr\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "keras_models",
            "obj": "",
            "line": 108,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/keras_models.py",
            "symbol": "line-too-long",
            "message": "Line too long (110/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "keras_models",
            "obj": "",
            "line": 109,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/keras_models.py",
            "symbol": "line-too-long",
            "message": "Line too long (109/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "keras_models",
            "obj": "",
            "line": 144,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/keras_models.py",
            "symbol": "line-too-long",
            "message": "Line too long (103/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "keras_models",
            "obj": "",
            "line": 157,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/keras_models.py",
            "symbol": "line-too-long",
            "message": "Line too long (116/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "keras_models",
            "obj": "",
            "line": 192,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/keras_models.py",
            "symbol": "line-too-long",
            "message": "Line too long (103/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "keras_models",
            "obj": "",
            "line": 204,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/keras_models.py",
            "symbol": "line-too-long",
            "message": "Line too long (118/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "keras_models",
            "obj": "",
            "line": 206,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/keras_models.py",
            "symbol": "line-too-long",
            "message": "Line too long (117/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "keras_models",
            "obj": "",
            "line": 211,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/keras_models.py",
            "symbol": "line-too-long",
            "message": "Line too long (109/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "keras_models",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/keras_models.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "keras_models",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/keras_models.py",
            "symbol": "import-error",
            "message": "Unable to import 'keras'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "keras_models",
            "obj": "",
            "line": 2,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/keras_models.py",
            "symbol": "import-error",
            "message": "Unable to import 'tensorflow'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "keras_models",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/keras_models.py",
            "symbol": "import-error",
            "message": "Unable to import 'onnx'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "keras_models",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/keras_models.py",
            "symbol": "import-error",
            "message": "Unable to import 'numpy'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "keras_models",
            "obj": "",
            "line": 8,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/keras_models.py",
            "symbol": "import-error",
            "message": "Unable to import 'keras.src.models.sequential'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "keras_models",
            "obj": "",
            "line": 9,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/keras_models.py",
            "symbol": "import-error",
            "message": "Unable to import 'keras.src.layers'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "keras_models",
            "obj": "",
            "line": 10,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/keras_models.py",
            "symbol": "import-error",
            "message": "Unable to import 'keras.src.losses'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "keras_models",
            "obj": "",
            "line": 11,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/keras_models.py",
            "symbol": "import-error",
            "message": "Unable to import 'keras.src.callbacks'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "keras_models",
            "obj": "",
            "line": 12,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/keras_models.py",
            "symbol": "import-error",
            "message": "Unable to import 'scikeras.wrappers'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "keras_models",
            "obj": "",
            "line": 13,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/keras_models.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.models.abstract_model'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "keras_models",
            "obj": "",
            "line": 14,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/keras_models.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.models.abstract_model'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "keras_models",
            "obj": "",
            "line": 15,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/keras_models.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.load_save_utils'",
            "message-id": "E0401"
        },
        {
            "type": "warning",
            "module": "keras_models",
            "obj": "BaseKerasModel._define_metadata",
            "line": 27,
            "column": 8,
            "path": "addmo/s3_model_tuning/models/keras_models.py",
            "symbol": "attribute-defined-outside-init",
            "message": "Attribute 'metadata' defined outside __init__",
            "message-id": "W0201"
        },
        {
            "type": "refactor",
            "module": "keras_models",
            "obj": "BaseKerasModel",
            "line": 18,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/keras_models.py",
            "symbol": "too-few-public-methods",
            "message": "Too few public methods (0/2)",
            "message-id": "R0903"
        },
        {
            "type": "convention",
            "module": "keras_models",
            "obj": "SciKerasSequential.fit",
            "line": 45,
            "column": 18,
            "path": "addmo/s3_model_tuning/models/keras_models.py",
            "symbol": "invalid-name",
            "message": "Argument name \"x\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "keras_models",
            "obj": "SciKerasSequential.fit",
            "line": 45,
            "column": 21,
            "path": "addmo/s3_model_tuning/models/keras_models.py",
            "symbol": "invalid-name",
            "message": "Argument name \"y\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "keras_models",
            "obj": "SciKerasSequential.predict",
            "line": 54,
            "column": 22,
            "path": "addmo/s3_model_tuning/models/keras_models.py",
            "symbol": "invalid-name",
            "message": "Argument name \"x\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "keras_models",
            "obj": "SciKerasSequential.save_regressor",
            "line": 103,
            "column": 16,
            "path": "addmo/s3_model_tuning/models/keras_models.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (tf2onnx)",
            "message-id": "C0415"
        },
        {
            "type": "warning",
            "module": "keras_models",
            "obj": "SciKerasSequential.save_regressor",
            "line": 105,
            "column": 16,
            "path": "addmo/s3_model_tuning/models/keras_models.py",
            "symbol": "raise-missing-from",
            "message": "Consider explicitly re-raising using 'except ImportError as exc' and 'raise ImportError('tf2onnx is required to save the model in ONNX format') from exc'",
            "message-id": "W0707"
        },
        {
            "type": "warning",
            "module": "keras_models",
            "obj": "SciKerasSequential.save_regressor",
            "line": 113,
            "column": 29,
            "path": "addmo/s3_model_tuning/models/keras_models.py",
            "symbol": "f-string-without-interpolation",
            "message": "Using an f-string that does not have any interpolated variables",
            "message-id": "W1309"
        },
        {
            "type": "convention",
            "module": "keras_models",
            "obj": "SciKerasSequential.load_regressor",
            "line": 128,
            "column": 8,
            "path": "addmo/s3_model_tuning/models/keras_models.py",
            "symbol": "invalid-name",
            "message": "Variable name \"x\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "keras_models",
            "obj": "SciKerasSequential.load_regressor",
            "line": 129,
            "column": 8,
            "path": "addmo/s3_model_tuning/models/keras_models.py",
            "symbol": "invalid-name",
            "message": "Variable name \"y\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "keras_models",
            "obj": "SciKerasSequential._build_regressor",
            "line": 149,
            "column": 31,
            "path": "addmo/s3_model_tuning/models/keras_models.py",
            "symbol": "invalid-name",
            "message": "Argument name \"x\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "keras_models",
            "obj": "SciKerasSequential.to_scikit_learn",
            "line": 166,
            "column": 30,
            "path": "addmo/s3_model_tuning/models/keras_models.py",
            "symbol": "invalid-name",
            "message": "Argument name \"x\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "keras_models",
            "obj": "SciKerasSequential.fit",
            "line": 49,
            "column": 8,
            "path": "addmo/s3_model_tuning/models/keras_models.py",
            "symbol": "attribute-defined-outside-init",
            "message": "Attribute 'x_fit' defined outside __init__",
            "message-id": "W0201"
        },
        {
            "type": "warning",
            "module": "keras_models",
            "obj": "SciKerasSequential.fit",
            "line": 50,
            "column": 8,
            "path": "addmo/s3_model_tuning/models/keras_models.py",
            "symbol": "attribute-defined-outside-init",
            "message": "Attribute 'y_fit' defined outside __init__",
            "message-id": "W0201"
        },
        {
            "type": "convention",
            "module": "keras_models",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/keras_models.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"from abc import ABC\" should be placed before \"import keras\"",
            "message-id": "C0411"
        },
        {
            "type": "warning",
            "module": "keras_models",
            "obj": "",
            "line": 9,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/keras_models.py",
            "symbol": "unused-import",
            "message": "Unused Normalization imported from keras.src.layers",
            "message-id": "W0611"
        },
        {
            "type": "warning",
            "module": "keras_models",
            "obj": "",
            "line": 9,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/keras_models.py",
            "symbol": "unused-import",
            "message": "Unused Activation imported from keras.src.layers",
            "message-id": "W0611"
        },
        {
            "type": "convention",
            "module": "abstract_model",
            "obj": "",
            "line": 116,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/abstract_model.py",
            "symbol": "line-too-long",
            "message": "Line too long (104/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "abstract_model",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/abstract_model.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "abstract_model",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/abstract_model.py",
            "symbol": "import-error",
            "message": "Unable to import 'onnxruntime'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "abstract_model",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/abstract_model.py",
            "symbol": "import-error",
            "message": "Unable to import 'numpy'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "abstract_model",
            "obj": "",
            "line": 8,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/abstract_model.py",
            "symbol": "import-error",
            "message": "Unable to import 'pandas'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "abstract_model",
            "obj": "",
            "line": 9,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/abstract_model.py",
            "symbol": "import-error",
            "message": "Unable to import 'pydantic'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "abstract_model",
            "obj": "",
            "line": 10,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/abstract_model.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.load_save_utils'",
            "message-id": "E0401"
        },
        {
            "type": "refactor",
            "module": "abstract_model",
            "obj": "ModelMetadata",
            "line": 13,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/abstract_model.py",
            "symbol": "too-few-public-methods",
            "message": "Too few public methods (1/2)",
            "message-id": "R0903"
        },
        {
            "type": "convention",
            "module": "abstract_model",
            "obj": "AbstractMLModel.fit",
            "line": 66,
            "column": 18,
            "path": "addmo/s3_model_tuning/models/abstract_model.py",
            "symbol": "invalid-name",
            "message": "Argument name \"x\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "abstract_model",
            "obj": "AbstractMLModel.fit",
            "line": 66,
            "column": 35,
            "path": "addmo/s3_model_tuning/models/abstract_model.py",
            "symbol": "invalid-name",
            "message": "Argument name \"y\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "abstract_model",
            "obj": "AbstractMLModel.fit",
            "line": 74,
            "column": 8,
            "path": "addmo/s3_model_tuning/models/abstract_model.py",
            "symbol": "unnecessary-pass",
            "message": "Unnecessary pass statement",
            "message-id": "W0107"
        },
        {
            "type": "convention",
            "module": "abstract_model",
            "obj": "AbstractMLModel.predict",
            "line": 77,
            "column": 22,
            "path": "addmo/s3_model_tuning/models/abstract_model.py",
            "symbol": "invalid-name",
            "message": "Argument name \"x\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "abstract_model",
            "obj": "AbstractMLModel.predict",
            "line": 87,
            "column": 8,
            "path": "addmo/s3_model_tuning/models/abstract_model.py",
            "symbol": "unnecessary-pass",
            "message": "Unnecessary pass statement",
            "message-id": "W0107"
        },
        {
            "type": "warning",
            "module": "abstract_model",
            "obj": "AbstractMLModel.save_regressor",
            "line": 99,
            "column": 8,
            "path": "addmo/s3_model_tuning/models/abstract_model.py",
            "symbol": "unnecessary-pass",
            "message": "Unnecessary pass statement",
            "message-id": "W0107"
        },
        {
            "type": "warning",
            "module": "abstract_model",
            "obj": "AbstractMLModel._define_metadata",
            "line": 106,
            "column": 8,
            "path": "addmo/s3_model_tuning/models/abstract_model.py",
            "symbol": "unnecessary-pass",
            "message": "Unnecessary pass statement",
            "message-id": "W0107"
        },
        {
            "type": "warning",
            "module": "abstract_model",
            "obj": "AbstractMLModel._save_metadata",
            "line": 117,
            "column": 13,
            "path": "addmo/s3_model_tuning/models/abstract_model.py",
            "symbol": "unspecified-encoding",
            "message": "Using open without explicitly specifying an encoding",
            "message-id": "W1514"
        },
        {
            "type": "convention",
            "module": "abstract_model",
            "obj": "AbstractMLModel._save_metadata",
            "line": 117,
            "column": 41,
            "path": "addmo/s3_model_tuning/models/abstract_model.py",
            "symbol": "invalid-name",
            "message": "Variable name \"f\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "error",
            "module": "abstract_model",
            "obj": "AbstractMLModel._save_metadata",
            "line": 118,
            "column": 22,
            "path": "addmo/s3_model_tuning/models/abstract_model.py",
            "symbol": "no-member",
            "message": "Instance of 'AbstractMLModel' has no 'metadata' member",
            "message-id": "E1101"
        },
        {
            "type": "warning",
            "module": "abstract_model",
            "obj": "AbstractMLModel.load_regressor",
            "line": 120,
            "column": 45,
            "path": "addmo/s3_model_tuning/models/abstract_model.py",
            "symbol": "unused-argument",
            "message": "Unused argument 'input_shape'",
            "message-id": "W0613"
        },
        {
            "type": "convention",
            "module": "abstract_model",
            "obj": "AbstractMLModel.to_scikit_learn",
            "line": 131,
            "column": 30,
            "path": "addmo/s3_model_tuning/models/abstract_model.py",
            "symbol": "invalid-name",
            "message": "Argument name \"x\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "abstract_model",
            "obj": "AbstractMLModel.to_scikit_learn",
            "line": 144,
            "column": 8,
            "path": "addmo/s3_model_tuning/models/abstract_model.py",
            "symbol": "unnecessary-pass",
            "message": "Unnecessary pass statement",
            "message-id": "W0107"
        },
        {
            "type": "warning",
            "module": "abstract_model",
            "obj": "AbstractMLModel.set_params",
            "line": 154,
            "column": 8,
            "path": "addmo/s3_model_tuning/models/abstract_model.py",
            "symbol": "unnecessary-pass",
            "message": "Unnecessary pass statement",
            "message-id": "W0107"
        },
        {
            "type": "warning",
            "module": "abstract_model",
            "obj": "AbstractMLModel.get_params",
            "line": 164,
            "column": 8,
            "path": "addmo/s3_model_tuning/models/abstract_model.py",
            "symbol": "unnecessary-pass",
            "message": "Unnecessary pass statement",
            "message-id": "W0107"
        },
        {
            "type": "warning",
            "module": "abstract_model",
            "obj": "AbstractMLModel.optuna_hyperparameter_suggest",
            "line": 177,
            "column": 8,
            "path": "addmo/s3_model_tuning/models/abstract_model.py",
            "symbol": "unnecessary-pass",
            "message": "Unnecessary pass statement",
            "message-id": "W0107"
        },
        {
            "type": "warning",
            "module": "abstract_model",
            "obj": "AbstractMLModel.grid_search_hyperparameter",
            "line": 187,
            "column": 8,
            "path": "addmo/s3_model_tuning/models/abstract_model.py",
            "symbol": "unnecessary-pass",
            "message": "Unnecessary pass statement",
            "message-id": "W0107"
        },
        {
            "type": "warning",
            "module": "abstract_model",
            "obj": "AbstractMLModel.default_hyperparameter",
            "line": 197,
            "column": 8,
            "path": "addmo/s3_model_tuning/models/abstract_model.py",
            "symbol": "unnecessary-pass",
            "message": "Unnecessary pass statement",
            "message-id": "W0107"
        },
        {
            "type": "warning",
            "module": "abstract_model",
            "obj": "PredictorOnnx.load_regressor",
            "line": 209,
            "column": 4,
            "path": "addmo/s3_model_tuning/models/abstract_model.py",
            "symbol": "arguments-differ",
            "message": "Number of parameters was 3 in 'AbstractMLModel.load_regressor' and is now 2 in overriding 'PredictorOnnx.load_regressor' method",
            "message-id": "W0221"
        },
        {
            "type": "convention",
            "module": "abstract_model",
            "obj": "PredictorOnnx.predict",
            "line": 215,
            "column": 8,
            "path": "addmo/s3_model_tuning/models/abstract_model.py",
            "symbol": "invalid-name",
            "message": "Variable name \"x_ONNX\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "abstract_model",
            "obj": "PredictorOnnx.default_hyperparameter",
            "line": 219,
            "column": 22,
            "path": "addmo/s3_model_tuning/models/abstract_model.py",
            "symbol": "f-string-without-interpolation",
            "message": "Using an f-string that does not have any interpolated variables",
            "message-id": "W1309"
        },
        {
            "type": "warning",
            "module": "abstract_model",
            "obj": "PredictorOnnx.fit",
            "line": 222,
            "column": 22,
            "path": "addmo/s3_model_tuning/models/abstract_model.py",
            "symbol": "f-string-without-interpolation",
            "message": "Using an f-string that does not have any interpolated variables",
            "message-id": "W1309"
        },
        {
            "type": "warning",
            "module": "abstract_model",
            "obj": "PredictorOnnx.get_params",
            "line": 225,
            "column": 22,
            "path": "addmo/s3_model_tuning/models/abstract_model.py",
            "symbol": "f-string-without-interpolation",
            "message": "Using an f-string that does not have any interpolated variables",
            "message-id": "W1309"
        },
        {
            "type": "warning",
            "module": "abstract_model",
            "obj": "PredictorOnnx.grid_search_hyperparameter",
            "line": 228,
            "column": 22,
            "path": "addmo/s3_model_tuning/models/abstract_model.py",
            "symbol": "f-string-without-interpolation",
            "message": "Using an f-string that does not have any interpolated variables",
            "message-id": "W1309"
        },
        {
            "type": "warning",
            "module": "abstract_model",
            "obj": "PredictorOnnx.optuna_hyperparameter_suggest",
            "line": 231,
            "column": 22,
            "path": "addmo/s3_model_tuning/models/abstract_model.py",
            "symbol": "f-string-without-interpolation",
            "message": "Using an f-string that does not have any interpolated variables",
            "message-id": "W1309"
        },
        {
            "type": "warning",
            "module": "abstract_model",
            "obj": "PredictorOnnx.save_regressor",
            "line": 233,
            "column": 4,
            "path": "addmo/s3_model_tuning/models/abstract_model.py",
            "symbol": "arguments-differ",
            "message": "Number of parameters was 4 in 'AbstractMLModel.save_regressor' and is now 2 in overriding 'PredictorOnnx.save_regressor' method",
            "message-id": "W0221"
        },
        {
            "type": "warning",
            "module": "abstract_model",
            "obj": "PredictorOnnx.save_regressor",
            "line": 234,
            "column": 22,
            "path": "addmo/s3_model_tuning/models/abstract_model.py",
            "symbol": "f-string-without-interpolation",
            "message": "Using an f-string that does not have any interpolated variables",
            "message-id": "W1309"
        },
        {
            "type": "warning",
            "module": "abstract_model",
            "obj": "PredictorOnnx.save_regressor",
            "line": 233,
            "column": 29,
            "path": "addmo/s3_model_tuning/models/abstract_model.py",
            "symbol": "unused-argument",
            "message": "Unused argument 'path'",
            "message-id": "W0613"
        },
        {
            "type": "warning",
            "module": "abstract_model",
            "obj": "PredictorOnnx.set_params",
            "line": 237,
            "column": 22,
            "path": "addmo/s3_model_tuning/models/abstract_model.py",
            "symbol": "f-string-without-interpolation",
            "message": "Using an f-string that does not have any interpolated variables",
            "message-id": "W1309"
        },
        {
            "type": "warning",
            "module": "abstract_model",
            "obj": "PredictorOnnx.to_scikit_learn",
            "line": 239,
            "column": 4,
            "path": "addmo/s3_model_tuning/models/abstract_model.py",
            "symbol": "arguments-differ",
            "message": "Number of parameters was 2 in 'AbstractMLModel.to_scikit_learn' and is now 1 in overriding 'PredictorOnnx.to_scikit_learn' method",
            "message-id": "W0221"
        },
        {
            "type": "warning",
            "module": "abstract_model",
            "obj": "PredictorOnnx.to_scikit_learn",
            "line": 240,
            "column": 22,
            "path": "addmo/s3_model_tuning/models/abstract_model.py",
            "symbol": "f-string-without-interpolation",
            "message": "Using an f-string that does not have any interpolated variables",
            "message-id": "W1309"
        },
        {
            "type": "warning",
            "module": "abstract_model",
            "obj": "PredictorOnnx._define_metadata",
            "line": 243,
            "column": 22,
            "path": "addmo/s3_model_tuning/models/abstract_model.py",
            "symbol": "f-string-without-interpolation",
            "message": "Using an f-string that does not have any interpolated variables",
            "message-id": "W1309"
        },
        {
            "type": "warning",
            "module": "abstract_model",
            "obj": "PredictorOnnx._save_regressor",
            "line": 246,
            "column": 22,
            "path": "addmo/s3_model_tuning/models/abstract_model.py",
            "symbol": "f-string-without-interpolation",
            "message": "Using an f-string that does not have any interpolated variables",
            "message-id": "W1309"
        },
        {
            "type": "warning",
            "module": "abstract_model",
            "obj": "PredictorOnnx._save_regressor",
            "line": 245,
            "column": 30,
            "path": "addmo/s3_model_tuning/models/abstract_model.py",
            "symbol": "unused-argument",
            "message": "Unused argument 'path'",
            "message-id": "W0613"
        },
        {
            "type": "warning",
            "module": "abstract_model",
            "obj": "PredictorOnnx._save_regressor",
            "line": 245,
            "column": 36,
            "path": "addmo/s3_model_tuning/models/abstract_model.py",
            "symbol": "unused-argument",
            "message": "Unused argument 'file_type'",
            "message-id": "W0613"
        },
        {
            "type": "convention",
            "module": "abstract_model",
            "obj": "PredictorOnnx.default_file_type",
            "line": 248,
            "column": 4,
            "path": "addmo/s3_model_tuning/models/abstract_model.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "warning",
            "module": "abstract_model",
            "obj": "PredictorOnnx.default_file_type",
            "line": 249,
            "column": 22,
            "path": "addmo/s3_model_tuning/models/abstract_model.py",
            "symbol": "f-string-without-interpolation",
            "message": "Using an f-string that does not have any interpolated variables",
            "message-id": "W1309"
        },
        {
            "type": "convention",
            "module": "abstract_model",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/abstract_model.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"import subprocess\" should be placed before \"import onnxruntime as rt\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "abstract_model",
            "obj": "",
            "line": 7,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/abstract_model.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"from abc import ABC, abstractmethod\" should be placed before \"import onnxruntime as rt\"",
            "message-id": "C0411"
        },
        {
            "type": "warning",
            "module": "abstract_model",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/abstract_model.py",
            "symbol": "unused-import",
            "message": "Unused import os",
            "message-id": "W0611"
        },
        {
            "type": "warning",
            "module": "model_factory",
            "obj": "",
            "line": 32,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/model_factory.py",
            "symbol": "bad-indentation",
            "message": "Bad indentation. Found 13 spaces, expected 12",
            "message-id": "W0311"
        },
        {
            "type": "warning",
            "module": "model_factory",
            "obj": "",
            "line": 33,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/model_factory.py",
            "symbol": "bad-indentation",
            "message": "Bad indentation. Found 13 spaces, expected 12",
            "message-id": "W0311"
        },
        {
            "type": "convention",
            "module": "model_factory",
            "obj": "",
            "line": 44,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/model_factory.py",
            "symbol": "line-too-long",
            "message": "Line too long (107/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "model_factory",
            "obj": "",
            "line": 66,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/model_factory.py",
            "symbol": "line-too-long",
            "message": "Line too long (175/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "model_factory",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/model_factory.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "model_factory",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/model_factory.py",
            "symbol": "import-error",
            "message": "Unable to import 'joblib'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "model_factory",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/model_factory.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.models'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "model_factory",
            "obj": "",
            "line": 7,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/model_factory.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.models'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "model_factory",
            "obj": "",
            "line": 8,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/model_factory.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.models.abstract_model'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "model_factory",
            "obj": "",
            "line": 9,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/model_factory.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.models.abstract_model'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "model_factory",
            "obj": "",
            "line": 10,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/model_factory.py",
            "symbol": "import-error",
            "message": "Unable to import 'tensorflow'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "model_factory",
            "obj": "",
            "line": 11,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/model_factory.py",
            "symbol": "import-error",
            "message": "Unable to import 'tensorflow.keras.models'",
            "message-id": "E0401"
        },
        {
            "type": "refactor",
            "module": "model_factory",
            "obj": "ModelFactory.model_factory",
            "line": 36,
            "column": 8,
            "path": "addmo/s3_model_tuning/models/model_factory.py",
            "symbol": "no-else-return",
            "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
            "message-id": "R1705"
        },
        {
            "type": "error",
            "module": "model_factory",
            "obj": "ModelFactory._load_metadata",
            "line": 55,
            "column": 4,
            "path": "addmo/s3_model_tuning/models/model_factory.py",
            "symbol": "no-self-argument",
            "message": "Method '_load_metadata' should have \"self\" as first argument",
            "message-id": "E0213"
        },
        {
            "type": "refactor",
            "module": "model_factory",
            "obj": "ModelFactory._load_metadata",
            "line": 61,
            "column": 8,
            "path": "addmo/s3_model_tuning/models/model_factory.py",
            "symbol": "no-else-return",
            "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
            "message-id": "R1705"
        },
        {
            "type": "warning",
            "module": "model_factory",
            "obj": "ModelFactory._load_metadata",
            "line": 62,
            "column": 17,
            "path": "addmo/s3_model_tuning/models/model_factory.py",
            "symbol": "unspecified-encoding",
            "message": "Using open without explicitly specifying an encoding",
            "message-id": "W1514"
        },
        {
            "type": "convention",
            "module": "model_factory",
            "obj": "ModelFactory._load_metadata",
            "line": 62,
            "column": 40,
            "path": "addmo/s3_model_tuning/models/model_factory.py",
            "symbol": "invalid-name",
            "message": "Variable name \"f\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "model_factory",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/model_factory.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"import os\" should be placed before \"import joblib\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "model_factory",
            "obj": "",
            "line": 10,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/model_factory.py",
            "symbol": "wrong-import-order",
            "message": "third party import \"from tensorflow import keras\" should be placed before \"from addmo.s3_model_tuning.models import scikit_learn_models\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "model_factory",
            "obj": "",
            "line": 11,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/model_factory.py",
            "symbol": "wrong-import-order",
            "message": "third party import \"from tensorflow.keras.models import load_model\" should be placed before \"from addmo.s3_model_tuning.models import scikit_learn_models\"",
            "message-id": "C0411"
        },
        {
            "type": "warning",
            "module": "model_factory",
            "obj": "",
            "line": 2,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/model_factory.py",
            "symbol": "unused-import",
            "message": "Unused import sys",
            "message-id": "W0611"
        },
        {
            "type": "warning",
            "module": "model_factory",
            "obj": "",
            "line": 11,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/model_factory.py",
            "symbol": "unused-import",
            "message": "Unused load_model imported from tensorflow.keras.models",
            "message-id": "W0611"
        },
        {
            "type": "convention",
            "module": "scikit_learn_models",
            "obj": "",
            "line": 24,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/scikit_learn_models.py",
            "symbol": "line-too-long",
            "message": "Line too long (102/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "scikit_learn_models",
            "obj": "",
            "line": 34,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/scikit_learn_models.py",
            "symbol": "line-too-long",
            "message": "Line too long (102/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "scikit_learn_models",
            "obj": "",
            "line": 82,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/scikit_learn_models.py",
            "symbol": "line-too-long",
            "message": "Line too long (101/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "scikit_learn_models",
            "obj": "",
            "line": 102,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/scikit_learn_models.py",
            "symbol": "line-too-long",
            "message": "Line too long (105/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "scikit_learn_models",
            "obj": "",
            "line": 176,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/scikit_learn_models.py",
            "symbol": "line-too-long",
            "message": "Line too long (106/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "scikit_learn_models",
            "obj": "",
            "line": 286,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/scikit_learn_models.py",
            "symbol": "line-too-long",
            "message": "Line too long (107/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "scikit_learn_models",
            "obj": "",
            "line": 287,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/scikit_learn_models.py",
            "symbol": "line-too-long",
            "message": "Line too long (109/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "scikit_learn_models",
            "obj": "",
            "line": 327,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/scikit_learn_models.py",
            "symbol": "missing-final-newline",
            "message": "Final newline missing",
            "message-id": "C0304"
        },
        {
            "type": "convention",
            "module": "scikit_learn_models",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/scikit_learn_models.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "scikit_learn_models",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/scikit_learn_models.py",
            "symbol": "import-error",
            "message": "Unable to import 'numpy'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "scikit_learn_models",
            "obj": "",
            "line": 2,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/scikit_learn_models.py",
            "symbol": "import-error",
            "message": "Unable to import 'joblib'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "scikit_learn_models",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/scikit_learn_models.py",
            "symbol": "import-error",
            "message": "Unable to import 'sklearn'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "scikit_learn_models",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/scikit_learn_models.py",
            "symbol": "import-error",
            "message": "Unable to import 'sklearn.neural_network'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "scikit_learn_models",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/scikit_learn_models.py",
            "symbol": "import-error",
            "message": "Unable to import 'sklearn.svm'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "scikit_learn_models",
            "obj": "",
            "line": 7,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/scikit_learn_models.py",
            "symbol": "import-error",
            "message": "Unable to import 'sklearn.pipeline'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "scikit_learn_models",
            "obj": "",
            "line": 8,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/scikit_learn_models.py",
            "symbol": "import-error",
            "message": "Unable to import 'sklearn.preprocessing'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "scikit_learn_models",
            "obj": "",
            "line": 9,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/scikit_learn_models.py",
            "symbol": "import-error",
            "message": "Unable to import 'sklearn.compose'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "scikit_learn_models",
            "obj": "",
            "line": 10,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/scikit_learn_models.py",
            "symbol": "import-error",
            "message": "Unable to import 'skl2onnx'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "scikit_learn_models",
            "obj": "",
            "line": 11,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/scikit_learn_models.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.models.abstract_model'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "scikit_learn_models",
            "obj": "",
            "line": 12,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/scikit_learn_models.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.models.abstract_model'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "scikit_learn_models",
            "obj": "",
            "line": 13,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/scikit_learn_models.py",
            "symbol": "import-error",
            "message": "Unable to import 'sklearn.linear_model'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "scikit_learn_models",
            "obj": "",
            "line": 14,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/scikit_learn_models.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.load_save_utils'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "scikit_learn_models",
            "obj": "BaseScikitLearnModel.fit",
            "line": 39,
            "column": 18,
            "path": "addmo/s3_model_tuning/models/scikit_learn_models.py",
            "symbol": "invalid-name",
            "message": "Argument name \"x\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "scikit_learn_models",
            "obj": "BaseScikitLearnModel.fit",
            "line": 39,
            "column": 21,
            "path": "addmo/s3_model_tuning/models/scikit_learn_models.py",
            "symbol": "invalid-name",
            "message": "Argument name \"y\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "scikit_learn_models",
            "obj": "BaseScikitLearnModel.predict",
            "line": 47,
            "column": 22,
            "path": "addmo/s3_model_tuning/models/scikit_learn_models.py",
            "symbol": "invalid-name",
            "message": "Argument name \"x\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "scikit_learn_models",
            "obj": "BaseScikitLearnModel.save_regressor",
            "line": 79,
            "column": 37,
            "path": "addmo/s3_model_tuning/models/scikit_learn_models.py",
            "symbol": "invalid-name",
            "message": "Variable name \"f\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "scikit_learn_models",
            "obj": "BaseScikitLearnModel.save_regressor",
            "line": 82,
            "column": 29,
            "path": "addmo/s3_model_tuning/models/scikit_learn_models.py",
            "symbol": "f-string-without-interpolation",
            "message": "Using an f-string that does not have any interpolated variables",
            "message-id": "W1309"
        },
        {
            "type": "convention",
            "module": "scikit_learn_models",
            "obj": "BaseScikitLearnModel.to_scikit_learn",
            "line": 97,
            "column": 4,
            "path": "addmo/s3_model_tuning/models/scikit_learn_models.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "scikit_learn_models",
            "obj": "BaseScikitLearnModel.to_scikit_learn",
            "line": 97,
            "column": 30,
            "path": "addmo/s3_model_tuning/models/scikit_learn_models.py",
            "symbol": "invalid-name",
            "message": "Argument name \"x\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "scikit_learn_models",
            "obj": "BaseScikitLearnModel.to_scikit_learn",
            "line": 97,
            "column": 30,
            "path": "addmo/s3_model_tuning/models/scikit_learn_models.py",
            "symbol": "unused-argument",
            "message": "Unused argument 'x'",
            "message-id": "W0613"
        },
        {
            "type": "warning",
            "module": "scikit_learn_models",
            "obj": "BaseScikitLearnModel.fit",
            "line": 43,
            "column": 8,
            "path": "addmo/s3_model_tuning/models/scikit_learn_models.py",
            "symbol": "attribute-defined-outside-init",
            "message": "Attribute 'x_fit' defined outside __init__",
            "message-id": "W0201"
        },
        {
            "type": "warning",
            "module": "scikit_learn_models",
            "obj": "BaseScikitLearnModel.fit",
            "line": 44,
            "column": 8,
            "path": "addmo/s3_model_tuning/models/scikit_learn_models.py",
            "symbol": "attribute-defined-outside-init",
            "message": "Attribute 'y_fit' defined outside __init__",
            "message-id": "W0201"
        },
        {
            "type": "warning",
            "module": "scikit_learn_models",
            "obj": "BaseScikitLearnModel._define_metadata",
            "line": 57,
            "column": 8,
            "path": "addmo/s3_model_tuning/models/scikit_learn_models.py",
            "symbol": "attribute-defined-outside-init",
            "message": "Attribute 'metadata' defined outside __init__",
            "message-id": "W0201"
        },
        {
            "type": "convention",
            "module": "scikit_learn_models",
            "obj": "ScikitMLP_TargetTransformed",
            "line": 159,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/scikit_learn_models.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "scikit_learn_models",
            "obj": "ScikitMLP_TargetTransformed",
            "line": 159,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/scikit_learn_models.py",
            "symbol": "invalid-name",
            "message": "Class name \"ScikitMLP_TargetTransformed\" doesn't conform to PascalCase naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "scikit_learn_models",
            "obj": "ScikitMLP_TargetTransformed.__init__",
            "line": 160,
            "column": 4,
            "path": "addmo/s3_model_tuning/models/scikit_learn_models.py",
            "symbol": "super-init-not-called",
            "message": "__init__ method from base class 'ScikitMLP' is not called",
            "message-id": "W0231"
        },
        {
            "type": "convention",
            "module": "scikit_learn_models",
            "obj": "ScikitLinearReg.grid_search_hyperparameter",
            "line": 193,
            "column": 4,
            "path": "addmo/s3_model_tuning/models/scikit_learn_models.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "scikit_learn_models",
            "obj": "ScikitLinearReg.optuna_hyperparameter_suggest",
            "line": 196,
            "column": 4,
            "path": "addmo/s3_model_tuning/models/scikit_learn_models.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "scikit_learn_models",
            "obj": "ScikitLinearRegNoScaler",
            "line": 205,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/scikit_learn_models.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "warning",
            "module": "scikit_learn_models",
            "obj": "ScikitLinearRegNoScaler.__init__",
            "line": 206,
            "column": 4,
            "path": "addmo/s3_model_tuning/models/scikit_learn_models.py",
            "symbol": "super-init-not-called",
            "message": "__init__ method from base class 'ScikitLinearReg' is not called",
            "message-id": "W0231"
        },
        {
            "type": "warning",
            "module": "scikit_learn_models",
            "obj": "ScikitLinearRegNoScaler.fit",
            "line": 220,
            "column": 8,
            "path": "addmo/s3_model_tuning/models/scikit_learn_models.py",
            "symbol": "attribute-defined-outside-init",
            "message": "Attribute 'x_fit' defined outside __init__",
            "message-id": "W0201"
        },
        {
            "type": "warning",
            "module": "scikit_learn_models",
            "obj": "ScikitLinearRegNoScaler.fit",
            "line": 221,
            "column": 8,
            "path": "addmo/s3_model_tuning/models/scikit_learn_models.py",
            "symbol": "attribute-defined-outside-init",
            "message": "Attribute 'y_fit' defined outside __init__",
            "message-id": "W0201"
        },
        {
            "type": "warning",
            "module": "scikit_learn_models",
            "obj": "ScikitLinearRegNoScaler._define_metadata",
            "line": 246,
            "column": 8,
            "path": "addmo/s3_model_tuning/models/scikit_learn_models.py",
            "symbol": "attribute-defined-outside-init",
            "message": "Attribute 'metadata' defined outside __init__",
            "message-id": "W0201"
        },
        {
            "type": "convention",
            "module": "scikit_learn_models",
            "obj": "ScikitSVR.grid_search_hyperparameter",
            "line": 276,
            "column": 4,
            "path": "addmo/s3_model_tuning/models/scikit_learn_models.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "warning",
            "module": "scikit_learn_models",
            "obj": "ScikitSVR._define_metadata",
            "line": 266,
            "column": 8,
            "path": "addmo/s3_model_tuning/models/scikit_learn_models.py",
            "symbol": "attribute-defined-outside-init",
            "message": "Attribute 'metadata' defined outside __init__",
            "message-id": "W0201"
        },
        {
            "type": "convention",
            "module": "scikit_learn_models",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/scikit_learn_models.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"from abc import ABC\" should be placed before \"import numpy as np\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "scikit_learn_models",
            "obj": "",
            "line": 13,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/scikit_learn_models.py",
            "symbol": "wrong-import-order",
            "message": "third party import \"from sklearn.linear_model import LinearRegression\" should be placed before \"from addmo.s3_model_tuning.models.abstract_model import AbstractMLModel\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "scikit_learn_models",
            "obj": "",
            "line": 13,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/scikit_learn_models.py",
            "symbol": "ungrouped-imports",
            "message": "Imports from package sklearn are not grouped",
            "message-id": "C0412"
        },
        {
            "type": "convention",
            "module": "scikit_learn_models",
            "obj": "",
            "line": 14,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/scikit_learn_models.py",
            "symbol": "ungrouped-imports",
            "message": "Imports from package addmo are not grouped",
            "message-id": "C0412"
        },
        {
            "type": "warning",
            "module": "scikit_learn_models",
            "obj": "",
            "line": 8,
            "column": 0,
            "path": "addmo/s3_model_tuning/models/scikit_learn_models.py",
            "symbol": "unused-import",
            "message": "Unused MaxAbsScaler imported from sklearn.preprocessing",
            "message-id": "W0611"
        },
        {
            "type": "convention",
            "module": "data_tuner_auto",
            "obj": "",
            "line": 56,
            "column": 0,
            "path": "addmo/s1_data_tuning_auto/data_tuner_auto.py",
            "symbol": "trailing-newlines",
            "message": "Trailing newlines",
            "message-id": "C0305"
        },
        {
            "type": "convention",
            "module": "data_tuner_auto",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo/s1_data_tuning_auto/data_tuner_auto.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "data_tuner_auto",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo/s1_data_tuning_auto/data_tuner_auto.py",
            "symbol": "import-error",
            "message": "Unable to import 'pandas'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "data_tuner_auto",
            "obj": "",
            "line": 2,
            "column": 0,
            "path": "addmo/s1_data_tuning_auto/data_tuner_auto.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s1_data_tuning_auto.config.data_tuning_auto_config'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "data_tuner_auto",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "addmo/s1_data_tuning_auto/data_tuner_auto.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.load_save'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "data_tuner_auto",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "addmo/s1_data_tuning_auto/data_tuner_auto.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s1_data_tuning_auto'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "data_tuner_auto",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "addmo/s1_data_tuning_auto/data_tuner_auto.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s1_data_tuning_auto'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "data_tuner_auto",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "addmo/s1_data_tuning_auto/data_tuner_auto.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.data_handling'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "data_tuner_auto",
            "obj": "DataTunerAuto.__init__",
            "line": 17,
            "column": 8,
            "path": "addmo/s1_data_tuning_auto/data_tuner_auto.py",
            "symbol": "invalid-name",
            "message": "Attribute name \"x\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "data_tuner_auto",
            "obj": "DataTunerAuto.__init__",
            "line": 17,
            "column": 16,
            "path": "addmo/s1_data_tuning_auto/data_tuner_auto.py",
            "symbol": "invalid-name",
            "message": "Attribute name \"y\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "feature_selection",
            "obj": "",
            "line": 69,
            "column": 0,
            "path": "addmo/s1_data_tuning_auto/feature_selection.py",
            "symbol": "line-too-long",
            "message": "Line too long (102/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "feature_selection",
            "obj": "",
            "line": 72,
            "column": 0,
            "path": "addmo/s1_data_tuning_auto/feature_selection.py",
            "symbol": "line-too-long",
            "message": "Line too long (121/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "feature_selection",
            "obj": "",
            "line": 140,
            "column": 0,
            "path": "addmo/s1_data_tuning_auto/feature_selection.py",
            "symbol": "missing-final-newline",
            "message": "Final newline missing",
            "message-id": "C0304"
        },
        {
            "type": "convention",
            "module": "feature_selection",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo/s1_data_tuning_auto/feature_selection.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "feature_selection",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo/s1_data_tuning_auto/feature_selection.py",
            "symbol": "import-error",
            "message": "Unable to import 'pandas'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "feature_selection",
            "obj": "",
            "line": 2,
            "column": 0,
            "path": "addmo/s1_data_tuning_auto/feature_selection.py",
            "symbol": "import-error",
            "message": "Unable to import 'numpy'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "feature_selection",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "addmo/s1_data_tuning_auto/feature_selection.py",
            "symbol": "import-error",
            "message": "Unable to import 'sklearn.feature_selection'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "feature_selection",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "addmo/s1_data_tuning_auto/feature_selection.py",
            "symbol": "import-error",
            "message": "Unable to import 'sklearn.decomposition'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "feature_selection",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "addmo/s1_data_tuning_auto/feature_selection.py",
            "symbol": "import-error",
            "message": "Unable to import 'sklearn.feature_selection'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "feature_selection",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "addmo/s1_data_tuning_auto/feature_selection.py",
            "symbol": "import-error",
            "message": "Unable to import 'sklearn.feature_selection'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "feature_selection",
            "obj": "",
            "line": 7,
            "column": 0,
            "path": "addmo/s1_data_tuning_auto/feature_selection.py",
            "symbol": "import-error",
            "message": "Unable to import 'sklearn.ensemble'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "feature_selection",
            "obj": "",
            "line": 8,
            "column": 0,
            "path": "addmo/s1_data_tuning_auto/feature_selection.py",
            "symbol": "import-error",
            "message": "Unable to import 'sklearn.model_selection'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "feature_selection",
            "obj": "",
            "line": 9,
            "column": 0,
            "path": "addmo/s1_data_tuning_auto/feature_selection.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s1_data_tuning_auto.config.data_tuning_auto_config'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "feature_selection",
            "obj": "manual_feature_select",
            "line": 12,
            "column": 55,
            "path": "addmo/s1_data_tuning_auto/feature_selection.py",
            "symbol": "invalid-name",
            "message": "Argument name \"x\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "feature_selection",
            "obj": "filter_low_variance",
            "line": 19,
            "column": 53,
            "path": "addmo/s1_data_tuning_auto/feature_selection.py",
            "symbol": "invalid-name",
            "message": "Argument name \"x\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "feature_selection",
            "obj": "filter_low_variance",
            "line": 24,
            "column": 4,
            "path": "addmo/s1_data_tuning_auto/feature_selection.py",
            "symbol": "redefined-builtin",
            "message": "Redefining built-in 'filter'",
            "message-id": "W0622"
        },
        {
            "type": "convention",
            "module": "feature_selection",
            "obj": "filter_ica",
            "line": 31,
            "column": 15,
            "path": "addmo/s1_data_tuning_auto/feature_selection.py",
            "symbol": "invalid-name",
            "message": "Argument name \"x\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "feature_selection",
            "obj": "filter_ica",
            "line": 35,
            "column": 4,
            "path": "addmo/s1_data_tuning_auto/feature_selection.py",
            "symbol": "invalid-name",
            "message": "Variable name \"Ica\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "feature_selection",
            "obj": "filter_univariate",
            "line": 41,
            "column": 51,
            "path": "addmo/s1_data_tuning_auto/feature_selection.py",
            "symbol": "invalid-name",
            "message": "Argument name \"x\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "feature_selection",
            "obj": "filter_univariate",
            "line": 41,
            "column": 54,
            "path": "addmo/s1_data_tuning_auto/feature_selection.py",
            "symbol": "invalid-name",
            "message": "Argument name \"y\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "feature_selection",
            "obj": "recursive_feature_selection_by_count",
            "line": 70,
            "column": 70,
            "path": "addmo/s1_data_tuning_auto/feature_selection.py",
            "symbol": "invalid-name",
            "message": "Argument name \"x\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "feature_selection",
            "obj": "recursive_feature_selection_by_count",
            "line": 70,
            "column": 73,
            "path": "addmo/s1_data_tuning_auto/feature_selection.py",
            "symbol": "invalid-name",
            "message": "Argument name \"y\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "feature_selection",
            "obj": "recursive_feature_selection_by_score",
            "line": 98,
            "column": 70,
            "path": "addmo/s1_data_tuning_auto/feature_selection.py",
            "symbol": "invalid-name",
            "message": "Argument name \"x\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "feature_selection",
            "obj": "recursive_feature_selection_by_score",
            "line": 98,
            "column": 73,
            "path": "addmo/s1_data_tuning_auto/feature_selection.py",
            "symbol": "invalid-name",
            "message": "Argument name \"y\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "feature_selection",
            "obj": "recursive_feature_selection_by_score",
            "line": 98,
            "column": 0,
            "path": "addmo/s1_data_tuning_auto/feature_selection.py",
            "symbol": "too-many-locals",
            "message": "Too many local variables (16/15)",
            "message-id": "R0914"
        },
        {
            "type": "convention",
            "module": "feature_construction",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo/s1_data_tuning_auto/feature_construction.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "feature_construction",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo/s1_data_tuning_auto/feature_construction.py",
            "symbol": "import-error",
            "message": "Unable to import 'pandas'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "feature_construction",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "addmo/s1_data_tuning_auto/feature_construction.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s2_data_tuning'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "feature_construction",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "addmo/s1_data_tuning_auto/feature_construction.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.data_handling'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "feature_construction",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "addmo/s1_data_tuning_auto/feature_construction.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.scoring.validator_factory'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "feature_construction",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "addmo/s1_data_tuning_auto/feature_construction.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.models.model_factory'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "feature_construction",
            "obj": "",
            "line": 7,
            "column": 0,
            "path": "addmo/s1_data_tuning_auto/feature_construction.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.scoring.abstract_scorer'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "feature_construction",
            "obj": "",
            "line": 8,
            "column": 0,
            "path": "addmo/s1_data_tuning_auto/feature_construction.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.models.abstract_model'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "feature_construction",
            "obj": "",
            "line": 9,
            "column": 0,
            "path": "addmo/s1_data_tuning_auto/feature_construction.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s1_data_tuning_auto.config.data_tuning_auto_config'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "feature_construction",
            "obj": "",
            "line": 10,
            "column": 0,
            "path": "addmo/s1_data_tuning_auto/feature_construction.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.model_tuner'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "feature_construction",
            "obj": "create_difference",
            "line": 13,
            "column": 51,
            "path": "addmo/s1_data_tuning_auto/feature_construction.py",
            "symbol": "invalid-name",
            "message": "Argument name \"xy\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "feature_construction",
            "obj": "manual_target_lags",
            "line": 27,
            "column": 52,
            "path": "addmo/s1_data_tuning_auto/feature_construction.py",
            "symbol": "invalid-name",
            "message": "Argument name \"xy\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "feature_construction",
            "obj": "manual_feature_lags",
            "line": 73,
            "column": 53,
            "path": "addmo/s1_data_tuning_auto/feature_construction.py",
            "symbol": "invalid-name",
            "message": "Argument name \"xy\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "feature_construction",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "addmo/s1_data_tuning_auto/feature_construction.py",
            "symbol": "unused-import",
            "message": "Unused split_target_features imported from addmo.util.data_handling",
            "message-id": "W0611"
        },
        {
            "type": "warning",
            "module": "feature_construction",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "addmo/s1_data_tuning_auto/feature_construction.py",
            "symbol": "unused-import",
            "message": "Unused ValidatorFactory imported from addmo.s3_model_tuning.scoring.validator_factory",
            "message-id": "W0611"
        },
        {
            "type": "warning",
            "module": "feature_construction",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "addmo/s1_data_tuning_auto/feature_construction.py",
            "symbol": "unused-import",
            "message": "Unused ModelFactory imported from addmo.s3_model_tuning.models.model_factory",
            "message-id": "W0611"
        },
        {
            "type": "warning",
            "module": "feature_construction",
            "obj": "",
            "line": 7,
            "column": 0,
            "path": "addmo/s1_data_tuning_auto/feature_construction.py",
            "symbol": "unused-import",
            "message": "Unused ValidationScoring imported from addmo.s3_model_tuning.scoring.abstract_scorer",
            "message-id": "W0611"
        },
        {
            "type": "warning",
            "module": "feature_construction",
            "obj": "",
            "line": 8,
            "column": 0,
            "path": "addmo/s1_data_tuning_auto/feature_construction.py",
            "symbol": "unused-import",
            "message": "Unused AbstractMLModel imported from addmo.s3_model_tuning.models.abstract_model",
            "message-id": "W0611"
        },
        {
            "type": "warning",
            "module": "feature_construction",
            "obj": "",
            "line": 10,
            "column": 0,
            "path": "addmo/s1_data_tuning_auto/feature_construction.py",
            "symbol": "unused-import",
            "message": "Unused ModelTuner imported from addmo.s3_model_tuning.model_tuner",
            "message-id": "W0611"
        },
        {
            "type": "convention",
            "module": "config.data_tuning_auto_config",
            "obj": "",
            "line": 74,
            "column": 0,
            "path": "addmo/s1_data_tuning_auto/config/data_tuning_auto_config.py",
            "symbol": "trailing-newlines",
            "message": "Trailing newlines",
            "message-id": "C0305"
        },
        {
            "type": "convention",
            "module": "config.data_tuning_auto_config",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo/s1_data_tuning_auto/config/data_tuning_auto_config.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "config.data_tuning_auto_config",
            "obj": "",
            "line": 2,
            "column": 0,
            "path": "addmo/s1_data_tuning_auto/config/data_tuning_auto_config.py",
            "symbol": "import-error",
            "message": "Unable to import 'pydantic'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "config.data_tuning_auto_config",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "addmo/s1_data_tuning_auto/config/data_tuning_auto_config.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.load_save_utils'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "config.data_tuning_auto_config",
            "obj": "DataTuningAutoSetup",
            "line": 5,
            "column": 0,
            "path": "addmo/s1_data_tuning_auto/config/data_tuning_auto_config.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "refactor",
            "module": "config.data_tuning_auto_config",
            "obj": "DataTuningAutoSetup",
            "line": 5,
            "column": 0,
            "path": "addmo/s1_data_tuning_auto/config/data_tuning_auto_config.py",
            "symbol": "too-few-public-methods",
            "message": "Too few public methods (0/2)",
            "message-id": "R0903"
        },
        {
            "type": "warning",
            "module": "config.data_tuning_auto_config",
            "obj": "",
            "line": 2,
            "column": 0,
            "path": "addmo/s1_data_tuning_auto/config/data_tuning_auto_config.py",
            "symbol": "unused-import",
            "message": "Unused PrivateAttr imported from pydantic",
            "message-id": "W0611"
        },
        {
            "type": "convention",
            "module": "model_testing",
            "obj": "",
            "line": 9,
            "column": 0,
            "path": "addmo/s4_model_testing/model_testing.py",
            "symbol": "line-too-long",
            "message": "Line too long (113/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "model_testing",
            "obj": "",
            "line": 34,
            "column": 0,
            "path": "addmo/s4_model_testing/model_testing.py",
            "symbol": "line-too-long",
            "message": "Line too long (136/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "model_testing",
            "obj": "",
            "line": 51,
            "column": 0,
            "path": "addmo/s4_model_testing/model_testing.py",
            "symbol": "line-too-long",
            "message": "Line too long (134/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "model_testing",
            "obj": "",
            "line": 68,
            "column": 0,
            "path": "addmo/s4_model_testing/model_testing.py",
            "symbol": "line-too-long",
            "message": "Line too long (110/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "model_testing",
            "obj": "",
            "line": 145,
            "column": 0,
            "path": "addmo/s4_model_testing/model_testing.py",
            "symbol": "trailing-newlines",
            "message": "Trailing newlines",
            "message-id": "C0305"
        },
        {
            "type": "convention",
            "module": "model_testing",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo/s4_model_testing/model_testing.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "model_testing",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "addmo/s4_model_testing/model_testing.py",
            "symbol": "import-error",
            "message": "Unable to import 'pandas'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "model_testing",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "addmo/s4_model_testing/model_testing.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.definitions'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "model_testing",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "addmo/s4_model_testing/model_testing.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.load_save_utils'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "model_testing",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "addmo/s4_model_testing/model_testing.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s1_data_tuning_auto.data_tuner_auto'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "model_testing",
            "obj": "",
            "line": 7,
            "column": 0,
            "path": "addmo/s4_model_testing/model_testing.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s1_data_tuning_auto.config.data_tuning_auto_config'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "model_testing",
            "obj": "",
            "line": 8,
            "column": 0,
            "path": "addmo/s4_model_testing/model_testing.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.experiment_logger'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "model_testing",
            "obj": "",
            "line": 9,
            "column": 0,
            "path": "addmo/s4_model_testing/model_testing.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.definitions'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "model_testing",
            "obj": "",
            "line": 10,
            "column": 0,
            "path": "addmo/s4_model_testing/model_testing.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.models.model_factory'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "model_testing",
            "obj": "",
            "line": 11,
            "column": 0,
            "path": "addmo/s4_model_testing/model_testing.py",
            "symbol": "import-error",
            "message": "Unable to import 'sklearn.metrics'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "model_testing",
            "obj": "",
            "line": 12,
            "column": 0,
            "path": "addmo/s4_model_testing/model_testing.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s2_data_tuning.config.data_tuning_config'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "model_testing",
            "obj": "",
            "line": 13,
            "column": 0,
            "path": "addmo/s4_model_testing/model_testing.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s2_data_tuning.data_tuner_fixed'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "model_testing",
            "obj": "",
            "line": 14,
            "column": 0,
            "path": "addmo/s4_model_testing/model_testing.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.load_save'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "model_testing",
            "obj": "",
            "line": 15,
            "column": 0,
            "path": "addmo/s4_model_testing/model_testing.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.data_handling'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "model_testing",
            "obj": "",
            "line": 16,
            "column": 0,
            "path": "addmo/s4_model_testing/model_testing.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s5_insights.model_plots.scatter_plot'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "model_testing",
            "obj": "",
            "line": 17,
            "column": 0,
            "path": "addmo/s4_model_testing/model_testing.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.plotting_utils'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "model_testing",
            "obj": "",
            "line": 18,
            "column": 0,
            "path": "addmo/s4_model_testing/model_testing.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.load_save_utils'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "model_testing",
            "obj": "model_test",
            "line": 20,
            "column": 0,
            "path": "addmo/s4_model_testing/model_testing.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "refactor",
            "module": "model_testing",
            "obj": "model_test",
            "line": 20,
            "column": 0,
            "path": "addmo/s4_model_testing/model_testing.py",
            "symbol": "too-many-locals",
            "message": "Too many local variables (22/15)",
            "message-id": "R0914"
        },
        {
            "type": "warning",
            "module": "model_testing",
            "obj": "model_test",
            "line": 20,
            "column": 15,
            "path": "addmo/s4_model_testing/model_testing.py",
            "symbol": "redefined-builtin",
            "message": "Redefining built-in 'dir'",
            "message-id": "W0622"
        },
        {
            "type": "warning",
            "module": "model_testing",
            "obj": "model_test",
            "line": 31,
            "column": 13,
            "path": "addmo/s4_model_testing/model_testing.py",
            "symbol": "unspecified-encoding",
            "message": "Using open without explicitly specifying an encoding",
            "message-id": "W1514"
        },
        {
            "type": "warning",
            "module": "model_testing",
            "obj": "model_test",
            "line": 47,
            "column": 13,
            "path": "addmo/s4_model_testing/model_testing.py",
            "symbol": "unspecified-encoding",
            "message": "Using open without explicitly specifying an encoding",
            "message-id": "W1514"
        },
        {
            "type": "convention",
            "module": "model_testing",
            "obj": "model_test",
            "line": 51,
            "column": 21,
            "path": "addmo/s4_model_testing/model_testing.py",
            "symbol": "invalid-name",
            "message": "Variable name \"y\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "model_testing",
            "obj": "model_test",
            "line": 62,
            "column": 8,
            "path": "addmo/s4_model_testing/model_testing.py",
            "symbol": "invalid-name",
            "message": "Variable name \"xy\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "model_testing",
            "obj": "model_test",
            "line": 63,
            "column": 8,
            "path": "addmo/s4_model_testing/model_testing.py",
            "symbol": "invalid-name",
            "message": "Variable name \"x\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "model_testing",
            "obj": "model_test",
            "line": 64,
            "column": 8,
            "path": "addmo/s4_model_testing/model_testing.py",
            "symbol": "invalid-name",
            "message": "Variable name \"y\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "model_testing",
            "obj": "data_tuning_recreate_auto",
            "line": 76,
            "column": 0,
            "path": "addmo/s4_model_testing/model_testing.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "model_testing",
            "obj": "data_tuning_recreate_fixed",
            "line": 105,
            "column": 0,
            "path": "addmo/s4_model_testing/model_testing.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "model_testing",
            "obj": "data_tuning_recreate_fixed",
            "line": 125,
            "column": 4,
            "path": "addmo/s4_model_testing/model_testing.py",
            "symbol": "invalid-name",
            "message": "Variable name \"x\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "model_testing",
            "obj": "data_tuning_recreate_fixed",
            "line": 125,
            "column": 7,
            "path": "addmo/s4_model_testing/model_testing.py",
            "symbol": "invalid-name",
            "message": "Variable name \"y\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "model_testing",
            "obj": "data_tuning_recreate_fixed",
            "line": 125,
            "column": 4,
            "path": "addmo/s4_model_testing/model_testing.py",
            "symbol": "unused-variable",
            "message": "Unused variable 'x'",
            "message-id": "W0612"
        },
        {
            "type": "convention",
            "module": "model_testing",
            "obj": "",
            "line": 11,
            "column": 0,
            "path": "addmo/s4_model_testing/model_testing.py",
            "symbol": "wrong-import-order",
            "message": "third party import \"from sklearn.metrics import root_mean_squared_error\" should be placed before \"from addmo.util.definitions import results_dir_data_tuning, results_dir\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "model_testing",
            "obj": "",
            "line": 12,
            "column": 0,
            "path": "addmo/s4_model_testing/model_testing.py",
            "symbol": "ungrouped-imports",
            "message": "Imports from package addmo are not grouped",
            "message-id": "C0412"
        },
        {
            "type": "warning",
            "module": "model_testing",
            "obj": "",
            "line": 9,
            "column": 0,
            "path": "addmo/s4_model_testing/model_testing.py",
            "symbol": "unused-import",
            "message": "Unused results_dir_data_tuning_fixed imported from addmo.util.definitions",
            "message-id": "W0611"
        },
        {
            "type": "warning",
            "module": "model_testing",
            "obj": "",
            "line": 9,
            "column": 0,
            "path": "addmo/s4_model_testing/model_testing.py",
            "symbol": "unused-import",
            "message": "Unused results_dir_data_tuning_auto imported from addmo.util.definitions",
            "message-id": "W0611"
        },
        {
            "type": "convention",
            "module": "load_save_utils",
            "obj": "",
            "line": 95,
            "column": 0,
            "path": "addmo/util/load_save_utils.py",
            "symbol": "trailing-newlines",
            "message": "Trailing newlines",
            "message-id": "C0305"
        },
        {
            "type": "convention",
            "module": "load_save_utils",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo/util/load_save_utils.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "refactor",
            "module": "load_save_utils",
            "obj": "create_dir_and_get_path",
            "line": 54,
            "column": 4,
            "path": "addmo/util/load_save_utils.py",
            "symbol": "no-else-return",
            "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
            "message-id": "R1705"
        },
        {
            "type": "refactor",
            "module": "load_save_utils",
            "obj": "_overwrite_file",
            "line": 62,
            "column": 0,
            "path": "addmo/util/load_save_utils.py",
            "symbol": "inconsistent-return-statements",
            "message": "Either all return statements in a function should return an expression, or none of them should.",
            "message-id": "R1710"
        },
        {
            "type": "refactor",
            "module": "load_save_utils",
            "obj": "_get_bool",
            "line": 83,
            "column": 4,
            "path": "addmo/util/load_save_utils.py",
            "symbol": "no-else-return",
            "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
            "message-id": "R1705"
        },
        {
            "type": "convention",
            "module": "load_save",
            "obj": "",
            "line": 100,
            "column": 0,
            "path": "addmo/util/load_save.py",
            "symbol": "missing-final-newline",
            "message": "Final newline missing",
            "message-id": "C0304"
        },
        {
            "type": "convention",
            "module": "load_save",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo/util/load_save.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "load_save",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo/util/load_save.py",
            "symbol": "import-error",
            "message": "Unable to import 'pandas'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "load_save",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "addmo/util/load_save.py",
            "symbol": "import-error",
            "message": "Unable to import 'pydantic'",
            "message-id": "E0401"
        },
        {
            "type": "warning",
            "module": "load_save",
            "obj": "",
            "line": 7,
            "column": 0,
            "path": "addmo/util/load_save.py",
            "symbol": "reimported",
            "message": "Reimport 'datetime' (imported line 3)",
            "message-id": "W0404"
        },
        {
            "type": "warning",
            "module": "load_save",
            "obj": "load_config_from_json",
            "line": 23,
            "column": 17,
            "path": "addmo/util/load_save.py",
            "symbol": "unspecified-encoding",
            "message": "Using open without explicitly specifying an encoding",
            "message-id": "W1514"
        },
        {
            "type": "convention",
            "module": "load_save",
            "obj": "load_config_from_json",
            "line": 23,
            "column": 38,
            "path": "addmo/util/load_save.py",
            "symbol": "invalid-name",
            "message": "Variable name \"f\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "load_save",
            "obj": "load_config_from_json",
            "line": 29,
            "column": 12,
            "path": "addmo/util/load_save.py",
            "symbol": "invalid-name",
            "message": "Variable name \"e\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "load_save",
            "obj": "save_config_to_json",
            "line": 43,
            "column": 9,
            "path": "addmo/util/load_save.py",
            "symbol": "unspecified-encoding",
            "message": "Using open without explicitly specifying an encoding",
            "message-id": "W1514"
        },
        {
            "type": "convention",
            "module": "load_save",
            "obj": "save_config_to_json",
            "line": 43,
            "column": 28,
            "path": "addmo/util/load_save.py",
            "symbol": "invalid-name",
            "message": "Variable name \"f\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "load_save",
            "obj": "load_data",
            "line": 56,
            "column": 15,
            "path": "addmo/util/load_save.py",
            "symbol": "broad-exception-caught",
            "message": "Catching too general exception Exception",
            "message-id": "W0718"
        },
        {
            "type": "convention",
            "module": "load_save",
            "obj": "load_data",
            "line": 55,
            "column": 12,
            "path": "addmo/util/load_save.py",
            "symbol": "invalid-name",
            "message": "Variable name \"df\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "load_save",
            "obj": "load_data",
            "line": 57,
            "column": 12,
            "path": "addmo/util/load_save.py",
            "symbol": "invalid-name",
            "message": "Variable name \"df\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "load_save",
            "obj": "load_data",
            "line": 61,
            "column": 8,
            "path": "addmo/util/load_save.py",
            "symbol": "invalid-name",
            "message": "Variable name \"df\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "load_save",
            "obj": "write_data",
            "line": 70,
            "column": 15,
            "path": "addmo/util/load_save.py",
            "symbol": "invalid-name",
            "message": "Argument name \"df\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "load_save",
            "obj": "ensure_datetime_index",
            "line": 82,
            "column": 0,
            "path": "addmo/util/load_save.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "load_save",
            "obj": "ensure_datetime_index",
            "line": 83,
            "column": 4,
            "path": "addmo/util/load_save.py",
            "symbol": "invalid-name",
            "message": "Argument name \"df\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "load_save",
            "obj": "",
            "line": 2,
            "column": 0,
            "path": "addmo/util/load_save.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"import json\" should be placed before \"import pandas as pd\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "load_save",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "addmo/util/load_save.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"import datetime\" should be placed before \"import pandas as pd\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "load_save",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "addmo/util/load_save.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"from pathlib import Path\" should be placed before \"import pandas as pd\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "load_save",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "addmo/util/load_save.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"from typing import Type, TypeVar, Union\" should be placed before \"import pandas as pd\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "load_save",
            "obj": "",
            "line": 7,
            "column": 0,
            "path": "addmo/util/load_save.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"import datetime\" should be placed before \"import pandas as pd\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "load_save",
            "obj": "",
            "line": 7,
            "column": 0,
            "path": "addmo/util/load_save.py",
            "symbol": "ungrouped-imports",
            "message": "Imports from package datetime are not grouped",
            "message-id": "C0412"
        },
        {
            "type": "convention",
            "module": "definitions",
            "obj": "",
            "line": 52,
            "column": 0,
            "path": "addmo/util/definitions.py",
            "symbol": "line-too-long",
            "message": "Line too long (102/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "definitions",
            "obj": "",
            "line": 62,
            "column": 0,
            "path": "addmo/util/definitions.py",
            "symbol": "line-too-long",
            "message": "Line too long (174/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "definitions",
            "obj": "",
            "line": 66,
            "column": 0,
            "path": "addmo/util/definitions.py",
            "symbol": "line-too-long",
            "message": "Line too long (121/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "definitions",
            "obj": "",
            "line": 83,
            "column": 0,
            "path": "addmo/util/definitions.py",
            "symbol": "line-too-long",
            "message": "Line too long (129/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "definitions",
            "obj": "",
            "line": 119,
            "column": 0,
            "path": "addmo/util/definitions.py",
            "symbol": "missing-final-newline",
            "message": "Final newline missing",
            "message-id": "C0304"
        },
        {
            "type": "convention",
            "module": "definitions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo/util/definitions.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "definitions",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "addmo/util/definitions.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.load_save_utils'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "definitions",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "addmo/util/definitions.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s2_data_tuning.config.data_tuning_config'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "definitions",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "addmo/util/definitions.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.config.model_tuning_config'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "definitions",
            "obj": "",
            "line": 7,
            "column": 0,
            "path": "addmo/util/definitions.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s1_data_tuning_auto.config.data_tuning_auto_config'",
            "message-id": "E0401"
        },
        {
            "type": "refactor",
            "module": "definitions",
            "obj": "raw_data_path",
            "line": 14,
            "column": 4,
            "path": "addmo/util/definitions.py",
            "symbol": "no-else-return",
            "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
            "message-id": "R1705"
        },
        {
            "type": "warning",
            "module": "definitions",
            "obj": "return_best_model",
            "line": 69,
            "column": 22,
            "path": "addmo/util/definitions.py",
            "symbol": "redefined-builtin",
            "message": "Redefining built-in 'dir'",
            "message-id": "W0622"
        },
        {
            "type": "warning",
            "module": "definitions",
            "obj": "results_dir_data_tuning_auto",
            "line": 90,
            "column": 4,
            "path": "addmo/util/definitions.py",
            "symbol": "redefined-builtin",
            "message": "Redefining built-in 'dir'",
            "message-id": "W0622"
        },
        {
            "type": "warning",
            "module": "definitions",
            "obj": "results_dir_data_tuning_fixed",
            "line": 100,
            "column": 4,
            "path": "addmo/util/definitions.py",
            "symbol": "redefined-builtin",
            "message": "Redefining built-in 'dir'",
            "message-id": "W0622"
        },
        {
            "type": "warning",
            "module": "definitions",
            "obj": "load_model_config",
            "line": 112,
            "column": 22,
            "path": "addmo/util/definitions.py",
            "symbol": "redefined-builtin",
            "message": "Redefining built-in 'dir'",
            "message-id": "W0622"
        },
        {
            "type": "warning",
            "module": "definitions",
            "obj": "load_model_config",
            "line": 117,
            "column": 9,
            "path": "addmo/util/definitions.py",
            "symbol": "unspecified-encoding",
            "message": "Using open without explicitly specifying an encoding",
            "message-id": "W1514"
        },
        {
            "type": "convention",
            "module": "definitions",
            "obj": "load_model_config",
            "line": 117,
            "column": 35,
            "path": "addmo/util/definitions.py",
            "symbol": "invalid-name",
            "message": "Variable name \"f\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "definitions",
            "obj": "",
            "line": 2,
            "column": 0,
            "path": "addmo/util/definitions.py",
            "symbol": "unused-import",
            "message": "Unused import glob",
            "message-id": "W0611"
        },
        {
            "type": "convention",
            "module": "plotting_utils",
            "obj": "",
            "line": 29,
            "column": 0,
            "path": "addmo/util/plotting_utils.py",
            "symbol": "trailing-newlines",
            "message": "Trailing newlines",
            "message-id": "C0305"
        },
        {
            "type": "convention",
            "module": "plotting_utils",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo/util/plotting_utils.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "plotting_utils",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "addmo/util/plotting_utils.py",
            "symbol": "import-error",
            "message": "Unable to import 'pandas'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "plotting_utils",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "addmo/util/plotting_utils.py",
            "symbol": "import-error",
            "message": "Unable to import 'pydantic'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "plotting_utils",
            "obj": "cm2inch",
            "line": 23,
            "column": 0,
            "path": "addmo/util/plotting_utils.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "plotting_utils",
            "obj": "save_pdf",
            "line": 26,
            "column": 0,
            "path": "addmo/util/plotting_utils.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "plotting_utils",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "addmo/util/plotting_utils.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"from typing import Optional\" should be placed before \"import pandas as pd\"",
            "message-id": "C0411"
        },
        {
            "type": "warning",
            "module": "plotting_utils",
            "obj": "",
            "line": 2,
            "column": 0,
            "path": "addmo/util/plotting_utils.py",
            "symbol": "unused-import",
            "message": "Unused import re",
            "message-id": "W0611"
        },
        {
            "type": "warning",
            "module": "plotting_utils",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "addmo/util/plotting_utils.py",
            "symbol": "unused-import",
            "message": "Unused pandas imported as pd",
            "message-id": "W0611"
        },
        {
            "type": "warning",
            "module": "plotting_utils",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "addmo/util/plotting_utils.py",
            "symbol": "unused-import",
            "message": "Unused Optional imported from typing",
            "message-id": "W0611"
        },
        {
            "type": "warning",
            "module": "plotting_utils",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "addmo/util/plotting_utils.py",
            "symbol": "unused-import",
            "message": "Unused BaseModel imported from pydantic",
            "message-id": "W0611"
        },
        {
            "type": "warning",
            "module": "plotting_utils",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "addmo/util/plotting_utils.py",
            "symbol": "unused-import",
            "message": "Unused Field imported from pydantic",
            "message-id": "W0611"
        },
        {
            "type": "warning",
            "module": "plotting_utils",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "addmo/util/plotting_utils.py",
            "symbol": "unused-import",
            "message": "Unused create_model imported from pydantic",
            "message-id": "W0611"
        },
        {
            "type": "convention",
            "module": "experiment_logger",
            "obj": "",
            "line": 125,
            "column": 0,
            "path": "addmo/util/experiment_logger.py",
            "symbol": "line-too-long",
            "message": "Line too long (115/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "experiment_logger",
            "obj": "",
            "line": 126,
            "column": 0,
            "path": "addmo/util/experiment_logger.py",
            "symbol": "line-too-long",
            "message": "Line too long (116/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "experiment_logger",
            "obj": "",
            "line": 127,
            "column": 0,
            "path": "addmo/util/experiment_logger.py",
            "symbol": "line-too-long",
            "message": "Line too long (119/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "experiment_logger",
            "obj": "",
            "line": 128,
            "column": 0,
            "path": "addmo/util/experiment_logger.py",
            "symbol": "line-too-long",
            "message": "Line too long (120/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "experiment_logger",
            "obj": "",
            "line": 129,
            "column": 0,
            "path": "addmo/util/experiment_logger.py",
            "symbol": "line-too-long",
            "message": "Line too long (118/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "experiment_logger",
            "obj": "",
            "line": 172,
            "column": 0,
            "path": "addmo/util/experiment_logger.py",
            "symbol": "line-too-long",
            "message": "Line too long (111/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "experiment_logger",
            "obj": "",
            "line": 216,
            "column": 0,
            "path": "addmo/util/experiment_logger.py",
            "symbol": "line-too-long",
            "message": "Line too long (119/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "experiment_logger",
            "obj": "",
            "line": 217,
            "column": 0,
            "path": "addmo/util/experiment_logger.py",
            "symbol": "line-too-long",
            "message": "Line too long (120/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "experiment_logger",
            "obj": "",
            "line": 218,
            "column": 0,
            "path": "addmo/util/experiment_logger.py",
            "symbol": "line-too-long",
            "message": "Line too long (123/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "experiment_logger",
            "obj": "",
            "line": 219,
            "column": 0,
            "path": "addmo/util/experiment_logger.py",
            "symbol": "line-too-long",
            "message": "Line too long (124/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "experiment_logger",
            "obj": "",
            "line": 220,
            "column": 0,
            "path": "addmo/util/experiment_logger.py",
            "symbol": "line-too-long",
            "message": "Line too long (122/100)",
            "message-id": "C0301"
        },
        {
            "type": "warning",
            "module": "experiment_logger",
            "obj": "",
            "line": 172,
            "column": 36,
            "path": "addmo/util/experiment_logger.py",
            "symbol": "fixme",
            "message": "Todo: evtl. komplett l\u00f6schen und auf normale speicher funktionen umstellen?",
            "message-id": "W0511"
        },
        {
            "type": "convention",
            "module": "experiment_logger",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo/util/experiment_logger.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "experiment_logger",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "addmo/util/experiment_logger.py",
            "symbol": "import-error",
            "message": "Unable to import 'pandas'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "experiment_logger",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "addmo/util/experiment_logger.py",
            "symbol": "import-error",
            "message": "Unable to import 'pandas'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "experiment_logger",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "addmo/util/experiment_logger.py",
            "symbol": "import-error",
            "message": "Unable to import 'wandb'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "experiment_logger",
            "obj": "",
            "line": 7,
            "column": 0,
            "path": "addmo/util/experiment_logger.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.models.abstract_model'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "experiment_logger",
            "obj": "",
            "line": 8,
            "column": 0,
            "path": "addmo/util/experiment_logger.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.load_save'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "experiment_logger",
            "obj": "",
            "line": 9,
            "column": 0,
            "path": "addmo/util/experiment_logger.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.load_save_utils'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "experiment_logger",
            "obj": "",
            "line": 10,
            "column": 0,
            "path": "addmo/util/experiment_logger.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.util.load_save_utils'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "experiment_logger",
            "obj": "",
            "line": 11,
            "column": 0,
            "path": "addmo/util/experiment_logger.py",
            "symbol": "import-error",
            "message": "Unable to import 'addmo.s3_model_tuning.models.model_factory'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "experiment_logger",
            "obj": "AbstractLogger",
            "line": 14,
            "column": 0,
            "path": "addmo/util/experiment_logger.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "experiment_logger",
            "obj": "AbstractLogger.start_experiment",
            "line": 17,
            "column": 4,
            "path": "addmo/util/experiment_logger.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "experiment_logger",
            "obj": "AbstractLogger.finish_experiment",
            "line": 22,
            "column": 4,
            "path": "addmo/util/experiment_logger.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "experiment_logger",
            "obj": "AbstractLogger.log",
            "line": 27,
            "column": 4,
            "path": "addmo/util/experiment_logger.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "experiment_logger",
            "obj": "AbstractLogger.log_artifact",
            "line": 32,
            "column": 4,
            "path": "addmo/util/experiment_logger.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "experiment_logger",
            "obj": "AbstractLogger.use_artifact",
            "line": 37,
            "column": 4,
            "path": "addmo/util/experiment_logger.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "experiment_logger",
            "obj": "AbstractLogger._handle_pkl",
            "line": 45,
            "column": 37,
            "path": "addmo/util/experiment_logger.py",
            "symbol": "invalid-name",
            "message": "Variable name \"f\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "experiment_logger",
            "obj": "WandbLogger",
            "line": 57,
            "column": 0,
            "path": "addmo/util/experiment_logger.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "refactor",
            "module": "experiment_logger",
            "obj": "WandbLogger.start_experiment",
            "line": 63,
            "column": 4,
            "path": "addmo/util/experiment_logger.py",
            "symbol": "inconsistent-return-statements",
            "message": "Either all return statements in a function should return an expression, or none of them should.",
            "message-id": "R1710"
        },
        {
            "type": "convention",
            "module": "experiment_logger",
            "obj": "WandbLogger.use_artifact",
            "line": 164,
            "column": 47,
            "path": "addmo/util/experiment_logger.py",
            "symbol": "invalid-name",
            "message": "Variable name \"f\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "experiment_logger",
            "obj": "WandbLogger.use_artifact",
            "line": 148,
            "column": 4,
            "path": "addmo/util/experiment_logger.py",
            "symbol": "inconsistent-return-statements",
            "message": "Either all return statements in a function should return an expression, or none of them should.",
            "message-id": "R1710"
        },
        {
            "type": "convention",
            "module": "experiment_logger",
            "obj": "LocalLogger",
            "line": 172,
            "column": 0,
            "path": "addmo/util/experiment_logger.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "warning",
            "module": "experiment_logger",
            "obj": "LocalLogger.start_experiment",
            "line": 178,
            "column": 4,
            "path": "addmo/util/experiment_logger.py",
            "symbol": "signature-differs",
            "message": "Signature differs from overridden 'start_experiment' method",
            "message-id": "W0222"
        },
        {
            "type": "refactor",
            "module": "experiment_logger",
            "obj": "LocalLogger.start_experiment",
            "line": 178,
            "column": 4,
            "path": "addmo/util/experiment_logger.py",
            "symbol": "inconsistent-return-statements",
            "message": "Either all return statements in a function should return an expression, or none of them should.",
            "message-id": "R1710"
        },
        {
            "type": "refactor",
            "module": "experiment_logger",
            "obj": "LocalLogger.use_artifact",
            "line": 238,
            "column": 12,
            "path": "addmo/util/experiment_logger.py",
            "symbol": "no-else-return",
            "message": "Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it",
            "message-id": "R1705"
        },
        {
            "type": "refactor",
            "module": "experiment_logger",
            "obj": "LocalLogger.use_artifact",
            "line": 231,
            "column": 4,
            "path": "addmo/util/experiment_logger.py",
            "symbol": "inconsistent-return-statements",
            "message": "Either all return statements in a function should return an expression, or none of them should.",
            "message-id": "R1710"
        },
        {
            "type": "warning",
            "module": "experiment_logger",
            "obj": "ExperimentLogger.use_artifact",
            "line": 273,
            "column": 8,
            "path": "addmo/util/experiment_logger.py",
            "symbol": "unused-variable",
            "message": "Unused variable 'data_local'",
            "message-id": "W0612"
        },
        {
            "type": "warning",
            "module": "experiment_logger",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "addmo/util/experiment_logger.py",
            "symbol": "unused-import",
            "message": "Unused ExcelWriter imported from pandas",
            "message-id": "W0611"
        },
        {
            "type": "warning",
            "module": "experiment_logger",
            "obj": "",
            "line": 9,
            "column": 0,
            "path": "addmo/util/experiment_logger.py",
            "symbol": "unused-import",
            "message": "Unused create_or_clean_directory imported from addmo.util.load_save_utils",
            "message-id": "W0611"
        },
        {
            "type": "convention",
            "module": "data_handling",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "addmo/util/data_handling.py",
            "symbol": "missing-final-newline",
            "message": "Final newline missing",
            "message-id": "C0304"
        },
        {
            "type": "convention",
            "module": "data_handling",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo/util/data_handling.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "convention",
            "module": "data_handling",
            "obj": "split_target_features",
            "line": 1,
            "column": 0,
            "path": "addmo/util/data_handling.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "data_handling",
            "obj": "split_target_features",
            "line": 1,
            "column": 39,
            "path": "addmo/util/data_handling.py",
            "symbol": "invalid-name",
            "message": "Argument name \"xy\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "data_handling",
            "obj": "split_target_features",
            "line": 2,
            "column": 4,
            "path": "addmo/util/data_handling.py",
            "symbol": "invalid-name",
            "message": "Variable name \"x\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "data_handling",
            "obj": "split_target_features",
            "line": 3,
            "column": 4,
            "path": "addmo/util/data_handling.py",
            "symbol": "invalid-name",
            "message": "Variable name \"y\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "data_handling",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo/util/data_handling.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==exe_data_tuning_auto:[45:65]\n==exe_data_tuning_fixed:[145:164]\n    saved_data_path = os.path.join(LocalLogger.directory, file_name + '.csv')\n    data = pd.read_csv(saved_data_path, delimiter=\",\", index_col=0, encoding=\"latin1\", header=0)\n    config_path = os.path.join(LocalLogger.directory, \"config.json\")\n    with open(config_path, 'r') as f:\n        plot_config = json.load(f)\n\n    # Plot tuned data\n\n    figures = plot_timeseries_combined(plot_config, data)\n    for fig in figures:\n        fig.show()\n    os.makedirs(LocalLogger.directory, exist_ok=True)\n    for idx, fig in enumerate(figures):\n        suffix = \"_2weeks\" if idx == 1 else \"\"\n        plot_path = os.path.join(LocalLogger.directory, f\"{file_name}{suffix}\")\n        save_pdf(fig, plot_path)\n    # Data tuning completed\n    print(\"Finished\")\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "data_handling",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo/util/data_handling.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==carpet_plots:[174:199]\n==plot_carpets_modelA:[133:157]\n        features = regressor.metadata[\"features_ordered\"]\n        if rename_dict is not None:\n            features = [rename_dict[feature] for feature in features]\n\n        # Determine the shape of the output\n        shape = next(\n            arr.shape for arr in kwargs.values() if isinstance(arr, np.ndarray)\n        )\n\n        # Prepare input saved_plots\n        input_data = pd.DataFrame(\n            {feature: np.ravel(kwargs[feature]) for feature in features}\n        )\n\n        # Make prediction\n        prediction = regressor.predict(input_data)\n\n        # Reshape the prediction to match the input shape\n        return prediction.reshape(shape)\n\n    return pred_func\n\ndef execute(plot_name, plot_dir, path_to_regressor, save):\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "data_handling",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo/util/data_handling.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==carpet_plots:[113:130]\n==plot_carpets_modelA:[74:93]\n            norm1 = colors.Normalize(vmin=np.nanmin(Z1), vmax=np.nanmax(Z1))\n            norm2 = colors.Normalize(vmin=np.nanmin(Z2), vmax=np.nanmax(Z2))\n\n            Z1_greater = np.where(Z1 >= Z2, Z1, np.nan)\n            Z1_smaller = np.where(Z1 <= Z2, Z1, np.nan)\n            Z2_greater = np.where(Z2 >= Z1, Z2, np.nan)\n            Z2_smaller = np.where(Z2 <= Z1, Z2, np.nan)\n\n            # surface plots in correct order and normalization\n            surf1 = ax.plot_surface(X, Y, Z1, cmap=surf1_cmap, visible=False, norm=norm1)\n            surf2 = ax.plot_surface(X, Y, Z2, cmap=surf2_cmap, visible=False, norm=norm2)\n            surf2_smaller = ax.plot_surface(X, Y, Z2_smaller, cmap=surf2_cmap, alpha=0.5, norm=norm2)\n            surf1_smaller = ax.plot_surface(X, Y, Z1_smaller, cmap=surf1_cmap, alpha=0.5, norm=norm1)\n            surf2_greater = ax.plot_surface(X, Y, Z2_greater, cmap=surf2_cmap, alpha=0.5, norm=norm2)\n            surf1_greater = ax.plot_surface(X, Y, Z1_greater, cmap=surf1_cmap, alpha=0.5, norm=norm1)\n\n        # Add this line to reverse the axis direction",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "data_handling",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo/util/data_handling.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==carpet_plots:[89:104]\n==plot_carpets_modelA:[50:65]\n        X, Y = np.meshgrid(grids[x_label], grids[y_label])\n\n        # Create input arrays for prediction functions\n        inputs = {}\n        for var in variables:\n            if var == x_label:\n                inputs[var] = X\n            elif var == y_label:\n                inputs[var] = Y\n            else:\n                if defaults_dict == None:\n                    inputs[var] = np.full_like(X, np.mean(grids[var]))\n                else:\n                    inputs[var] = np.full_like(X, defaults_dict[var])\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "data_handling",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo/util/data_handling.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==exe_recreate_data_tuning:[29:50]\n==model_testing:[82:101]\n    new_config = DataTuningAutoSetup(**saved_config_data)\n\n    LocalLogger.directory = results_dir_data_tuning(new_config)\n    LocalLogger.active = True\n    WandbLogger.project = \"addmo-test_data_auto_tuning\"\n    WandbLogger.directory = results_dir_data_tuning(new_config)\n    WandbLogger.active = False\n\n    ExperimentLogger.start_experiment(config=new_config)\n\n    # Create a new tuner instance with the same tuning parameters\n    new_tuner = DataTunerAuto(config=new_config)\n\n    # Apply the same tuning process to the new data\n    tuned_x_new = new_tuner.tune_auto()\n    y_new = new_tuner.y\n\n    tuned_xy_new = pd.concat([y_new, tuned_x_new], axis=1, join=\"inner\").bfill()\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "data_handling",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo/util/data_handling.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==exe_data_tuning_auto:[53:65]\n==exe_data_tuning_fixed:[73:90]\n    for fig in figures:\n        fig.show()\n    os.makedirs(LocalLogger.directory, exist_ok=True)\n    for idx, fig in enumerate(figures):\n        suffix = \"_2weeks\" if idx == 1 else \"\"\n        plot_path = os.path.join(LocalLogger.directory, f\"{file_name}{suffix}\")\n        save_pdf(fig, plot_path)\n    print(\"Finished\")\n\ndef default_config_exe_data_tuning_auto(user_input='y'):\n    \"\"\"Execute the system_data tuning process with default config.\"\"\"\n    # Initialize a default config (without loading JSON)",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "data_handling",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo/util/data_handling.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==exe_recreate_data_tuning:[32:41]\n==model_testing:[113:122]\n    LocalLogger.directory = results_dir_data_tuning(new_config)\n    LocalLogger.active = True\n    WandbLogger.project = \"addmo-test_data_auto_tuning\"\n    WandbLogger.directory = results_dir_data_tuning(new_config)\n    WandbLogger.active = False\n\n    ExperimentLogger.start_experiment(config=new_config)\n\n    #Using fixed config",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "data_handling",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo/util/data_handling.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==abstract_model:[143:196]\n==experiment_logger:[17:41]\n        pass\n\n    @abstractmethod\n    def set_params(self, **params):\n        \"\"\"\n        Set the hyperparameters of the ML model.\n\n        Args:\n            **params: Variable length keyword arguments for hyperparameters.\n        \"\"\"\n        pass\n\n    @abstractmethod\n    def get_params(self):\n        \"\"\"\n        Get the hyperparameters of the ML model.\n\n        Returns:\n            A dictionary of the current hyperparameters.\n        \"\"\"\n        pass\n\n    @abstractmethod\n    def optuna_hyperparameter_suggest(self, trial):\n        \"\"\"\n        Suggest hyperparameters using Optuna for hyperparameter optimization.\n\n        Args:\n            trial: An Optuna trial object used to suggest hyperparameters.\n\n        Returns:\n            A dictionary of hyperparameters with Optuna distributions.\n        \"\"\"\n        pass\n\n    @abstractmethod\n    def grid_search_hyperparameter(self):\n        \"\"\"\n        Define the hyperparameters for grid search.\n\n        Returns:\n            A dictionary representing a hyperparameter grid for grid search.\n        \"\"\"\n        pass\n\n    @abstractmethod\n    def default_hyperparameter(self):\n        \"\"\"\n        Define the default hyperparameters of the model.\n\n        Returns:\n            A dictionary with a default set of hyperparameters.\n        \"\"\"",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "data_handling",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "addmo/util/data_handling.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==exe_data_tuning_auto:[45:52]\n==exe_data_tuning_fixed:[64:72]\n    saved_data_path = os.path.join(LocalLogger.directory, file_name + '.csv')\n    data = pd.read_csv(saved_data_path, delimiter=\",\", index_col=0, encoding=\"latin1\", header=0)\n    config_path = os.path.join(LocalLogger.directory, \"config.json\")\n    with open(config_path, 'r') as f:\n        plot_config = json.load(f)\n\n    # Plot tuned data",
            "message-id": "R0801"
        }
    ],
    "stats": {
        "bad_names": {
            "argument": 53,
            "attr": 2,
            "klass": 1,
            "class_attribute": 0,
            "class_const": 0,
            "const": 9,
            "inlinevar": 0,
            "function": 0,
            "method": 1,
            "module": 4,
            "variable": 81,
            "typevar": 0,
            "typealias": 0
        },
        "by_module": {
            "ADDMo.__init__": {
                "convention": 1,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "exe_model_testing": {
                "convention": 14,
                "error": 3,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 20,
                "warning": 7
            },
            "exe_data_insights": {
                "convention": 27,
                "error": 8,
                "fatal": 0,
                "info": 0,
                "refactor": 9,
                "statement": 125,
                "warning": 16
            },
            "exe_data_tuning_auto": {
                "convention": 7,
                "error": 11,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 79,
                "warning": 5
            },
            "exe_model_tuning": {
                "convention": 5,
                "error": 15,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 50,
                "warning": 5
            },
            "exe_recreate_data_tuning": {
                "convention": 7,
                "error": 8,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 36,
                "warning": 5
            },
            "exe_data_tuning_fixed": {
                "convention": 9,
                "error": 13,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 95,
                "warning": 7
            },
            "conf": {
                "convention": 0,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "test_abstractmodel": {
                "convention": 5,
                "error": 7,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 51,
                "warning": 1
            },
            "test_data_tuning": {
                "convention": 9,
                "error": 8,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 52,
                "warning": 7
            },
            "test_model_tuning": {
                "convention": 8,
                "error": 8,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 35,
                "warning": 3
            },
            "test_config_loading": {
                "convention": 9,
                "error": 4,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 43,
                "warning": 0
            },
            "E2E_test": {
                "convention": 15,
                "error": 9,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 41,
                "warning": 1
            },
            "app": {
                "convention": 102,
                "error": 15,
                "fatal": 0,
                "info": 0,
                "refactor": 16,
                "statement": 672,
                "warning": 27
            },
            "launch_GUI": {
                "convention": 4,
                "error": 1,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 9,
                "warning": 1
            },
            "parallel_plots": {
                "convention": 6,
                "error": 6,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 63,
                "warning": 1
            },
            "carpet_plots": {
                "convention": 48,
                "error": 15,
                "fatal": 0,
                "info": 0,
                "refactor": 9,
                "statement": 223,
                "warning": 16
            },
            "scatter_plot": {
                "convention": 5,
                "error": 2,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 17,
                "warning": 0
            },
            "plot_carpets_modelA": {
                "convention": 25,
                "error": 7,
                "fatal": 0,
                "info": 0,
                "refactor": 3,
                "statement": 103,
                "warning": 9
            },
            "time_series": {
                "convention": 5,
                "error": 5,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 51,
                "warning": 1
            },
            "feature_constructor": {
                "convention": 2,
                "error": 1,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 14,
                "warning": 1
            },
            "data_tuner_fixed": {
                "convention": 3,
                "error": 5,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 29,
                "warning": 6
            },
            "config.data_tuning_config": {
                "convention": 4,
                "error": 3,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 10,
                "warning": 1
            },
            "model_tuner": {
                "convention": 3,
                "error": 5,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 39,
                "warning": 0
            },
            "hyparam_tuning_factory": {
                "convention": 2,
                "error": 5,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 14,
                "warning": 1
            },
            "abstract_hyparam_tuner": {
                "convention": 1,
                "error": 3,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 10,
                "warning": 0
            },
            "hyperparameter_tuner": {
                "convention": 3,
                "error": 7,
                "fatal": 0,
                "info": 0,
                "refactor": 3,
                "statement": 42,
                "warning": 6
            },
            "scoring.abstract_scorer": {
                "convention": 6,
                "error": 5,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 17,
                "warning": 1
            },
            "scoring.validator": {
                "convention": 8,
                "error": 5,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 15,
                "warning": 4
            },
            "scoring.validator_factory": {
                "convention": 3,
                "error": 4,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 11,
                "warning": 0
            },
            "custom_metrics": {
                "convention": 0,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "abstract_metric": {
                "convention": 1,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 2,
                "warning": 0
            },
            "metric_factory": {
                "convention": 1,
                "error": 3,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 16,
                "warning": 1
            },
            "abstract_splitter": {
                "convention": 10,
                "error": 3,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 25,
                "warning": 0
            },
            "custom_splitters": {
                "convention": 10,
                "error": 1,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 43,
                "warning": 10
            },
            "splitter_factory": {
                "convention": 1,
                "error": 4,
                "fatal": 0,
                "info": 0,
                "refactor": 3,
                "statement": 19,
                "warning": 0
            },
            "model_tuning_config": {
                "convention": 7,
                "error": 2,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 29,
                "warning": 0
            },
            "keras_models": {
                "convention": 18,
                "error": 12,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 104,
                "warning": 7
            },
            "abstract_model": {
                "convention": 11,
                "error": 6,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 92,
                "warning": 30
            },
            "model_factory": {
                "convention": 7,
                "error": 8,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 55,
                "warning": 5
            },
            "scikit_learn_models": {
                "convention": 25,
                "error": 13,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 131,
                "warning": 12
            },
            "data_tuner_auto": {
                "convention": 4,
                "error": 6,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 32,
                "warning": 0
            },
            "feature_selection": {
                "convention": 14,
                "error": 9,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 71,
                "warning": 1
            },
            "feature_construction": {
                "convention": 4,
                "error": 9,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 30,
                "warning": 6
            },
            "config.data_tuning_auto_config": {
                "convention": 3,
                "error": 2,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 21,
                "warning": 1
            },
            "model_testing": {
                "convention": 17,
                "error": 16,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 97,
                "warning": 6
            },
            "load_save_utils": {
                "convention": 2,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 3,
                "statement": 51,
                "warning": 0
            },
            "load_save": {
                "convention": 17,
                "error": 2,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 50,
                "warning": 4
            },
            "definitions": {
                "convention": 7,
                "error": 4,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 55,
                "warning": 6
            },
            "plotting_utils": {
                "convention": 5,
                "error": 2,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 23,
                "warning": 6
            },
            "experiment_logger": {
                "convention": 22,
                "error": 8,
                "fatal": 0,
                "info": 0,
                "refactor": 5,
                "statement": 140,
                "warning": 5
            },
            "data_handling": {
                "convention": 6,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 9,
                "statement": 4,
                "warning": 0
            }
        },
        "by_msg": {
            "invalid-name": 151,
            "line-too-long": 193,
            "missing-module-docstring": 48,
            "redefined-builtin": 13,
            "import-error": 296,
            "missing-function-docstring": 39,
            "redefined-outer-name": 36,
            "unspecified-encoding": 25,
            "unused-import": 60,
            "trailing-newlines": 13,
            "fixme": 4,
            "multiple-imports": 2,
            "consider-using-with": 6,
            "too-many-arguments": 4,
            "too-many-locals": 19,
            "wrong-import-order": 37,
            "missing-final-newline": 15,
            "unused-variable": 16,
            "protected-access": 2,
            "missing-class-docstring": 16,
            "ungrouped-imports": 15,
            "trailing-whitespace": 2,
            "too-many-lines": 1,
            "inconsistent-return-statements": 6,
            "too-many-statements": 8,
            "too-many-branches": 6,
            "broad-exception-caught": 2,
            "subprocess-run-check": 1,
            "reimported": 3,
            "wildcard-import": 1,
            "consider-using-from-import": 2,
            "consider-using-f-string": 3,
            "singleton-comparison": 2,
            "use-dict-literal": 1,
            "pointless-string-statement": 2,
            "attribute-defined-outside-init": 13,
            "too-few-public-methods": 21,
            "no-else-return": 11,
            "unused-argument": 21,
            "unnecessary-pass": 11,
            "import-outside-toplevel": 1,
            "raise-missing-from": 1,
            "f-string-without-interpolation": 13,
            "no-member": 1,
            "arguments-differ": 3,
            "bad-indentation": 2,
            "no-self-argument": 1,
            "super-init-not-called": 2,
            "signature-differs": 1,
            "duplicate-code": 9
        },
        "code_type_count": {
            "code": 0,
            "comment": 0,
            "docstring": 0,
            "empty": 0,
            "total": 0
        },
        "dependencies": {
            "packaging.version": [
                "keras_models"
            ]
        },
        "duplicated_lines": {
            "nb_duplicated_lines": 0,
            "percent_duplicated_lines": 0.0
        },
        "node_count": {
            "function": 84,
            "klass": 44,
            "method": 156,
            "module": 51
        },
        "undocumented": {
            "function": 23,
            "klass": 16,
            "method": 16,
            "module": 48
        },
        "convention": 538,
        "error": 298,
        "fatal": 0,
        "info": 0,
        "refactor": 93,
        "statement": 3056,
        "warning": 232,
        "global_note": 0,
        "nb_duplicated_lines": 85,
        "percent_duplicated_lines": 1.4214046822742474
    },
    "previous": {
        "bad_names": {
            "argument": 53,
            "attr": 2,
            "klass": 1,
            "class_attribute": 0,
            "class_const": 0,
            "const": 9,
            "inlinevar": 0,
            "function": 0,
            "method": 1,
            "module": 4,
            "variable": 81,
            "typevar": 0,
            "typealias": 0
        },
        "by_module": {
            "ADDMo.__init__": {
                "convention": 1,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "exe_model_testing": {
                "convention": 14,
                "error": 3,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 20,
                "warning": 7
            },
            "exe_data_insights": {
                "convention": 27,
                "error": 8,
                "fatal": 0,
                "info": 0,
                "refactor": 9,
                "statement": 125,
                "warning": 16
            },
            "exe_data_tuning_auto": {
                "convention": 7,
                "error": 11,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 79,
                "warning": 5
            },
            "exe_model_tuning": {
                "convention": 5,
                "error": 15,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 50,
                "warning": 5
            },
            "exe_recreate_data_tuning": {
                "convention": 7,
                "error": 8,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 36,
                "warning": 5
            },
            "exe_data_tuning_fixed": {
                "convention": 9,
                "error": 13,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 95,
                "warning": 7
            },
            "conf": {
                "convention": 0,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "test_abstractmodel": {
                "convention": 5,
                "error": 7,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 51,
                "warning": 1
            },
            "test_data_tuning": {
                "convention": 9,
                "error": 8,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 52,
                "warning": 7
            },
            "test_model_tuning": {
                "convention": 8,
                "error": 8,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 35,
                "warning": 3
            },
            "test_config_loading": {
                "convention": 9,
                "error": 4,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 43,
                "warning": 0
            },
            "E2E_test": {
                "convention": 15,
                "error": 9,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 41,
                "warning": 1
            },
            "app": {
                "convention": 102,
                "error": 15,
                "fatal": 0,
                "info": 0,
                "refactor": 16,
                "statement": 672,
                "warning": 27
            },
            "launch_GUI": {
                "convention": 4,
                "error": 1,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 9,
                "warning": 1
            },
            "parallel_plots": {
                "convention": 6,
                "error": 6,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 63,
                "warning": 1
            },
            "carpet_plots": {
                "convention": 48,
                "error": 15,
                "fatal": 0,
                "info": 0,
                "refactor": 9,
                "statement": 223,
                "warning": 16
            },
            "scatter_plot": {
                "convention": 5,
                "error": 2,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 17,
                "warning": 0
            },
            "plot_carpets_modelA": {
                "convention": 25,
                "error": 7,
                "fatal": 0,
                "info": 0,
                "refactor": 3,
                "statement": 103,
                "warning": 9
            },
            "time_series": {
                "convention": 5,
                "error": 5,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 51,
                "warning": 1
            },
            "feature_constructor": {
                "convention": 2,
                "error": 1,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 14,
                "warning": 1
            },
            "data_tuner_fixed": {
                "convention": 3,
                "error": 5,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 29,
                "warning": 6
            },
            "data_tuning_config": {
                "convention": 4,
                "error": 3,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 10,
                "warning": 1
            },
            "model_tuner": {
                "convention": 3,
                "error": 5,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 39,
                "warning": 0
            },
            "hyperparameter_tuning.hyparam_tuning_factory": {
                "convention": 2,
                "error": 5,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 14,
                "warning": 1
            },
            "hyperparameter_tuning.abstract_hyparam_tuner": {
                "convention": 1,
                "error": 3,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 10,
                "warning": 0
            },
            "hyperparameter_tuning.hyperparameter_tuner": {
                "convention": 3,
                "error": 7,
                "fatal": 0,
                "info": 0,
                "refactor": 3,
                "statement": 42,
                "warning": 6
            },
            "abstract_scorer": {
                "convention": 6,
                "error": 5,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 17,
                "warning": 1
            },
            "validator": {
                "convention": 8,
                "error": 5,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 15,
                "warning": 4
            },
            "validator_factory": {
                "convention": 3,
                "error": 4,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 11,
                "warning": 0
            },
            "metrics.custom_metrics": {
                "convention": 0,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "metrics.abstract_metric": {
                "convention": 1,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 2,
                "warning": 0
            },
            "metrics.metric_factory": {
                "convention": 1,
                "error": 3,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 16,
                "warning": 1
            },
            "validation_splitting.abstract_splitter": {
                "convention": 10,
                "error": 3,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 25,
                "warning": 0
            },
            "validation_splitting.custom_splitters": {
                "convention": 10,
                "error": 1,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 43,
                "warning": 10
            },
            "validation_splitting.splitter_factory": {
                "convention": 1,
                "error": 4,
                "fatal": 0,
                "info": 0,
                "refactor": 3,
                "statement": 19,
                "warning": 0
            },
            "model_tuning_config": {
                "convention": 7,
                "error": 2,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 29,
                "warning": 0
            },
            "keras_models": {
                "convention": 18,
                "error": 12,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 104,
                "warning": 7
            },
            "abstract_model": {
                "convention": 11,
                "error": 6,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 92,
                "warning": 30
            },
            "model_factory": {
                "convention": 7,
                "error": 8,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 55,
                "warning": 5
            },
            "scikit_learn_models": {
                "convention": 25,
                "error": 13,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 131,
                "warning": 12
            },
            "data_tuner_auto": {
                "convention": 4,
                "error": 6,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 32,
                "warning": 0
            },
            "feature_selection": {
                "convention": 14,
                "error": 9,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 71,
                "warning": 1
            },
            "feature_construction": {
                "convention": 4,
                "error": 9,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 30,
                "warning": 6
            },
            "config.data_tuning_auto_config": {
                "convention": 3,
                "error": 2,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 21,
                "warning": 1
            },
            "model_testing": {
                "convention": 17,
                "error": 16,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 97,
                "warning": 6
            },
            "load_save_utils": {
                "convention": 2,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 3,
                "statement": 51,
                "warning": 0
            },
            "load_save": {
                "convention": 17,
                "error": 2,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 50,
                "warning": 4
            },
            "definitions": {
                "convention": 7,
                "error": 4,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 55,
                "warning": 6
            },
            "plotting_utils": {
                "convention": 5,
                "error": 2,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 23,
                "warning": 6
            },
            "experiment_logger": {
                "convention": 22,
                "error": 8,
                "fatal": 0,
                "info": 0,
                "refactor": 5,
                "statement": 140,
                "warning": 5
            },
            "data_handling": {
                "convention": 6,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 9,
                "statement": 4,
                "warning": 0
            }
        },
        "by_msg": {
            "invalid-name": 151,
            "line-too-long": 193,
            "missing-module-docstring": 48,
            "redefined-builtin": 13,
            "import-error": 296,
            "missing-function-docstring": 39,
            "redefined-outer-name": 36,
            "unspecified-encoding": 25,
            "unused-import": 60,
            "trailing-newlines": 13,
            "fixme": 4,
            "multiple-imports": 2,
            "consider-using-with": 6,
            "too-many-arguments": 4,
            "too-many-locals": 19,
            "wrong-import-order": 37,
            "missing-final-newline": 15,
            "unused-variable": 16,
            "protected-access": 2,
            "missing-class-docstring": 16,
            "ungrouped-imports": 15,
            "trailing-whitespace": 2,
            "too-many-lines": 1,
            "inconsistent-return-statements": 6,
            "too-many-statements": 8,
            "too-many-branches": 6,
            "broad-exception-caught": 2,
            "subprocess-run-check": 1,
            "reimported": 3,
            "wildcard-import": 1,
            "consider-using-from-import": 2,
            "consider-using-f-string": 3,
            "singleton-comparison": 2,
            "use-dict-literal": 1,
            "pointless-string-statement": 2,
            "attribute-defined-outside-init": 13,
            "too-few-public-methods": 21,
            "no-else-return": 11,
            "unused-argument": 21,
            "unnecessary-pass": 11,
            "import-outside-toplevel": 1,
            "raise-missing-from": 1,
            "f-string-without-interpolation": 13,
            "no-member": 1,
            "arguments-differ": 3,
            "bad-indentation": 2,
            "no-self-argument": 1,
            "super-init-not-called": 2,
            "signature-differs": 1,
            "duplicate-code": 9
        },
        "code_type_count": {
            "code": 0,
            "comment": 0,
            "docstring": 0,
            "empty": 0,
            "total": 0
        },
        "dependencies": {
            "packaging.version": [
                "keras_models"
            ]
        },
        "duplicated_lines": {
            "nb_duplicated_lines": 0,
            "percent_duplicated_lines": 0.0
        },
        "node_count": {
            "function": 84,
            "klass": 44,
            "method": 156,
            "module": 51
        },
        "undocumented": {
            "function": 23,
            "klass": 16,
            "method": 16,
            "module": 48
        },
        "convention": 538,
        "error": 298,
        "fatal": 0,
        "info": 0,
        "refactor": 93,
        "statement": 3056,
        "warning": 232,
        "global_note": 2.300392670157068,
        "nb_duplicated_lines": 85,
        "percent_duplicated_lines": 1.4214046822742474
    }
}
